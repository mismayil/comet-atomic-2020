{"generation": "PersonX takes things for granted. Before, PersonX needs to be able to talk to people", "references": ["to have been lazy at work", "to have wasted resources", "none", "to have used their money on unnecessary things"], "input": {"head": "PersonX takes things for granted", "relation": "xNeed"}}
{"generation": "PersonX calls PersonY ambulance. Before, PersonX needs to call PersonY to get the ambulance", "references": ["get the phone", "recognize the person needs an ambulance", "to see Person Y is hurt.", "to get a phone.", "none"], "input": {"head": "PersonX calls PersonY ambulance", "relation": "xNeed"}}
{"generation": "PersonX pleases ___ to make. After, PersonX will want to make a new one", "references": ["to say thanks for making it", "to eat it", "to produce something", "to be in their good graces"], "input": {"head": "PersonX pleases ___ to make", "relation": "xWant"}}
{"generation": "PersonX shoves PersonY back. The effect on PersonX will be reversed", "references": ["is physical", "none", "is violent"], "input": {"head": "PersonX shoves PersonY back", "relation": "xEffect"}}
{"generation": "PersonX dates for years. After, PersonX will want to know if you are a member of the group", "references": ["to keep in contact for 2nd dates", "to propose", "to go to the movies", "to go to dinner", "to get married"], "input": {"head": "PersonX dates for years", "relation": "xWant"}}
{"generation": "PersonX covers every aspect. Before that, he's been a writer for the New York Times", "references": ["PersonX researches an article about current events"], "input": {"head": "PersonX covers every aspect", "relation": "isAfter"}}
{"generation": "PersonX wants to go. Before that, he's been working on his own project", "references": ["PersonX sees a flyer for a festival"], "input": {"head": "PersonX wants to go", "relation": "isAfter"}}
{"generation": "PersonX hits by lightning. The effect on PersonX will be reversed if the player is in the same room as", "references": ["Has heart attack", "goes to the hospital", "Has hair burned", "gets hurt"], "input": {"head": "PersonX hits by lightning", "relation": "xEffect"}}
{"generation": "PersonX finally meet PersonY. Before, PersonX needs to find a way to get PersonY to join the", "references": ["ask friend to be introduced to PersonY", "Get dressed", "Find person", "to search for person Y", "travels to meet PersonY", "to be away from person Y for sometime"], "input": {"head": "PersonX finally meet PersonY", "relation": "xNeed"}}
{"generation": "a chain can be used for a number of reasons", "references": ["hold the swing", "put around it", "lock up a vicious pet.", "make spooky noises in a haunted house", "attach the mooring", "lock the bike", "lock up the bike while they look around", "hold something on the wall", "to chain bicycle to the bicycle rack", "take with them", "decorate the house", "hold down a garage door without locks.", "take off", "keep pick-pockets from stealing their wallet", "pull the car", "hold their spectacles on their neck", "hold the key", "catch pants on", "connect the truck and the car", "lock it up", "hook it up too", "tug on a truck"], "input": {"head": "chain", "relation": "ObjectUse"}}
{"generation": "PersonX asks PersonY to sit. PersonX is not happy with the way PersonY is behaving", "references": ["nice", "dominating", "helpful", "authoritative", "controlling", "commanding"], "input": {"head": "PersonX asks PersonY to sit", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is not a good person", "personX is not sure of what they have in common", "personX doesn't know how to approach them", "They have nothing in common"], "input": {"head": "PersonX makes PersonY connection", "relation": "HinderedBy"}}
{"generation": "PersonX saves PersonY's people. The effect on others will be different", "references": ["none", "becomes grateful", "cheers with happiness", "sighs in relief"], "input": {"head": "PersonX saves PersonY's people", "relation": "oEffect"}}
{"generation": "PersonX buys PersonY's wife ___. After, others will want to know who is the real person", "references": ["to thank the presenter", "to treat the person"], "input": {"head": "PersonX buys PersonY's wife ___", "relation": "oWant"}}
{"generation": "PersonX faces ___ today. As a result, others feel that they are being unfairly targeted", "references": ["unhappy", "none"], "input": {"head": "PersonX faces ___ today", "relation": "oReact"}}
{"generation": "PersonX leaves PersonY's alone. Before, PersonX needs to be able to talk to PersonY, but Person", "references": ["to end the conversation", "to know personY", "to be aware of his problems", "to realize that it's over"], "input": {"head": "PersonX leaves PersonY's alone", "relation": "xNeed"}}
{"generation": "PersonX finds another job. Before that, he's been working at a restaurant in the city", "references": ["PersonX is unemployed"], "input": {"head": "PersonX finds another job", "relation": "isAfter"}}
{"generation": "eel is a very good player", "references": ["no legs"], "input": {"head": "eel", "relation": "HasProperty"}}
{"generation": "PersonX enjoys PersonY's class. Before, PersonX needs to be able to talk to PersonY", "references": ["take the class", "go to the class", "to be well acquainted with PersonY way of teaching", "to attend class"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xNeed"}}
{"generation": "PersonX blows through town. Before that, he's been in the hospital for a while,", "references": ["PersonX is driving a fast car"], "input": {"head": "PersonX blows through town", "relation": "isAfter"}}
{"generation": "PersonX builds muscle. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX builds muscle", "relation": "oReact"}}
{"generation": "PersonX sees PersonY's brother. PersonX is a bit confused as to why PersonY is so", "references": ["Attentive", "Bored", "Playful", "sociable", "Compassionate", "visual"], "input": {"head": "PersonX sees PersonY's brother", "relation": "xAttr"}}
{"generation": "PersonX takes PersonY up on the offer. After, others will want to know what's going on", "references": ["to thank PersonX", "to impress PersonX", "to walk away with what they accepted", "to shake PersonX's hands", "to have them as a partner.", "to promise PersonX they won't regret"], "input": {"head": "PersonX takes PersonY up on the offer", "relation": "oWant"}}
{"generation": "PersonX spends all of PersonY's money. After that, he spends all of PersonY's money", "references": ["PersonX tries to find other people to steal money from", "PersonX brings back all of the items they bought"], "input": {"head": "PersonX spends all of PersonY's money", "relation": "isBefore"}}
{"generation": "PersonX gets PersonX's makeup done. PersonX will be wearing the same outfit as PersonX", "references": ["hopeful", "happy", "good", "relieved", "confident", "proud"], "input": {"head": "PersonX gets PersonX's makeup done", "relation": "xReact"}}
{"generation": "PersonX takes PersonY decision. PersonX is the one who decides who gets to be the next", "references": ["nosy", "dependent", "disrispectful", "thoughtful", "cooperating", "open"], "input": {"head": "PersonX takes PersonY decision", "relation": "xAttr"}}
{"generation": "PersonX gives PersonY an f. After, others will want to know what the fuck you're doing", "references": ["Demand a retake", "to retake the test", "Study harder", "to study harder", "to study with x", "to strive for better grades"], "input": {"head": "PersonX gives PersonY an f", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX didn't reserve a campground.", "PersonX can't get time off of work to go.", "PersonX is already on the way to a festival", "PersonX has no tent", "PersonX's boss did not grant him time off.", "PersonX is recovering from an injury from an accident.", "PersonX can't find their tent", "PersonX's boss fired him and he has no money to go camping."], "input": {"head": "PersonX is going on a camping trip", "relation": "HinderedBy"}}
{"generation": "PersonX visits PersonX's mother's ___. PersonX is a member of the group", "references": ["capable", "social", "emotional", "nostalgic", "connected", "happy"], "input": {"head": "PersonX visits PersonX's mother 's ___", "relation": "xAttr"}}
{"generation": "PersonX has many friends. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX has many friends", "relation": "oEffect"}}
{"generation": "PersonX uses the restroom. As a result, others feel uncomfortable", "references": ["none"], "input": {"head": "PersonX uses the restroom", "relation": "oReact"}}
{"generation": "PersonX waits for PersonY answer. PersonX will be the one who answered the question", "references": ["good answer", "anxious", "stressed"], "input": {"head": "PersonX waits for PersonY answer", "relation": "xReact"}}
{"generation": "PersonX sees what happened. After, others will want to know what happened", "references": ["none"], "input": {"head": "PersonX sees what happened", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX cannot afford the eggs.", "PersonX does not have a bowl", "PersonY left the eggs out and now they are spoiled", "The eggs are broken.", "There is no hard surface", "PersonY boiled all the eggs", "The eggs are hard boiled", "PersonX has run out of eggs"], "input": {"head": "PersonX cracks the eggs", "relation": "HinderedBy"}}
{"generation": "PersonX finally got ___. After, others will want to know what the hell is going on", "references": ["to show person x where her desk is located", "none", "to have person x fill out the required new hire documents"], "input": {"head": "PersonX finally got ___", "relation": "oWant"}}
{"generation": "PersonX inflicts ___ on others. PersonX did this to me", "references": ["hurtful & uncaring.", "to be domineering"], "input": {"head": "PersonX inflicts ___ on others", "relation": "xIntent"}}
{"generation": "PersonX says goodnight. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX says goodnight", "relation": "oEffect"}}
{"generation": "PersonX wants PersonY to come. As a result, others feel that PersonX is too much of a jerk to", "references": ["happy to see x", "happy that x wants them"], "input": {"head": "PersonX wants PersonY to come", "relation": "oReact"}}
{"generation": "PersonX goes about PersonX's work. After, PersonX will want to know what PersonX is doing", "references": ["Get ready to do more work.", "Relax after the work.", "to keep his job.", "to succeed."], "input": {"head": "PersonX goes about PersonX's work", "relation": "xWant"}}
{"generation": "PersonX buys one. After, others will want to buy it", "references": ["none"], "input": {"head": "PersonX buys one", "relation": "oWant"}}
{"generation": "PersonX rids horses. Before that, he was a member of the team that won the", "references": ["PersonX needs a new hobby"], "input": {"head": "PersonX rids horses", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has a heart condition.", "PersonX has anxiety about being too active.", "The waiter gave PersonX caffeinated coffee on accident.", "The doctor just gave PersonX a shot of adrenaline.", "Person X is on meth.", "PersonX is in a wheelchair and can't be active.", "PersonX can't leave their desk.", "They have hyperthyroidism.", "The nurse told PersonX they needed to stay on bed rest.", "Person X is superman.", "They have too much energy."], "input": {"head": "PersonX gets worn out", "relation": "HinderedBy"}}
{"generation": "PersonX treats ___ in children. PersonX is a child-rearing organization that has been around", "references": ["altruistic", "educated", "passionate", "loving", "intelligent"], "input": {"head": "PersonX treats ___ in children", "relation": "xAttr"}}
{"generation": "PersonX makes PersonY assault. Before, PersonX needs to be able to attack PersonY, but PersonY", "references": ["give them orders to assault", "give PersonY a weapon", "to know personY", "to get a weapon", "to have a reason why", "to approach PersonY"], "input": {"head": "PersonX makes PersonY assault", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX feels bad for the kids.", "PersonX is too scared of retaliation", "PersonX's husband is violent and would hunt PersonX down.", "PersonX has no money"], "input": {"head": "PersonX leaves PersonX's husband", "relation": "HinderedBy"}}
{"generation": "PersonX makes the team. PersonX is a very good player, but he's not a", "references": ["accomplished", "hardworking", "talented", "ecstatic", "impressive"], "input": {"head": "PersonX makes the team", "relation": "xAttr"}}
{"generation": "an oven dial can be used for the dial", "references": ["glue onto a hat as a fashionable accessory", "burn down a house", "turn the temperature up", "replace a broken radio dial", "turn the heat off", "use as a timer", "pre-heat the over before cooking", "adjust temperature", "warm up a home", "to get something done real quick"], "input": {"head": "oven dial", "relation": "ObjectUse"}}
{"generation": "You are likely to find a cabbage in a salad or a salad dressing", "references": ["supermarket", "freezer", "market", "plate", "grocery store"], "input": {"head": "cabbage", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["personX does not have the ingredients", "PersonX's stove is not working", "There are other people in the way.", "PersonX doesn't have some of the ingredients he needs", "Person Y is ignoring Person X.", "The stove is broken"], "input": {"head": "PersonX tries a new recipe", "relation": "HinderedBy"}}
{"generation": "PersonX drives PersonY's car to work. After that, he drives PersonY to the hospital", "references": ["PersonX fills PersonY's car with gas as a thank you", "PersonX crashes car"], "input": {"head": "PersonX drives PersonY's car to work", "relation": "isBefore"}}
{"generation": "You are likely to find a handkerchief in a drawer or a drawer-type drawer", "references": ["purse"], "input": {"head": "handkerchief", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX cannot afford new clothing.", "PersonX's spouse does not want PersonX to change.", "PersonX has never seen the thing they want to look like.", "PersonX doesn't know how to sew the costume they need.", "They have too many distinct features.", "PersonX is too much of a human."], "input": {"head": "PersonX looks like something", "relation": "HinderedBy"}}
{"generation": "You are likely to find an orchestra pit in a park, or a park bench, or a park", "references": ["theatre", "butt", "opera house", "hollywood bowl", "auditorium", "severance hall in cleveland", "orchestra cherry", "opera", "concert theater", "concert hall"], "input": {"head": "orchestra pit", "relation": "AtLocation"}}
{"generation": "PersonX enjoys life. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX enjoys life", "relation": "oWant"}}
{"generation": "PersonX breaks the news to PersonY. After, others will want to know what's going on", "references": ["to tell other people the good news", "to congratulate them", "to cry.", "to hug person X.", "to yell."], "input": {"head": "PersonX breaks the news to PersonY", "relation": "oWant"}}
{"generation": "PersonX gets dressed for school. PersonX did this to her", "references": ["to go to school on time", "to get ready to go to school", "to feel comfortable", "to wear an outfit they like"], "input": {"head": "PersonX gets dressed for school", "relation": "xIntent"}}
{"generation": "PersonX grinds ___ for a week is filled by a lot of people who are just trying to get", "references": ["schoolwork", "diamonds", "spices", "metal", "books", "rocks", "coffee", "corn", "reading", "grain", "wheat", "kava"], "input": {"head": "PersonX grinds ___ for a week", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is too memorable for PersonX to forget.", "PersonX is still married to PersonY."], "input": {"head": "PersonX wipes PersonY away", "relation": "HinderedBy"}}
{"generation": "PersonX skateboards with PersonY's friends. The effect on others will be different", "references": ["shakes head in jealously", "none", "frowns"], "input": {"head": "PersonX skateboards with PersonY's friends", "relation": "oEffect"}}
{"generation": "PersonX covers the ___ completely is filled by the same people who are the most important people in", "references": ["table", "couch", "field", "food", "car", "spread", "blanket", "window", "pool", "blood", "patio", "wall", "picnic", "cupboard", "phone", "bed"], "input": {"head": "PersonX covers the ___ completely", "relation": "isFilledBy"}}
{"generation": "PersonX sends a letter. As a result, others feel that they are being treated unfairly", "references": ["happy", "curious", "loved", "informed", "interested"], "input": {"head": "PersonX sends a letter", "relation": "oReact"}}
{"generation": "PersonX shakes the ___ to PersonY's foundations. As a result, others feel the same way", "references": ["scared", "surprised", "fearful", "stupid"], "input": {"head": "PersonX shakes the ___ to PersonY's foundations", "relation": "oReact"}}
{"generation": "PersonX looks like figure. PersonX is a character from the anime", "references": ["statuesque", "pretty", "beautiful", "stoic", "handsome", "immobile", "attractive"], "input": {"head": "PersonX looks like figure", "relation": "xAttr"}}
{"generation": "PersonX makes perfect sense. The effect on others will be different", "references": ["gains new knowledge", "becomes inquisitive"], "input": {"head": "PersonX makes perfect sense", "relation": "oEffect"}}
{"generation": "PersonX makes up the numbers. PersonX did this to show that the number of people who are in the", "references": ["to look good", "to show off skills", "to be productive"], "input": {"head": "PersonX makes up the numbers", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY's family lives very far and can not travel.", "There is a storm and all planes are grounded.", "PersonY's family has a stomach bug.", "PersonX's car is too small to fit everyone.", "PersonY's family has to work.", "PersonY's family is out of town."], "input": {"head": "PersonX brings PersonY's family", "relation": "HinderedBy"}}
{"generation": "PersonX takes a step back. After, PersonX will want to know what the hell is going on", "references": ["to take a step backward.", "to escape being bit by a snake", "place foot on the ground.", "rebalance themselves", "run away", "to avoid embarrassing people"], "input": {"head": "PersonX takes a step back", "relation": "xWant"}}
{"generation": "PersonX gets pizza. After that, he gets a pizza", "references": ["PersonX drives to pickup the pizza"], "input": {"head": "PersonX gets pizza", "relation": "isBefore"}}
{"generation": "PersonX puts bread in the toaster. Before, PersonX needs to make sure that the bread is in the oven", "references": ["open toaster", "to take bread out of packet", "to buy bread", "make bread"], "input": {"head": "PersonX puts bread in the toaster", "relation": "xNeed"}}
{"generation": "PersonX prevents PersonY's escape. As a result, others feel that PersonX is a threat to them", "references": ["mad.", "person y will feel mad.", "trapped", "foiled"], "input": {"head": "PersonX prevents PersonY's escape", "relation": "oReact"}}
{"generation": "PersonX sets the ___ in a roar is filled by the sound of a large, loud, and powerful", "references": ["concert", "stage", "lion", "crowd", "fire", "tiger"], "input": {"head": "PersonX sets the ___ in a roar", "relation": "isFilledBy"}}
{"generation": "PersonX loses easily. Before that, he was able to beat the game with a single", "references": ["PersonX attends game night", "PersonX plays a game of dominoes", "PersonX plays a game of poker"], "input": {"head": "PersonX loses easily", "relation": "isAfter"}}
{"generation": "PersonX holds PersonY back. After that, PersonX is able to get PersonY to stop", "references": ["PersonX gets scratched"], "input": {"head": "PersonX holds PersonY back", "relation": "isBefore"}}
{"generation": "PersonX tips PersonY's head. PersonX is the one who is the one who is the one", "references": ["humorous", "aggressive", "mean", "silly"], "input": {"head": "PersonX tips PersonY's head", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person Y always stays far away from Person X.", "PersonY has too good of an immune system.", "PersonX does not know how to transmit an illness to someone.", "PersonX doesn't have any poison.", "PersonY lives 5000 miles away.", "Person X is unsure of how to make Person Y sick."], "input": {"head": "PersonX makes PersonY very sick", "relation": "HinderedBy"}}
{"generation": "PersonX affects PersonY's lives. Before that, you can't use PersonX to change your own", "references": ["PersonX hits PersonY with their car"], "input": {"head": "PersonX affects PersonY's lives", "relation": "isAfter"}}
{"generation": "PersonX puts PersonY to death. Before that, he was a member of the team that defeated the", "references": ["PersonX fights PersonY on the bridge"], "input": {"head": "PersonX puts PersonY to death", "relation": "isAfter"}}
{"generation": "PersonX tries PersonX's ___ at making. Before, PersonX needs to make a decision about whether or not to use Person", "references": ["to know what they want to do", "pick up personX's supplies", "go to personX's house", "to be adventurous"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "xNeed"}}
{"generation": "a cat carrier can be used for a long time", "references": ["make sure a cat doesn't run away", "hold an iguana", "teach proper technique to vets", "Pack things in it", "Hold the door open", "carry cat on plane"], "input": {"head": "cat carrier", "relation": "ObjectUse"}}
{"generation": "PersonX practices very hard. Before that, he was a very good player", "references": ["PersonX bought instruments to practice with"], "input": {"head": "PersonX practices very hard", "relation": "isAfter"}}
{"generation": "PersonX visits ___ every day. Before, PersonX needs to be able to talk to you", "references": ["car", "clothes", "get address", "travel", "none"], "input": {"head": "PersonX visits ___ every day", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They broke their foot.", "Person Y does not like Person X.", "they are to faraway", "can't get their attention", "PersonX cannot find PersonY.", "PersonY ran away and hid."], "input": {"head": "PersonX gives PersonY warning", "relation": "HinderedBy"}}
{"generation": "PersonX invites PersonY to play. PersonX will be playing the game", "references": ["happy", "pleased"], "input": {"head": "PersonX invites PersonY to play", "relation": "xReact"}}
{"generation": "PersonX learns the printer's ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["have a good effect", "begins incorporating the teachings into their work flow", "gain knowledge on the craft", "learn more and more"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xEffect"}}
{"generation": "PersonX thinks of a solution. PersonX will be able to use the same data as the user,", "references": ["like they have came to a good solution", "accomplished", "successful", "intelligent"], "input": {"head": "PersonX thinks of a solution", "relation": "xReact"}}
{"generation": "a number pad can be used for the following purposes:\n\nThe number pad can", "references": ["teach math", "fill out accountant information", "communicate with a kid", "type a phone number", "press the husband's number with", "use as prop in a movie", "make coded messages", "key in digits", "punch in the number"], "input": {"head": "number pad", "relation": "ObjectUse"}}
{"generation": "PersonX washes PersonY's car. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX washes PersonY's car", "relation": "oEffect"}}
{"generation": "PersonX breaks wind. After, PersonX will want to go to the next room", "references": ["Apologize for breaking wind", "Attempt to minimize the odors that accompany flatulence (fanning, spraying air freshener, opening windows)"], "input": {"head": "PersonX breaks wind", "relation": "xWant"}}
{"generation": "PersonX meets PersonX's standards. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX meets PersonX's standards", "relation": "oReact"}}
{"generation": "PersonX goes from zero to hero. Before, PersonX needs to be a hero to be able to do what he", "references": ["assess a situation", "to work hard", "to put in much efforts", "saves the day", "hit rock bottom", "react to save a situation", "observes dangerous event", "develop a work ethic", "find a situation to be heroic in", "be at zero"], "input": {"head": "PersonX goes from zero to hero", "relation": "xNeed"}}
{"generation": "You are likely to find a body builder in a similar situation", "references": ["gym"], "input": {"head": "body builder", "relation": "AtLocation"}}
{"generation": "PersonX cann't believe PersonY's luck. As a result, others feel that they are being cheated", "references": ["happy", "none", "very happy"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "oReact"}}
{"generation": "PersonX sends another ___. PersonX is the same as PersonX", "references": ["hopeful", "generous", "needy", "excited", "helpful", "anxious"], "input": {"head": "PersonX sends another ___", "relation": "xAttr"}}
{"generation": "PersonX handles the situation. Before that, he's just a guy who's just trying to", "references": ["PersonX sees a fight break out"], "input": {"head": "PersonX handles the situation", "relation": "isAfter"}}
{"generation": "PersonX changes ___ quickly. As a result, others feel that they are being ignored", "references": ["confused and angry", "none"], "input": {"head": "PersonX changes ___ quickly", "relation": "oReact"}}
{"generation": "PersonX spills the tea. After that, he's back to his usual self", "references": ["PersonX looks for a rag to clean it up", "PersonX cleans up the tea"], "input": {"head": "PersonX spills the tea", "relation": "isBefore"}}
{"generation": "PersonX asks PersonX's grandmother. PersonX will be able to tell her that she is a member of", "references": ["useful"], "input": {"head": "PersonX asks PersonX's grandmother", "relation": "xReact"}}
{"generation": "PersonX is in a good mood. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX is in a good mood", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have a car.", "PersonX broke their nails", "PersonX doesn't have the money.", "PersonX's boss fired her, so she cannot afford a pedicure.", "PersonX's salon owner will not let her in.", "PersonX lost their arm", "PersonX has been preparing a dinner party.", "PersonX's nails got ripped off by a violent man.", "PersonX attends a swimming class."], "input": {"head": "PersonX gets PersonX's nails done", "relation": "HinderedBy"}}
{"generation": "PersonX wants to be a rapper. Before that, he was a rapper", "references": ["PersonX raps every day"], "input": {"head": "PersonX wants to be a rapper", "relation": "isAfter"}}
{"generation": "PersonX spares no effort. PersonX will be able to use the same tools as you, but", "references": ["accomplished", "lazy", "like they didn't do their best", "frustrated because of failing anyway.", "happy at doing what it took to finish a task.", "unmotivated", "satisfied"], "input": {"head": "PersonX spares no effort", "relation": "xReact"}}
{"generation": "PersonX keeps straight. After that, he's just a guy who's just a guy", "references": ["PersonX makes it home on time"], "input": {"head": "PersonX keeps straight", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is too close.", "PersonX has binoculars.", "Person Y needs to remain in their eyesight becase Person X is their parent.", "PersonX promised to take care of PersonY.", "PersonY sticks too close to PersonX.", "Person X is bound by the law not to neglect their kids."], "input": {"head": "PersonX loses sight of PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX invites PersonY to play. PersonX is a very good player, and PersonY is a", "references": ["inviting", "playful", "generous", "active", "sociable", "friendly"], "input": {"head": "PersonX invites PersonY to play", "relation": "xAttr"}}
{"generation": "PersonX hides under the covers. After, others will want to see him", "references": ["none"], "input": {"head": "PersonX hides under the covers", "relation": "oWant"}}
{"generation": "PersonX moves toward the door. Before that, he's already been through the door", "references": ["PersonX puts on his shoes"], "input": {"head": "PersonX moves toward the door", "relation": "isAfter"}}
{"generation": "a gear can be used for a variety of purposes", "references": ["pack up", "protect head and body", "protect against injury", "invent new mechanics", "protect from injury", "protect against parents wrath", "keep jewlery separate", "protect yourself", "prevent injury and bites", "protect body", "prevent stings", "use for protection", "protect hands", "protect body from injury", "prepare the baby to go home", "keep yourself dry", "as stencil", "protect from bullets", "wear to the gym", "Keep body safe", "protect self from injuries", "fix a clock", "protect self from injury", "load into car", "display team colors", "climb safely", "protect body in case of accident"], "input": {"head": "gear", "relation": "ObjectUse"}}
{"generation": "PersonX fails PersonX's math class. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX fails PersonX's math class", "relation": "xIntent"}}
{"generation": "You are likely to find a heater in a garage or garage lot", "references": ["house", "office", "dwelling", "cold places", "automobile", "someplace cold", "public building", "pocket at football game", "garage", "electrical goods store", "home"], "input": {"head": "heater", "relation": "AtLocation"}}
{"generation": "PersonX buys ___, though. PersonX will be able to buy the same item for $1", "references": ["neutral", "good because they wanted it", "happy", "relieved", "satisfied"], "input": {"head": "PersonX buys ___ , though", "relation": "xReact"}}
{"generation": "PersonX moves every ___. PersonX did this to the other person", "references": ["none"], "input": {"head": "PersonX moves every ___", "relation": "xIntent"}}
{"generation": "PersonX leaves PersonX's book. Before that, he leaves PersonX's book", "references": ["PersonX shamelessly plugs their book at a funeral", "PersonX reads on the train"], "input": {"head": "PersonX leaves PersonX's book", "relation": "isAfter"}}
{"generation": "PersonX watches ___ anymore is filled by the same people who are watching you", "references": ["the play", "soccer", "football", "television"], "input": {"head": "PersonX watches ___ anymore", "relation": "isFilledBy"}}
{"generation": "PersonX always asked ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["PersonX is a creature of habit", "PersonX learns a new routine", "is avoided", "is looked down upon"], "input": {"head": "PersonX always asked ___", "relation": "xEffect"}}
{"generation": "PersonX is excited and nervous. Before, PersonX needs to be able to talk to her", "references": ["to hear they got the job", "to hear some good news", "to get invited for an interview"], "input": {"head": "PersonX is excited and nervous", "relation": "xNeed"}}
{"generation": "PersonX affects PersonY's lives. After that, PersonX will be able to change the world", "references": ["PersonX pays for PersonY's hospital bills"], "input": {"head": "PersonX affects PersonY's lives", "relation": "isBefore"}}
{"generation": "PersonX earns money. After, PersonX will want to buy a new car", "references": ["to spend the money", "to give some to charity", "To have success", "To be successful", "to save money", "to open an account.", "to spend money"], "input": {"head": "PersonX earns money", "relation": "xWant"}}
{"generation": "PersonX leans back in PersonY's seat. Before that, she's leaning back in the seat of the car", "references": ["PersonX sits in PersonY's seat"], "input": {"head": "PersonX leans back in PersonY's seat", "relation": "isAfter"}}
{"generation": "PersonX sees ___ away. After, PersonX will want to know what the hell is going on", "references": ["talk to the other", "to go back inside", "approach the other", "to scream", "to get some rest", "to get away"], "input": {"head": "PersonX sees ___ away", "relation": "xWant"}}
{"generation": "PersonX tells PersonY to say. The effect on PersonX will be the same as the effect on PersonY", "references": ["none"], "input": {"head": "PersonX tells PersonY to say", "relation": "xEffect"}}
{"generation": "PersonX throws the food. PersonX did this to the other two people", "references": ["to start a food fight", "to humiliate the server", "to show disatisfaction"], "input": {"head": "PersonX throws the food", "relation": "xIntent"}}
{"generation": "PersonX becomes smarter. As a result, others feel more comfortable with her", "references": ["none"], "input": {"head": "PersonX becomes smarter", "relation": "oReact"}}
{"generation": "PersonX wants PersonY to come. The effect on PersonX will be the same as the effect on PersonY", "references": ["begs", "searches  for persony", "thinks about persony", "asks Person Y"], "input": {"head": "PersonX wants PersonY to come", "relation": "xEffect"}}
{"generation": "a mailbox can be used for a number of purposes", "references": ["get letters in", "accept donations", "sending signal to mailman", "Receive the letter in", "get an invitation from", "receiving mail", "having as milestone", "send letters", "collecting junk mail", "curbside decoration", "get the invite", "pull the letter out", "receive invitations", "check for mail", "check their mail", "people to post letters into", "receive the invitations", "get the letter", "bills", "protecting mail", "send the mail", "check if there is any mail today", "receiving local newspaper", "open and get the envelopes", "sending letters", "receiving packages from usps", "have the letter delivered through", "put mail in", "Receive the item", "receive the item in the mail", "Receive letter in", "get mail in", "postman to put leters ino", "get the mail out of", "get mail", "go to", "receive camera after delivery", "receive support", "surrounding with growing flowers", "receiving email", "mail the answer", "have the mail put in", "inside to separate mail", "receiving snail mail", "receiving bills", "receive bills and letters in", "sending packages", "receive deliveries", "receive small packages in", "recieving mail", "get a letter from", "open for a letter", "receive letters", "mix sangria in", "birdhouse", "send bills", "put the flag up", "send letter via usps", "sending mail", "receive card", "get correspondence", "open and check to see if they got mail", "retrieve the invitation", "open to get the letter", "receive the package", "receive a card", "mail", "put the notice in", "mail a change of address", "receive invitation", "put their package in", "take out aggression", "receive the mail", "recieve the diploma in the mail", "mailman to deliver mail", "receiving posted mail", "Place award in", "communication", "receiving letters", "retrieve mail with", "storing mail", "plant flowers in", "letters", "Receive shipment with", "send draft to publisher", "receive the letter", "have correspondence delivered to", "posting letters"], "input": {"head": "mailbox", "relation": "ObjectUse"}}
{"generation": "PersonX also stopped. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX also stopped", "relation": "oEffect"}}
{"generation": "PersonX makes ___ every year is filled by a lot of people who are not even aware of", "references": ["muffins", "paintings", "pie", "birthday cake", "sculptures", "money", "candy", "jelly", "wreaths", "turkey", "cake", "feast", "popcorn"], "input": {"head": "PersonX makes ___ every year", "relation": "isFilledBy"}}
{"generation": "PersonX goes to great lengths. After that, he's a bit of a jerk", "references": ["PersonX buys a t-shirt and hat for the band"], "input": {"head": "PersonX goes to great lengths", "relation": "isBefore"}}
{"generation": "PersonX gets a shot. PersonX is a little bit more aggressive, but he's still", "references": ["pragmatic", "Proactive", "young", "nervous", "afraid", "Healthy", "responsible"], "input": {"head": "PersonX gets a shot", "relation": "xAttr"}}
{"generation": "a congregation contains a large number of people who are not religious", "references": ["people"], "input": {"head": "congregation", "relation": "MadeUpOf"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["If personX does not listen he will be punichsed.", "PersonX's is required to be in class by the teacher", "The other person is talking to loud.", "PersonX's boss is too loud to ignore", "PersonX is having music blasted into their ear.", "PersonX has to obey his parole officer.", "PersonX is being paid to listen.", "PersonX is being forced to listen."], "input": {"head": "PersonX refuses to listen", "relation": "HinderedBy"}}
{"generation": "PersonX meets ___ for lunch is filled by a bunch of people who are all about the same", "references": ["teacher", "persony"], "input": {"head": "PersonX meets ___ for lunch", "relation": "isFilledBy"}}
{"generation": "PersonX maintains PersonY equilibrium. After, others will want to know who is the best person to be with", "references": ["to be helped", "to have good balance", "to say thanks", "sit down", "go to doctor", "to help them also"], "input": {"head": "PersonX maintains PersonY equilibrium", "relation": "oWant"}}
{"generation": "PersonX goes ___ with PersonX's mom. PersonX is a little bit of a jerk, but she's", "references": ["social", "concerned", "decisive", "helpful", "friendly"], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "xAttr"}}
{"generation": "PersonX saves PersonY's people. After, others will want to kill PersonX", "references": ["to give PersonX an award", "keep the people safe", "to stay safe", "to calm down", "to make PersonX the chief of the army", "thank personX"], "input": {"head": "PersonX saves PersonY's people", "relation": "oWant"}}
{"generation": "You are likely to find a library card in a library that you have already purchased", "references": ["library"], "input": {"head": "library card", "relation": "AtLocation"}}
{"generation": "PersonX puts ___ in PersonX's backpack is filled by the same thing as the backpack", "references": ["pencil", "pens", "pencils", "a book", "homework", "notebook", "notebooks", "folder", "a notebook", "folders", "book"], "input": {"head": "PersonX puts ___ in PersonX's backpack", "relation": "isFilledBy"}}
{"generation": "PersonX decides to drive home. Before that, he's got a few questions", "references": ["PersonX finishes drinking at a bar", "PersonX was drunk"], "input": {"head": "PersonX decides to drive home", "relation": "isAfter"}}
{"generation": "PersonX gets second place. PersonX is the only person who has won the game", "references": ["daring", "competitive", "Rolling", "Notable", "competent", "resilliant"], "input": {"head": "PersonX gets second place", "relation": "xAttr"}}
{"generation": "PersonX needs a bath. Before, PersonX needs to be in a bath", "references": ["none", "get dirty", "play in mud"], "input": {"head": "PersonX needs a bath", "relation": "xNeed"}}
{"generation": "PersonX overflows PersonY's banks. PersonX will be able to use the same bank as PersonY", "references": ["bad for causing the overflow"], "input": {"head": "PersonX overflows PersonY's banks", "relation": "xReact"}}
{"generation": "PersonX changes ___ quickly is filled by the fact that he's a very good player", "references": ["clothing", "Shoes", "Socks", "his clothes", "papers", "cars", "socks", "gloves", "Clothes", "hats", "shoes", "clothes", "diapers", "money", "underwear", "wigs", "panties", "bra", "shirts", "dresses"], "input": {"head": "PersonX changes ___ quickly", "relation": "isFilledBy"}}
{"generation": "PersonX gets PersonX's dad. Before, PersonX needs to be able to talk to PersonX", "references": ["to look for gifts", "to to dad's house", "none", "to buy the gift", "to travel with dad in car"], "input": {"head": "PersonX gets PersonX's dad", "relation": "xNeed"}}
{"generation": "PersonX gets something for nothing. PersonX is a character who is a bit of a jerk", "references": ["skillful", "resourceful", "sad", "miserly", "regretful", "selfish"], "input": {"head": "PersonX gets something for nothing", "relation": "xAttr"}}
{"generation": "PersonX wins the prize. Before that, he was the only person who could win the prize", "references": ["PersonX enters a competition"], "input": {"head": "PersonX wins the prize", "relation": "isAfter"}}
{"generation": "PersonX gives PersonY's name. Before, PersonX needs to know PersonY's name", "references": ["to hate person Y", "to know the persons abilities", "to know person Y's name", "to have enough faith in the to recommend"], "input": {"head": "PersonX gives PersonY's name", "relation": "xNeed"}}
{"generation": "PersonX loses PersonY temper. After, PersonX will want to kill PersonY", "references": ["to mock personY", "to laugh about it", "to get away from PersonY.", "to explain that it wasn't PersonX's fault."], "input": {"head": "PersonX loses PersonY temper", "relation": "xWant"}}
{"generation": "PersonX learns the printer's ___. PersonX will be able to print the printer's name and the printer", "references": ["knowledgeable", "enlightened"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can't change time.", "PersonX can't go back in time.", "PersonX is only 4 years old.", "PersonX doesn't have a birthday for 6 months.", "personX is 5 years old.", "PersonX is too old."], "input": {"head": "PersonX is 6 years old", "relation": "HinderedBy"}}
{"generation": "an automaton can be used for a variety of purposes", "references": ["do things automatically", "do chores", "vacuum carpet", "work for"], "input": {"head": "automaton", "relation": "ObjectUse"}}
{"generation": "PersonX brings ___ to PersonY's mouth. After, others will want to know what's going on", "references": ["hand", "remove it from their mouth to blow smoke", "puff on the cigarette", "friends", "to ask for something more of PersonX", "to push PersonX away", "none"], "input": {"head": "PersonX brings ___ to PersonY's mouth", "relation": "oWant"}}
{"generation": "PersonX lives next door. After, others will want to know what he's doing", "references": ["to find out about him", "to mingle with him", "none"], "input": {"head": "PersonX lives next door", "relation": "oWant"}}
{"generation": "PersonX wears it everywhere. Before that, he was a member of the team that won the", "references": ["PersonX bought a new shirt", "PersonX has a favorite hat", "PersonX buys a new necklace"], "input": {"head": "PersonX wears it everywhere", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX knows PersonY is on a strict diet.", "PersonY expressed distaste for the item.", "PersonY lives too far away", "PersonX doesn't have enough to share with PersonY"], "input": {"head": "PersonX gives PersonY a bit", "relation": "HinderedBy"}}
{"generation": "PersonX turns PersonY's life around. The effect on others will be different", "references": ["becomes grateful", "learns valuable lessons", "gains confidence", "becomes better friends with X", "none"], "input": {"head": "PersonX turns PersonY's life around", "relation": "oEffect"}}
{"generation": "PersonX meets ___ for lunch. The effect on PersonX will be the same as the effect on PersonX", "references": ["Becomes full", "gains kinship", "coworkers", "good conversation", "friends", "Gets the check"], "input": {"head": "PersonX meets ___ for lunch", "relation": "xEffect"}}
{"generation": "While taking test, you would need to be able to read the code and understand", "references": ["turn in", "hand in test", "give test to tester", "fill in name", "write down name"], "input": {"head": "take test", "relation": "HasSubEvent"}}
{"generation": "PersonX jumps ship. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX jumps ship", "relation": "oEffect"}}
{"generation": "PersonX quickly fell. After, others will want to know what happened to him", "references": ["none"], "input": {"head": "PersonX quickly fell", "relation": "oWant"}}
{"generation": "PersonX misses class. Before, PersonX needs to be able to use the \"Get\" method on", "references": ["wake up late", "miss bus to school", "to avoid going to school", "to stay home", "none"], "input": {"head": "PersonX misses class", "relation": "xNeed"}}
{"generation": "PersonX increases PersonX's capacity. The effect on others will be reversed if PersonX is not in the same class", "references": ["accepts more load", "smiles", "none"], "input": {"head": "PersonX increases PersonX's capacity", "relation": "oEffect"}}
{"generation": "PersonX is found dead morning at PersonY's home in. As a result, others feel that they are being watched", "references": ["scared", "awful"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "oReact"}}
{"generation": "PersonX puts PersonX's feet up. After that, PersonX puts his hands up", "references": ["PersonX is yelled at by another movie goer"], "input": {"head": "PersonX puts PersonX's feet up", "relation": "isBefore"}}
{"generation": "PersonX grabs PersonX's gun. Before, PersonX needs to get PersonX's gun", "references": ["to reach for PersonY's gun", "none", "to sneak towards PersonY"], "input": {"head": "PersonX grabs PersonX's gun", "relation": "xNeed"}}
{"generation": "PersonX puts PersonY's ___ in execution. The effect on PersonX will be the same as PersonY's", "references": ["alerts PersonY of success", "worshipped", "feels successful.", "rewarded"], "input": {"head": "PersonX puts PersonY's ___ in execution", "relation": "xEffect"}}
{"generation": "PersonX watches PersonY go. PersonX did this to me", "references": ["see where person goes"], "input": {"head": "PersonX watches PersonY go", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can afford the materials.", "PersonZ has not emailed the requirements for the signage", "PersonX is not artistic.", "PersonY let the  makers dry up", "Person X doesn't have hands", "The printer is out of ink.", "Person X has no materials to make posters with", "The printer is broken."], "input": {"head": "PersonX makes posters", "relation": "HinderedBy"}}
{"generation": "PersonX is found dead morning at PersonY's home in. After, PersonX will want to kill PersonX", "references": ["nothing because they dead", "nothing because they are still dead", "nothing, they're dead", "nothing", "to explore the afterlife", "nothing they are dead"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "xWant"}}
{"generation": "PersonX meets PersonY's customers'___. As a result, others feel that they are being treated unfairly", "references": ["appreciative", "well tended to", "cared for."], "input": {"head": "PersonX meets PersonY's customers ' ___", "relation": "oReact"}}
{"generation": "PersonX likes to fish. As a result, others feel that he is a bit too much of a fish", "references": ["none"], "input": {"head": "PersonX likes to fish", "relation": "oReact"}}
{"generation": "PersonX tries PersonX's ___ at making. The effect on others will be different", "references": ["Admires X's work", "Helps X learn", "none"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "oEffect"}}
{"generation": "PersonX carries out PersonY's plan. After that, PersonY's plan is to kill PersonX", "references": ["PersonX is paid very well"], "input": {"head": "PersonX carries out PersonY's plan", "relation": "isBefore"}}
{"generation": "PersonX packs my bags. Before, PersonX needs to be able to use the same card as the other", "references": ["to open my bag", "to ask what items you want in your bags", "to find the bags", "to go to my house", "to put what you need into the bags", "to get your bags and items"], "input": {"head": "PersonX packs my bags", "relation": "xNeed"}}
{"generation": "PersonX takes place soon. After, PersonX will want to know what the hell is going on", "references": ["to rest", "to be in their spot", "to show who's boss", "to carry out the task"], "input": {"head": "PersonX takes place soon", "relation": "xWant"}}
{"generation": "PersonX buys PersonX's wife ___. PersonX will be the one who buys PersonX's wife", "references": ["regret", "good."], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "xReact"}}
{"generation": "PersonX reveals PersonY's identity. After that, he reveals that he is a member of the \"", "references": ["PersonX shows that PersonY is a criminal", "PersonX destroyed PersonY's life", "PersonX gets scolded for gossiping"], "input": {"head": "PersonX reveals PersonY's identity", "relation": "isBefore"}}
{"generation": "PersonX talks on PersonX's phone. As a result, others feel that the company is not doing enough to address the", "references": ["happy", "none"], "input": {"head": "PersonX talks on PersonX's phone", "relation": "oReact"}}
{"generation": "PersonX always makes ___. PersonX is the same as PersonX", "references": ["intelligent", "smart", "stable", "even-keeled"], "input": {"head": "PersonX always makes ___", "relation": "xAttr"}}
{"generation": "PersonX studies for an exam. Before that, he was a student at the University of California,", "references": ["PersonX takes a college course", "PersonX struggles in class", "PersonX enrolls in class"], "input": {"head": "PersonX studies for an exam", "relation": "isAfter"}}
{"generation": "PersonX stops but PersonY didn't listen. The effect on others will be different", "references": ["loses all their money", "Walks forward", "Gets to another place", "falls"], "input": {"head": "PersonX stops but PersonY did n't listen", "relation": "oEffect"}}
{"generation": "PersonX goes scuba diving. PersonX will be in the water for a few minutes and then you", "references": ["wet", "exhausted", "skillful", "tired"], "input": {"head": "PersonX goes scuba diving", "relation": "xReact"}}
{"generation": "PersonX evens saw ___ is filled by the same people who are the same people who are", "references": ["a bus", "blades", "a car", "the road", "handles"], "input": {"head": "PersonX evens saw ___", "relation": "isFilledBy"}}
{"generation": "PersonX starts walking. PersonX is standing in front of the door", "references": ["strong", "ready", "fatigued", "healthy", "tired", "determined"], "input": {"head": "PersonX starts walking", "relation": "xAttr"}}
{"generation": "PersonX gets ___ from work. After, PersonX will want to get ___ from work", "references": ["to get out of the car", "to think what else they can get", "to leave right away", "to go back home", "to think about what they got", "to rest", "to cry"], "input": {"head": "PersonX gets ___ from work", "relation": "xWant"}}
{"generation": "PersonX binds PersonX's hands together. After that, the player can use the same hand to move Person", "references": ["PersonX escapes the binds"], "input": {"head": "PersonX binds PersonX's hands together", "relation": "isBefore"}}
{"generation": "a car magazines can be used for this purpose", "references": ["stack under a table leg to prevent it from wobbling", "compare car models", "put the magazines out to make it look like you know cars", "find out what cars are new", "Use the paper to start a bonfire", "research cars", "fan oneself when it's hot", "look at car ads", "shop around for what you want", "remove pages and use as wrapping paper", "cut out pictures to pull on a wall"], "input": {"head": "car magazines", "relation": "ObjectUse"}}
{"generation": "PersonX forms PersonY opinion as. As a result, others feel that PersonX is a better person than PersonY", "references": ["none"], "input": {"head": "PersonX forms PersonY opinion as", "relation": "oReact"}}
{"generation": "a pathway can be used for the development of a new drug", "references": ["have a clear path", "lie down and rest on", "go for a hike", "skip around", "ride the bike on", "make your yard look nice", "run a sprint", "find the way", "walk through the woods", "have a picnic on", "pick flowers"], "input": {"head": "pathway", "relation": "ObjectUse"}}
{"generation": "PersonX fears would lose. PersonX did this to her", "references": ["none", "to understand the risk"], "input": {"head": "PersonX fears would lose", "relation": "xIntent"}}
{"generation": "PersonX rests on PersonX's laurels. After, PersonX will want to know who you are", "references": ["to have people admire him", "to have people talk about him", "to be lazy", "take a nap", "think about life", "to always have all the praise", "drink a coffee", "to rely on his past accomplishments", "to get an award"], "input": {"head": "PersonX rests on PersonX's laurels", "relation": "xWant"}}
{"generation": "PersonX covers every ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX covers every ___", "relation": "oEffect"}}
{"generation": "PersonX walks to the car. After that, he goes to the bathroom and takes a shower", "references": ["PersonX gets in the car and drives to the school"], "input": {"head": "PersonX walks to the car", "relation": "isBefore"}}
{"generation": "PersonX plays PersonY's new game. PersonX did this to make it easier to play with", "references": ["to see what it is like", "to play together", "think about buying it", "to try a different game"], "input": {"head": "PersonX plays PersonY's new game", "relation": "xIntent"}}
{"generation": "PersonX abuses PersonX's power. The effect on others will be felt by PersonX", "references": ["are told what to do", "reach out for help", "given unfair consequences or punishment", "none"], "input": {"head": "PersonX abuses PersonX's power", "relation": "oEffect"}}
{"generation": "PersonX impresses with PersonX's work. PersonX is a great example of a person who is able to", "references": ["talented", "happy", "inspring", "good", "pleased", "proud", "caring"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xAttr"}}
{"generation": "PersonX gives PersonY the slip. The effect on PersonX will be the same as the effect on PersonY", "references": ["stresses about being caught", "escapes from PersonY", "is free", "number of slip decreases", "runs away", "become great", "avoids responsibility", "heart rate increases"], "input": {"head": "PersonX gives PersonY the slip", "relation": "xEffect"}}
{"generation": "PersonX provides ___ for students is filled by the following:\n\n1", "references": ["supplies", "pens", "pencils", "books", "rulers", "snacks", "laptops", "paper", "notebooks", "clothes", "chalk", "education", "erasers"], "input": {"head": "PersonX provides ___ for students", "relation": "isFilledBy"}}
{"generation": "PersonX shares and share alike. PersonX will be the first to know about the new features and will", "references": ["better"], "input": {"head": "PersonX shares and share alike", "relation": "xReact"}}
{"generation": "PersonX blows smoke. The effect on PersonX will be similar to that of a smoke grenade", "references": ["fans smoke away", "puts out cigarette"], "input": {"head": "PersonX blows smoke", "relation": "xEffect"}}
{"generation": "PersonX fails math. After, others will want to know how to do math", "references": ["none"], "input": {"head": "PersonX fails math", "relation": "oWant"}}
{"generation": "While jump rope, you would have to use a lot of force to get the", "references": ["trip on rope", "drink water", "might hit", "step on dog", "hold rope ends", "get playmate", "pick up rope", "have fun", "get rope", "increased heart rate", "become tired", "put on sneakers", "jump", "trip and fall", "fall down", "stop jumping", "land", "breathe hard", "put away rope", "swing rope over head", "get tired", "jumping off ground", "sing", "start to sweat from exertion", "get exercise", "fall"], "input": {"head": "jump rope", "relation": "HasSubEvent"}}
{"generation": "PersonX makes cakes. PersonX did this to me", "references": ["to eat it", "to help celebrate a birthday", "to make money", "to have fun", "to enjoy a dessert", "to feed others"], "input": {"head": "PersonX makes cakes", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is not a maid", "PersonY isn't cleared to play yet", "PersonX doesn't think PersonY is a good worker.", "PersonY hasn't signed the release", "PersonY will refuse", "PersonX doesn't have the money to pay PersonY."], "input": {"head": "PersonX puts PersonY to use", "relation": "HinderedBy"}}
{"generation": "PersonX takes paper in the future. After that, he's going to have to figure out how to", "references": ["PersonX reads the message"], "input": {"head": "PersonX takes paper in the future", "relation": "isBefore"}}
{"generation": "PersonX washes the car. PersonX will be replaced by a new person", "references": ["relived", "accomplished", "proud"], "input": {"head": "PersonX washes the car", "relation": "xReact"}}
{"generation": "PersonX measures the ___ accurately is filled by the user", "references": ["sofa", "box", "plank", "flour", "curtains", "window", "fluid", "fabric", "dress", "milk", "suit", "envelope", "carpet", "pants", "water"], "input": {"head": "PersonX measures the ___ accurately", "relation": "isFilledBy"}}
{"generation": "PersonX gets PersonX's paycheck. After that, PersonX gets PersonX's job", "references": ["PersonX is ready to spend some money"], "input": {"head": "PersonX gets PersonX's paycheck", "relation": "isBefore"}}
{"generation": "PersonX celebrates the new year. Before that, he's been a regular on the show, and", "references": ["PersonX watches the ball drop"], "input": {"head": "PersonX celebrates the new year", "relation": "isAfter"}}
{"generation": "PersonX dyes PersonX's hair red. PersonX is wearing a black shirt and black pants", "references": ["daring", "brave", "fashionable", "bold"], "input": {"head": "PersonX dyes PersonX's hair red", "relation": "xAttr"}}
{"generation": "PersonX meets someone. The effect on PersonX will be the same as the effect on PersonX", "references": ["increases familiarity", "establishes a relationship", "Person X talks about events.", "Person X asks them about their life."], "input": {"head": "PersonX meets someone", "relation": "xEffect"}}
{"generation": "PersonX eats the whole thing. PersonX is a very good friend of mine, and I'm", "references": ["greedy", "Famished", "Hungry", "intent", "irresponsible"], "input": {"head": "PersonX eats the whole thing", "relation": "xAttr"}}
{"generation": "PersonX loves PersonX's dog. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX loves PersonX's dog", "relation": "oEffect"}}
{"generation": "PersonX bullies in school. After, others will want to know why he's so upset", "references": ["PersonX to leave them alone", "none", "the bullying to stop"], "input": {"head": "PersonX bullies in school", "relation": "oWant"}}
{"generation": "PersonX applies to jobs. The effect on PersonX will be the same as the effect on PersonX", "references": ["GETTING A NEW JOB", "makes more money", "gets called for an interview", "gets hired", "GETTING OFFER FROM MORE COMPANY", "gets numerous rejection mails"], "input": {"head": "PersonX applies to jobs", "relation": "xEffect"}}
{"generation": "PersonX extends PersonX's knowledge. Before, PersonX needs to know the name of the person who is the target", "references": ["to establish base knowledge", "none", "to keep learning"], "input": {"head": "PersonX extends PersonX's knowledge", "relation": "xNeed"}}
{"generation": "PersonX gets the shoes. After, others will want to see the shoes", "references": ["none"], "input": {"head": "PersonX gets the shoes", "relation": "oWant"}}
{"generation": "PersonX wants PersonY to come. PersonX did this to me", "references": ["to see person", "none"], "input": {"head": "PersonX wants PersonY to come", "relation": "xIntent"}}
{"generation": "PersonX loves ___ than anything. After, PersonX will want to know what's going on in the world", "references": ["to travel all around the world", "to strenghten the relationship", "to spend time with them", "to explore the world"], "input": {"head": "PersonX loves ___ than anything", "relation": "xWant"}}
{"generation": "PersonX takes a bow. After, others will want to know what's going on", "references": ["to give raise", "to see more of the performance again", "an encore", "clap", "cry"], "input": {"head": "PersonX takes a bow", "relation": "oWant"}}
{"generation": "PersonX buys one for PersonY. The effect on others will be different", "references": ["PersonY likes PersonX.", "smiles", "jumps up and down", "PersonY gains an item."], "input": {"head": "PersonX buys one for PersonY", "relation": "oEffect"}}
{"generation": "PersonX looks like something. After that, he's a little bit more of a mystery", "references": ["PersonX becomes a scary monster", "PersonX spends the night scaring kids"], "input": {"head": "PersonX looks like something", "relation": "isBefore"}}
{"generation": "socialist can be a good thing", "references": ["party member", "become communist", "empower community"], "input": {"head": "socialist", "relation": "CapableOf"}}
{"generation": "PersonX gets the milk. Before that, he gets the milk", "references": ["PersonX goes to the grocery store for cereal and milk"], "input": {"head": "PersonX gets the milk", "relation": "isAfter"}}
{"generation": "PersonX meets customers'___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX meets customers ' ___", "relation": "oEffect"}}
{"generation": "PersonX conveys PersonY impression. As a result, others feel that PersonX is more important than PersonY", "references": ["good", "none"], "input": {"head": "PersonX conveys PersonY impression", "relation": "oReact"}}
{"generation": "PersonX bakes an apple pie. PersonX did this to me", "references": ["to eat", "to serve his guests", "to share food with others"], "input": {"head": "PersonX bakes an apple pie", "relation": "xIntent"}}
{"generation": "PersonX gives PersonY a small smile. The effect on PersonX will be similar to the one that PersonY gives PersonX", "references": ["hugs PersonY", "none", "smiles at PersonY"], "input": {"head": "PersonX gives PersonY a small smile", "relation": "xEffect"}}
{"generation": "PersonX wipes PersonX's forehead. After that, he wipes PersonX's forehead", "references": ["PersonX continues to exercise"], "input": {"head": "PersonX wipes PersonX's forehead", "relation": "isBefore"}}
{"generation": "PersonX thinks would become. PersonX will be the one who gets the most votes", "references": ["curious"], "input": {"head": "PersonX thinks would become", "relation": "xReact"}}
{"generation": "PersonX studies for PersonX's math test. The effect on PersonX will be shown in Figure 1", "references": ["score high marks", "crams for the test", "PersonX passes his math test", "PersonX gains knowledge", "clears the test", "aces the test"], "input": {"head": "PersonX studies for PersonX's math test", "relation": "xEffect"}}
{"generation": "PersonX gives PersonY name. As a result, others feel that PersonX is a better choice", "references": ["named", "curious", "bad if it's a negative name.", "good if it's a good name.", "confused"], "input": {"head": "PersonX gives PersonY name", "relation": "oReact"}}
{"generation": "PersonX is first in line. Before that, he's the only one who can actually do it", "references": ["PersonX runs to the front", "PersonX gets to the coffee shop early", "PersonX plans to get concert tickets"], "input": {"head": "PersonX is first in line", "relation": "isAfter"}}
{"generation": "PersonX makes PersonY concessions. The effect on PersonX will be the same as PersonY's", "references": ["keeps the peace", "learns how to cook", "is thanked", "becomes tired from cooking"], "input": {"head": "PersonX makes PersonY concessions", "relation": "xEffect"}}
{"generation": "PersonX spends ___ on video games. The effect on PersonX will be similar to that of a person who spends ___ on", "references": ["GET ENTERTAINED", "goes broke", "loses time with friends", "LOST MONEY"], "input": {"head": "PersonX spends ___ on video games", "relation": "xEffect"}}
{"generation": "PersonX evens saw ___. Before, PersonX needs to be able to use the ___", "references": ["none"], "input": {"head": "PersonX evens saw ___", "relation": "xNeed"}}
{"generation": "PersonX gives PersonY the courage. After, others will want to kill him", "references": ["to win the war", "thank PersonX", "to go out and talk to their crush", "to do more stuff in his life", "to be motivated", "leave the podium"], "input": {"head": "PersonX gives PersonY the courage", "relation": "oWant"}}
{"generation": "PersonX agrees to a date. Before that, he asks her to come over and have a drink", "references": ["PersonX is interested in someone"], "input": {"head": "PersonX agrees to a date", "relation": "isAfter"}}
{"generation": "PersonX gets published. After that, he gets a new job", "references": ["PersonX gets rich"], "input": {"head": "PersonX gets published", "relation": "isBefore"}}
{"generation": "PersonX has a wonderful time. Before, PersonX needs to be able to talk to people", "references": ["to let go of themselves", "go to party", "to have gone to the zoo", "to have gone out with their friends", "to go to the event", "have a romantic dinner"], "input": {"head": "PersonX has a wonderful time", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not have a phone.", "PersonX left his phone at home", "Their phone has no reception in the mountains", "PersonX accidentally broke their phone", "The battery in PersonX's phone needs to be charged", "PersonX is in the middle of a presentation", "PersonX has a private phone number", "PersonX does not know how to use a phone."], "input": {"head": "PersonX receives a phone call", "relation": "HinderedBy"}}
{"generation": "PersonX suits PersonY. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX suits PersonY", "relation": "xIntent"}}
{"generation": "an event contains a lot of information about the event, but it", "references": ["beginning", "end"], "input": {"head": "event", "relation": "MadeUpOf"}}
{"generation": "PersonX forms PersonY association. Before that, you can use PersonX to create a new Person", "references": ["PersonX starts a group"], "input": {"head": "PersonX forms PersonY association", "relation": "isAfter"}}
{"generation": "PersonX feels hopeless. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX feels hopeless", "relation": "xIntent"}}
{"generation": "PersonX costs the earth. PersonX will be the one who will be the one who will be", "references": ["a burden"], "input": {"head": "PersonX costs the earth", "relation": "xReact"}}
{"generation": "PersonX makes a date. After, PersonX will want to meet you", "references": ["to thank the friend for coming,", "to get ready for the date", "take rest", "feel happy", "to take his friend back home", "take the other person to a restaurant", "to have a romantic relationship", "to go on the date"], "input": {"head": "PersonX makes a date", "relation": "xWant"}}
{"generation": "PersonX leaves ___ on the table is filled by the same person", "references": ["juice", "books", "food", "crumbs", "apples", "her ball", "dishes", "paper", "the letters", "gifts", "the food", "dice", "the keys", "mail"], "input": {"head": "PersonX leaves ___ on the table", "relation": "isFilledBy"}}
{"generation": "PersonX applies for jobs. After, PersonX will want to know if you are a good fit for the job", "references": ["to go to work", "to make money", "to gain financial security", "to obtain employment", "to buy a car"], "input": {"head": "PersonX applies for jobs", "relation": "xWant"}}
{"generation": "PersonX visits PersonX's mother. Before that, she's been in a relationship with PersonX for", "references": ["PersonX gets a call from PersonX's mother"], "input": {"head": "PersonX visits PersonX's mother", "relation": "isAfter"}}
{"generation": "PersonX leaves PersonY time. PersonX is now the only one who can see the world", "references": ["generous", "Kind", "Considerate", "thoughtful"], "input": {"head": "PersonX leaves PersonY time", "relation": "xAttr"}}
{"generation": "a process server can be used for this purpose", "references": ["tell someone they are being sued", "find a potential witness for a trial", "stalk someone", "track a person", "serve divorce papers", "surprise someone", "rob someone", "serve court papers", "find lost people", "exchange paperwork"], "input": {"head": "process server", "relation": "ObjectUse"}}
{"generation": "a control room can be used for the control of the control room", "references": ["centralizing controls", "maintaining control", "control nuclear plant", "managing network", "centralizing efforts", "overseeing production", "mainframe computers", "managing airspace around airport", "make tv show", "checking up on people", "bringing together resources", "monitoring events", "center of communication", "measuring output", "operate factory", "maintaining quality", "control complex machinery"], "input": {"head": "control room", "relation": "ObjectUse"}}
{"generation": "PersonX conducts PersonY analysis. Before that, PersonX conducts PersonY analysis", "references": ["PersonX grabs the data print out"], "input": {"head": "PersonX conducts PersonY analysis", "relation": "isAfter"}}
{"generation": "PersonX makes ___ every year. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX makes ___ every year", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The dog keeps coming home.", "PersonY doesn't have a dog", "PersonX is responsible for the dog.", "The dog was returned by a neighbor.", "PersonX doesn't want to get in trouble.", "PersonX is a nice person"], "input": {"head": "PersonX loses PersonY's dog", "relation": "HinderedBy"}}
{"generation": "PersonX makes PersonY a present. As a result, others feel that PersonY is a present", "references": ["friendly", "thankful", "appreciated", "grateful"], "input": {"head": "PersonX makes PersonY a present", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has the kids tonight", "PersonX has to work", "PersonY has no things.", "PersonX is blind."], "input": {"head": "PersonX sees PersonY thing", "relation": "HinderedBy"}}
{"generation": "PersonX dumps by PersonX's boyfriend. Before that, he's been a bit of a dick", "references": ["PersonX feels tied down and wants more freedom", "PersonX has cheated on their boyfriend", "PersonX goes on a date with someone"], "input": {"head": "PersonX dumps by PersonX's boyfriend", "relation": "isAfter"}}
{"generation": "PersonX reduces the ___ to levels. PersonX will be able to use the same abilities as the player", "references": ["happy about his success"], "input": {"head": "PersonX reduces the ___ to levels", "relation": "xReact"}}
{"generation": "You are likely to find an advertisement billboard in a local newspaper or online", "references": ["bus stop"], "input": {"head": "advertisement billboard", "relation": "AtLocation"}}
{"generation": "PersonX sends ___ home. As a result, others feel that they are being treated unfairly", "references": ["happy", "helped"], "input": {"head": "PersonX sends ___ home", "relation": "oReact"}}
{"generation": "PersonX breaks PersonX's toe. After, others will want to see what happens to the other person", "references": ["none"], "input": {"head": "PersonX breaks PersonX's toe", "relation": "oWant"}}
{"generation": "PersonX brings ___ to PersonX's house. Before, PersonX needs to talk to PersonX about the situation", "references": ["to drive home", "none", "to unlock the door"], "input": {"head": "PersonX brings ___ to PersonX's house", "relation": "xNeed"}}
{"generation": "PersonX follows PersonX's instructions. PersonX is a member of the team, and is the only", "references": ["attentive", "smart", "Smart", "trusting", "assured", "Obedient"], "input": {"head": "PersonX follows PersonX's instructions", "relation": "xAttr"}}
{"generation": "PersonX is in a good mood. After, PersonX will want to talk to you", "references": ["to share joy with others", "to remain happy", "to have fun", "laugh", "get productive", "get things done"], "input": {"head": "PersonX is in a good mood", "relation": "xWant"}}
{"generation": "PersonX brings ___ to the people. Before, PersonX needs to be able to talk to people", "references": ["to want to help", "to build an economic policy", "to buy supplies", "to decide who needs help", "to care about people", "to create jobs"], "input": {"head": "PersonX brings ___ to the people", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too clumsy.", "PersonX's teacher told them to sit down.", "PersonX wasn't invited to the party.", "PersonX has awful stagefright", "PersonX doesn't have any good moves.", "PersonX is very shy", "PersonX has no video recorder.", "PersonX's friend told PersonX their moves were bad."], "input": {"head": "PersonX shows PersonX's moves", "relation": "HinderedBy"}}
{"generation": "PersonX wants another one. After, PersonX will want to know who the other person is", "references": ["to ask for another one", "have another one", "to buy another one", "regret the decision"], "input": {"head": "PersonX wants another one", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX knows PersonY wasn't really sorry.", "PersonY is a pathological liar", "PersonY isn't sorry", "PersonX has no place to speak for PersonY.", "PersonY is offline and unable to communicate.", "PersonY has forgotten their rude behavior.", "PersonY is a bully that doesn't regret anything.", "PersonY refuses to apologize."], "input": {"head": "PersonX says PersonY was sorry", "relation": "HinderedBy"}}
{"generation": "PersonX sees PersonY wife. PersonX is a bit of a jerk, but he's a", "references": ["cheater", "outraged", "illicit", "wondering", "adulterous", "observant", "caring"], "input": {"head": "PersonX sees PersonY wife", "relation": "xAttr"}}
{"generation": "PersonX helps PersonY along. After, PersonX will want to know who is the person who is the person who", "references": ["show their friend the way", "sit down", "to help them sit down", "to move out of the desert", "be kind", "to look at the compass"], "input": {"head": "PersonX helps PersonY along", "relation": "xWant"}}
{"generation": "PersonX kisses PersonY's feet. PersonX did this to PersonY's feet", "references": ["to show love.", "to satisfy persony", "has a foot fetish", "wants to show appreciation"], "input": {"head": "PersonX kisses PersonY's feet", "relation": "xIntent"}}
{"generation": "PersonX kisses PersonY's ring. PersonX did this to PersonY's ring", "references": ["to express love or adoration", "to show respect to persony"], "input": {"head": "PersonX kisses PersonY's ring", "relation": "xIntent"}}
{"generation": "PersonX puts it in PersonX's purse. The effect on PersonX will be similar to the effect on Person X", "references": ["PersonX forgets to return it", "gets arrested for stealing", "PersonX forgets to pay for it", "gets caught"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "xEffect"}}
{"generation": "PersonX eventually bought ___. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX eventually bought ___", "relation": "oWant"}}
{"generation": "PersonX gives PersonY relief. The effect on others will be similar to that of a normal effect", "references": ["thanks PersonX", "rests in bed", "is relaxed", "collapses on ground", "is comfortable", "thanks Y"], "input": {"head": "PersonX gives PersonY relief", "relation": "oEffect"}}
{"generation": "PersonX wins every ___. After, others will want to know what the hell you're doing", "references": ["none"], "input": {"head": "PersonX wins every ___", "relation": "oWant"}}
{"generation": "PersonX checks everywhere. After, others will want to know what you're doing", "references": ["to ask PersonX what they should do", "none", "to search for the missing person"], "input": {"head": "PersonX checks everywhere", "relation": "oWant"}}
{"generation": "PersonX puts PersonY's mind at ease. After, PersonX will want to know what's going on in the world", "references": ["To make Y understand", "To give guidance", "comfort PersonY", "hug PersonY", "To comfort Y", "To publish results of research"], "input": {"head": "PersonX puts PersonY's mind at ease", "relation": "xWant"}}
{"generation": "PersonX cuts a swath. PersonX did this to me, and I'm not sure I'm going", "references": ["to be villain", "to be criminal", "to seem important"], "input": {"head": "PersonX cuts a swath", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX cannot get their car to start", "PersonX's home was blocked by snow.", "PersonX is out of gas", "PersonX has to stay late at work", "Their car stopped runnning.", "PersonX's home was foreclosed on.", "They are in the middle of a meeting."], "input": {"head": "PersonX finally got home", "relation": "HinderedBy"}}
{"generation": "PersonX calls the ___ together. After, others will want to know what the ___ is", "references": ["to listen to PersonX", "to do what he is asking them to do", "to learn from PersonX", "to attend the meeting", "to give their opinions", "to listen to personX"], "input": {"head": "PersonX calls the ___ together", "relation": "oWant"}}
{"generation": "PersonX wouldn't make any friends. PersonX will be the one who gets to decide who gets to decide", "references": ["sad", "lonely", "unloved", "alone", "hateful"], "input": {"head": "PersonX would n't make any friends", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too stubborn.", "Person X has to know the truth."], "input": {"head": "PersonX leaves alone", "relation": "HinderedBy"}}
{"generation": "PersonX twists PersonY's arm. After that, she's able to use her powers to make a", "references": ["PersonX makes PersonY submit"], "input": {"head": "PersonX twists PersonY's arm", "relation": "isBefore"}}
{"generation": "PersonX gets a call. The effect on others will be different", "references": ["wants to hang out", "hopes they answer", "none"], "input": {"head": "PersonX gets a call", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too happy to fake being sad.", "PersonX is in love and can't look sad.", "PersonX is not a good actor.", "PersonX's friend keeps making her laugh", "PersonX's friend can read her way too well", "PersonX is actually happy."], "input": {"head": "PersonX looks sad", "relation": "HinderedBy"}}
{"generation": "PersonX puts PersonY's ___ into execution. PersonX will be executed by PersonY", "references": ["productive", "ready to begin", "busy", "that they've driven home somebody's ineffectiveness to them personally", "good that they've helped someone", "motivated", "that they've proven how to do something", "influential"], "input": {"head": "PersonX puts PersonY's ___ into execution", "relation": "xReact"}}
{"generation": "PersonX settles every ___. PersonX is a subclass of PersonX", "references": ["thorough", "smart", "talented", "persevering", "interesting", "competent", "devoted", "precise"], "input": {"head": "PersonX settles every ___", "relation": "xAttr"}}
{"generation": "PersonX lit another cigarette. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX lit another cigarette", "relation": "oEffect"}}
{"generation": "PersonX takes ___ as a result. The effect on PersonX will be the same as the effect on PersonX", "references": ["He is involved something", "none", "He is making a plan"], "input": {"head": "PersonX takes ___ as a result", "relation": "xEffect"}}
{"generation": "PersonX gets very nervous. PersonX will be very nervous", "references": ["scared something bad might happen", "on edge", "anxiety ridden"], "input": {"head": "PersonX gets very nervous", "relation": "xReact"}}
{"generation": "You are likely to find a boat in a lake or a river, or a boat in a", "references": ["lake", "harbor", "garage", "river", "body of water", "ocean", "bay", "water"], "input": {"head": "boat", "relation": "AtLocation"}}
{"generation": "PersonX makes a mistake. The effect on PersonX will be the same as the effect on PersonX", "references": ["fails a test", "PersonX faces negative effects from their mistake.", "PersonX has to make up for the mistake.", "loses his job"], "input": {"head": "PersonX makes a mistake", "relation": "xEffect"}}
{"generation": "PersonX blows smoke. PersonX is a character in the game who is a member of", "references": ["relaxed", "teasing", "False", "Two faced", "trendy", "cool", "meancing"], "input": {"head": "PersonX blows smoke", "relation": "xAttr"}}
{"generation": "PersonX plays PersonY's favorite songs. The effect on PersonX will be similar to the effect on PersonY", "references": ["receives thanks", "Enjoys Y company", "none", "gets a hug", "Listens to song"], "input": {"head": "PersonX plays PersonY's favorite songs", "relation": "xEffect"}}
{"generation": "all news is that the government is now trying to get the government", "references": ["source"], "input": {"head": "all news", "relation": "HasProperty"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is banned from going.", "PersonX's friend kicked him out.", "PersonX was banned from the store by the manager.", "PersonX is in prison."], "input": {"head": "PersonX often went", "relation": "HinderedBy"}}
{"generation": "PersonX makes much money. After, others will want to buy him", "references": ["to make PersonX spend their money", "none", "to congratulate PersonX"], "input": {"head": "PersonX makes much money", "relation": "oWant"}}
{"generation": "PersonX delivers PersonY address. After, PersonX will want to know who you are", "references": ["to help PersonY", "to do what was asked by PersonY", "to thank personY for the help", "to hope it goes over well"], "input": {"head": "PersonX delivers PersonY address", "relation": "xWant"}}
{"generation": "PersonX quickly fell. As a result, others feel that he is a bit too strong", "references": ["humorous", "worried", "none", "worry"], "input": {"head": "PersonX quickly fell", "relation": "oReact"}}
{"generation": "PersonX puts bread in the toaster. As a result, others feel that the bread is too small", "references": ["none"], "input": {"head": "PersonX puts bread in the toaster", "relation": "oReact"}}
{"generation": "PersonX justifies PersonX's actions. PersonX is a character who is a member of the \"F", "references": ["communicative", "naive", "loyal", "friendly", "denial", "upfront"], "input": {"head": "PersonX justifies PersonX's actions", "relation": "xAttr"}}
{"generation": "PersonX practices together. PersonX will be able to use the same tools and tools as the", "references": ["determined", "tired", "satisfied"], "input": {"head": "PersonX practices together", "relation": "xReact"}}
{"generation": "PersonX decides to get a dog. Before that, he's going to have to find a way to", "references": ["PersonX wants a companion"], "input": {"head": "PersonX decides to get a dog", "relation": "isAfter"}}
{"generation": "PersonX often went. PersonX did this to me", "references": ["to go to concerts"], "input": {"head": "PersonX often went", "relation": "xIntent"}}
{"generation": "You are likely to find a penis in a vagina, but it is not a vagina", "references": ["lover's mouth", "pair of pants", "lover's anus", "shorts"], "input": {"head": "penis", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can't afford to buy the house.", "Their wife doesn't want to leave.", "PersonX is stuck overseas in their job.", "Person X cannot afford to move.", "Their husband can't afford to move.", "The house next door isn't for sale.", "Person X does not have the money to buy the house next door."], "input": {"head": "PersonX lives next door", "relation": "HinderedBy"}}
{"generation": "PersonX examines critically the ___. The effect on others will be discussed in more detail in the next section", "references": ["none"], "input": {"head": "PersonX examines critically the ___", "relation": "oEffect"}}
{"generation": "PersonX sees PersonY frequently. The effect on PersonX will be similar to that of PersonY", "references": ["talk with each other", "none", "spend time together"], "input": {"head": "PersonX sees PersonY frequently", "relation": "xEffect"}}
{"generation": "PersonX keeps ___ up all night is filled by the sound of the music", "references": ["baby", "the cat", "the dog", "spouse", "kitten", "television", "the bird"], "input": {"head": "PersonX keeps ___ up all night", "relation": "isFilledBy"}}
{"generation": "PersonX picks blueberries. Before, PersonX needs to pick a fruit", "references": ["find a blueberry tree", "To make visit farm", "Find blueberries tree", "reach up for blueberries", "none"], "input": {"head": "PersonX picks blueberries", "relation": "xNeed"}}
{"generation": "PersonX thanks PersonY's profusely. After, PersonX will want to know what the hell is going on", "references": ["to see the appreciate being thanked", "person Y to feel appreciated", "to enjoy what they did for them", "return the favor", "to promise to return PersonY's favor someday", "to help PersonY someday"], "input": {"head": "PersonX thanks PersonY's profusely", "relation": "xWant"}}
{"generation": "PersonX dances all night. Before that, he's been doing this for a while", "references": ["PersonX goes to the night club downtown"], "input": {"head": "PersonX dances all night", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have soap", "PersonX's township banned the use of water during the drought.", "PersonX's kids used all of the soap.", "The hose broke and does not work.", "It was too cold outside to wash it.", "PersonX is in a wheelchair and can't reach the car's top.", "PersonX cannot afford a car wash.", "PersonX's spouse took the car.", "PersonX has no access to running water.", "PersonX has no access to soap.", "The car is already clean"], "input": {"head": "PersonX washes the car", "relation": "HinderedBy"}}
{"generation": "PersonX watches scary movies. PersonX will be watching the movie \"The Matrix\" and will be", "references": ["scared", "thrilled.", "frightened", "scared.", "tired"], "input": {"head": "PersonX watches scary movies", "relation": "xReact"}}
{"generation": "PersonX buys ___, though. After, others will want to know what the fuck he's doing", "references": ["Person Y says thankyou", "none", "person Y wants to eat candy"], "input": {"head": "PersonX buys ___ , though", "relation": "oWant"}}
{"generation": "PersonX goes ___ in the lake. Before, PersonX needs to go to the lake to get a drink", "references": ["to bait a hook for fishing", "to take off their shoes", "wear a bathing suit", "to go to the lake", "to have their life vest on", "to put on a swimsuit"], "input": {"head": "PersonX goes ___ in the lake", "relation": "xNeed"}}
{"generation": "a bowl of ice cream can be used for a few minutes to make a smoothie", "references": ["hold, before they drop it"], "input": {"head": "bowl of ice cream", "relation": "ObjectUse"}}
{"generation": "PersonX closes that day. The effect on others will be limited to those who have already been affected by the", "references": ["none"], "input": {"head": "PersonX closes that day", "relation": "oEffect"}}
{"generation": "PersonX sees PersonY's mother. After, others will want to know who she is", "references": ["to invite them home", "to guide", "to get their friend for them", "to say hello"], "input": {"head": "PersonX sees PersonY's mother", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X didn't pay their water bill", "PersonX needs to go to work instead.", "The pipes are frozen", "PersonX doesn't own a shower.", "The water got shut off", "Person X's shower head is broken"], "input": {"head": "PersonX takes a cold shower", "relation": "HinderedBy"}}
{"generation": "PersonX hears ___ back is filled by a voice that is not his own", "references": ["cars", "bats", "dogs"], "input": {"head": "PersonX hears ___ back", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX broke the phone.", "PersonY let their phone die.", "PersonX is going out to dinner.", "PersonY is at work.", "PersonX cannot find cell phone service.", "PersonX has a broken phone."], "input": {"head": "PersonX calls PersonY tonight", "relation": "HinderedBy"}}
{"generation": "PersonX leaves the class. PersonX will be replaced by the class", "references": ["that they cannot stay in the classroom any longer", "like that class isn't worth while"], "input": {"head": "PersonX leaves the class", "relation": "xReact"}}
{"generation": "PersonX uses the card. PersonX is the only card in the game that can be used", "references": ["cautious", "expressive", "Irresponsible", "apprehensive", "artistic", "A Spendthrift"], "input": {"head": "PersonX uses the card", "relation": "xAttr"}}
{"generation": "PersonX gets a small loan. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX gets a small loan", "relation": "oEffect"}}
{"generation": "PersonX does much better. After that, he's a bit of a jerk", "references": ["PersonX celebrates their good grade"], "input": {"head": "PersonX does much better", "relation": "isBefore"}}
{"generation": "PersonX makes PersonY connection. PersonX is the same as PersonY, but PersonY is", "references": ["friendly", "social", "brilliant", "intelligent"], "input": {"head": "PersonX makes PersonY connection", "relation": "xAttr"}}
{"generation": "PersonX increases the ___ at the expense. The effect on others will be lessened if you are a member of the same", "references": ["none"], "input": {"head": "PersonX increases the ___ at the expense", "relation": "oEffect"}}
{"generation": "PersonX loses track of the time. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX loses track of the time", "relation": "oEffect"}}
{"generation": "PersonX finds a good deal. After, PersonX will want to know what the other person is doing", "references": ["make a purchase of the item", "to take advantage of the deal", "to save money", "to show off their savings", "to save some money", "tell someone else about the deal"], "input": {"head": "PersonX finds a good deal", "relation": "xWant"}}
{"generation": "PersonX always made. Before, PersonX needs to be able to use the same character in different ways", "references": ["none", "to know what to make", "to be good at something"], "input": {"head": "PersonX always made", "relation": "xNeed"}}
{"generation": "PersonX thinks would become. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX thinks would become", "relation": "xIntent"}}
{"generation": "PersonX eats everything. After that, he's a little bit more of a jerk", "references": ["PersonX leaves without anybody seeing", "PersonX throws up"], "input": {"head": "PersonX eats everything", "relation": "isBefore"}}
{"generation": "PersonX has never been happier. Before that, he was a member of the team that won the", "references": ["PersonX goes on vacation", "PersonX visits their psychotherapist"], "input": {"head": "PersonX has never been happier", "relation": "isAfter"}}
{"generation": "PersonX sees PersonY later that day. The effect on PersonX will be similar to that of PersonY", "references": ["is ignored", "gets greeted", "gets asked a question", "is engaged in conversation"], "input": {"head": "PersonX sees PersonY later that day", "relation": "xEffect"}}
{"generation": "PersonX pulls PersonY's hand back. After, PersonX will want to know what's going on", "references": ["to turn off the stove", "to put out the fire", "introduce themselves", "run from the area"], "input": {"head": "PersonX pulls PersonY's hand back", "relation": "xWant"}}
{"generation": "PersonX drops the phone. The effect on PersonX will be similar to that of a normal phone call", "references": ["They are scolded.", "They have to buy a new phone."], "input": {"head": "PersonX drops the phone", "relation": "xEffect"}}
{"generation": "PersonX is able to find it. PersonX will be able to find it", "references": ["happy", "useful", "relieved", "satisfied"], "input": {"head": "PersonX is able to find it", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY refuses to turn away.", "PersonX is too compassionate."], "input": {"head": "PersonX turns PersonY's backs", "relation": "HinderedBy"}}
{"generation": "PersonX changes PersonX's lives. The effect on PersonX will be permanent", "references": ["CHANGE IN OUR LIFE", "changes lifestyle", "has different life"], "input": {"head": "PersonX changes PersonX's lives", "relation": "xEffect"}}
{"generation": "PersonX goes in PersonX ear and out the other. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX goes in PersonX ear and out the other", "relation": "oEffect"}}
{"generation": "PersonX brings home PersonY's ___ is filled by the same thing", "references": ["car", "lunch", "dinner", "folder", "phone", "coat", "book"], "input": {"head": "PersonX brings home PersonY's ___", "relation": "isFilledBy"}}
{"generation": "PersonX leaves the scene. The effect on PersonX will be similar to that of a normal person", "references": ["sad", "Gets out of the situation", "happy", "Goes home"], "input": {"head": "PersonX leaves the scene", "relation": "xEffect"}}
{"generation": "PersonX spends all of PersonX's time. After that, he's not really a person", "references": ["PersonX reading books"], "input": {"head": "PersonX spends all of PersonX's time", "relation": "isBefore"}}
{"generation": "PersonX gets something for nothing. Before, PersonX needs to be able to use his or her own abilities to", "references": ["to ask for something", "to take something", "to seize the opportunity", "to find a bargain"], "input": {"head": "PersonX gets something for nothing", "relation": "xNeed"}}
{"generation": "PersonX books a ticket. PersonX will be able to buy tickets for you", "references": ["interested", "excited", "thrilled"], "input": {"head": "PersonX books a ticket", "relation": "xReact"}}
{"generation": "PersonX wants to learn how to sing. After, PersonX will want to learn how to sing", "references": ["to start their online singing lessons.", "to perform for people.", "to find a singing coach", "practice", "contact singing coach"], "input": {"head": "PersonX wants to learn how to sing", "relation": "xWant"}}
{"generation": "PersonX sets things right. PersonX will be able to use the same abilities as the player,", "references": ["happy", "moral"], "input": {"head": "PersonX sets things right", "relation": "xReact"}}
{"generation": "PersonX loses PersonY's wallet. Before that, he loses PersonY's wallet", "references": ["PersonX goes to the store"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "isAfter"}}
{"generation": "PersonX looks ___ in the face. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX looks ___ in the face", "relation": "oEffect"}}
{"generation": "PersonX visits PersonY's mother. After that, she asks if she can help her son", "references": ["PersonX talks all day with PersonY's mother"], "input": {"head": "PersonX visits PersonY's mother", "relation": "isBefore"}}
{"generation": "PersonX finally got back. As a result, others feel that the game is too much of a mess", "references": ["annoyed that x didn't get there sooner"], "input": {"head": "PersonX finally got back", "relation": "oReact"}}
{"generation": "PersonX leaves PersonY's alone. After, PersonX will want to talk to PersonY", "references": ["to do nothing with him anymore", "to turn around", "to walk away"], "input": {"head": "PersonX leaves PersonY's alone", "relation": "xWant"}}
{"generation": "PersonX finally worked up. After that, he was able to get the job done", "references": ["PersonX does the thing"], "input": {"head": "PersonX finally worked up", "relation": "isBefore"}}
{"generation": "PersonX spends PersonX's ___ working. PersonX did this to me", "references": ["to earn money", "to advance in a career", "to be secure", "to work a lot", "to have money"], "input": {"head": "PersonX spends PersonX's ___ working", "relation": "xIntent"}}
{"generation": "PersonX goes white water rafting. Before that, he's been in a boat with a bunch of", "references": ["PersonX books an adventure trip in colorado"], "input": {"head": "PersonX goes white water rafting", "relation": "isAfter"}}
{"generation": "PersonX transmits in PersonY form. Before, PersonX needs to be in PersonY form to be able to communicate", "references": ["to steal PersonY's form", "to break into PersonY's locker", "to understand the message", "to get the message"], "input": {"head": "PersonX transmits in PersonY form", "relation": "xNeed"}}
{"generation": "PersonX takes place in the course. PersonX will be a member of the team that will be tasked with", "references": ["ready", "confident"], "input": {"head": "PersonX takes place in the course", "relation": "xReact"}}
{"generation": "PersonX wants to swim. After that, he's going to have to get a job", "references": ["PersonX drives to the pool"], "input": {"head": "PersonX wants to swim", "relation": "isBefore"}}
{"generation": "a harmonica can be used for the same purpose", "references": ["scare off birds", "humming", "play tune", "playing music", "annoy people", "play in a band", "pass time", "driving people crazy with noise", "produce musical sound", "joining band", "playing blues", "collect for a musical themed party", "make music", "practice making music on", "celebrate", "solace on lonesome trail", "humor", "play music", "creating music", "picking up girls", "entertainment", "relaxation", "entertain friends at the campfire", "annoy somoene", "play music or make noise", "blow into", "playing tune", "play in stage", "making music", "perfecting skill", "stir a pot of soup", "throw at someone"], "input": {"head": "harmonica", "relation": "ObjectUse"}}
{"generation": "PersonX honors PersonY. PersonX is a member of the \"PersonX\" group", "references": ["VOLUNTARY", "COMPLIMENTARY", "compassionate", "respectful", "proud", "mature"], "input": {"head": "PersonX honors PersonY", "relation": "xAttr"}}
{"generation": "PersonX hits a telephone pole. Before, PersonX needs to call the police", "references": ["none", "to find a telephone pole", "to walk up to a telephone pole"], "input": {"head": "PersonX hits a telephone pole", "relation": "xNeed"}}
{"generation": "PersonX feels unhappy. The effect on PersonX will be felt by the player, and will be felt by", "references": ["seeks help", "distract oneself", "none"], "input": {"head": "PersonX feels unhappy", "relation": "xEffect"}}
{"generation": "PersonX turns a blind eye. After, PersonX will want to know who is the person who is the person who", "references": ["They run", "avoid drama", "avoid anything to do with the event", "They go home", "avoid trouble", "to do something else", "to not think about what happened", "never talk about the event"], "input": {"head": "PersonX turns a blind eye", "relation": "xWant"}}
{"generation": "PersonX makes it back. After that, he's back to his normal self", "references": ["PersonX makes dinner"], "input": {"head": "PersonX makes it back", "relation": "isBefore"}}
{"generation": "PersonX replaces PersonY's tire. The effect on PersonX will be the same as PersonY's", "references": ["gives back the keys", "takes payment", "hands become covered in black residue", "goes home", "is appreciated by someone", "gets back in car"], "input": {"head": "PersonX replaces PersonY's tire", "relation": "xEffect"}}
{"generation": "PersonX has a fear of heights. As a result, others feel that they are too tall", "references": ["none"], "input": {"head": "PersonX has a fear of heights", "relation": "oReact"}}
{"generation": "PersonX dances the night away. The effect on PersonX will be similar to that of a normal dance", "references": ["loses a purse", "gets good exercise", "falls asleep", "is tired", "legs get sore", "gets sore"], "input": {"head": "PersonX dances the night away", "relation": "xEffect"}}
{"generation": "PersonX gives PersonY room. Before, PersonX needs to be able to use the \"X\" key to", "references": ["to like PersonY", "respect people privacy", "let people alone", "to know PersonY"], "input": {"head": "PersonX gives PersonY room", "relation": "xNeed"}}
{"generation": "PersonX sings PersonY a song. After that, she sings PersonY a song", "references": ["PersonX bows in conclusion", "PersonX drops the microphone"], "input": {"head": "PersonX sings PersonY a song", "relation": "isBefore"}}
{"generation": "PersonX wants to hurt PersonY. After, PersonX will want to hurt PersonY", "references": ["to hurt PersonY emotionally", "To make truce", "to punch PersonY", "to kick PersonY", "To apologies"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xWant"}}
{"generation": "PersonX gets plastic surgery. Before that, he's got a lot of other stuff", "references": ["PersonX is wheeled into the operating room"], "input": {"head": "PersonX gets plastic surgery", "relation": "isAfter"}}
{"generation": "a showroom can be used for a variety of purposes, including:\n\n\u2022", "references": ["displaying items for sale", "hold display", "showing cars", "displaying new model cars", "sell cars", "displaying award winning animals", "displaying furniture", "displaying designer creations", "show what is for sale", "displaying samples to order from", "display products for sale", "displaying new cars at dealership", "displaying items", "displaying things", "displaying new cars", "display nice cars", "showing cabinetry", "salespeople to work within", "new cars", "displaying commodities", "displaying specialty items", "display clothing", "displaying textiles", "show off granite", "show off goods", "display Christmas items in December", "showing appliances", "advertise cars in", "sell airplane seats to airlines", "have an art gallery", "promote products", "displaying cars", "selling merchandise", "allow customers to pick what they want", "present product", "show off what they have created", "displaying accesories", "displaying object", "displaying fabric"], "input": {"head": "showroom", "relation": "ObjectUse"}}
{"generation": "PersonX makes perfect sense. As a result, others feel the same way", "references": ["understanding"], "input": {"head": "PersonX makes perfect sense", "relation": "oReact"}}
{"generation": "PersonX changes PersonY's lives. After that, he's a little more of a \"normal\"", "references": ["PersonX is thanked profusely"], "input": {"head": "PersonX changes PersonY's lives", "relation": "isBefore"}}
{"generation": "PersonX passes the exam. Before that, he's a student at the University of California,", "references": ["PersonX studies all night long"], "input": {"head": "PersonX passes the exam", "relation": "isAfter"}}
{"generation": "PersonX gets the shoes. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets the shoes", "relation": "oEffect"}}
{"generation": "PersonX is no longer scared. Before that, he was scared of the other people", "references": ["PersonX reads a book on how to ride their bikes safely"], "input": {"head": "PersonX is no longer scared", "relation": "isAfter"}}
{"generation": "PersonX takes a nap on the couch. After that, she goes to the bathroom and takes a shower", "references": ["PersonX hears a fire alarm"], "input": {"head": "PersonX takes a nap on the couch", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is very elusive.", "PersonY is secretive", "PersonX has too many other assignments.", "Person Y has too many people around them.", "Person X is bashful.", "PersonY is elusive"], "input": {"head": "PersonX gets to know PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX enjoys ___ together. The effect on PersonX will be similar to that of a normal person", "references": ["happy", "refresh", "none"], "input": {"head": "PersonX enjoys ___ together", "relation": "xEffect"}}
{"generation": "PersonX checks PersonX's mailbox. Before that, PersonX checks PersonX's mailbox", "references": ["PersonX sees the mailman leave his porch"], "input": {"head": "PersonX checks PersonX's mailbox", "relation": "isAfter"}}
{"generation": "PersonX wants to learn a new language. Before that, he's been working on a new game", "references": ["PersonX buys tickets for a european vacation"], "input": {"head": "PersonX wants to learn a new language", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has to get back to family.", "Their mother grounded them.", "PersonX lost their social security card.", "There is no work left.", "PersonX is disabled.", "PersonX has a criminal record.", "Their mother told them not to.", "PersonX has no skill set."], "input": {"head": "PersonX finally worked", "relation": "HinderedBy"}}
{"generation": "PersonX starts to worry. The effect on others will be felt by the player", "references": ["none"], "input": {"head": "PersonX starts to worry", "relation": "oEffect"}}
{"generation": "PersonX loves PersonY's performance. After that, he's a bit of a jerk", "references": ["PersonX tells PersonY how great the show was"], "input": {"head": "PersonX loves PersonY's performance", "relation": "isBefore"}}
{"generation": "police man can't be arrested for a crime", "references": ["fire gun", "drive car"], "input": {"head": "police man", "relation": "CapableOf"}}
{"generation": "PersonX buys dog food. Before that, he buys a dog food", "references": ["PersonX goes to the market"], "input": {"head": "PersonX buys dog food", "relation": "isAfter"}}
{"generation": "PersonX puts it all together. PersonX will be the one who will be the one to decide what", "references": ["to be satisfied", "content", "happy", "proud"], "input": {"head": "PersonX puts it all together", "relation": "xReact"}}
{"generation": "PersonX walks PersonY to PersonX's car. Before, PersonX needs to get PersonX to the car", "references": ["invite Person Y to his car", "to have his car", "to open door", "to stand up"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "xNeed"}}
{"generation": "PersonX walks up behind PersonY. Before, PersonX needs to be able to see PersonY's face", "references": ["to be walking", "to be on street", "to see persony", "none", "be near persony"], "input": {"head": "PersonX walks up behind PersonY", "relation": "xNeed"}}
{"generation": "PersonX goes from zero to hero. After, PersonX will want to be the hero", "references": ["reminisce over what happened", "improve one's station", "to celebrate his victory", "take some time alone", "to be recognized", "relax", "to celebrate the event", "to throw a party"], "input": {"head": "PersonX goes from zero to hero", "relation": "xWant"}}
{"generation": "PersonX gets something to eat. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets something to eat", "relation": "oEffect"}}
{"generation": "a ball point pen can be used for a number of different purposes", "references": ["keep track of information in a checkbook.", "break open for the ink", "sign legal documents", "to sign the agreement", "write out a will", "sign a check", "Write out lists", "take notes with", "communicate ideas", "sign a contract", "play with the ink", "use to estimate measurement if you don't have a ruler", "fill out an application", "Give as gift", "poke a hole in a paper to put in a binder", "write out a grocery list", "write information", "stab someone with"], "input": {"head": "ball point pen", "relation": "ObjectUse"}}
{"generation": "PersonX throws PersonX's hat in the ring. Before that, he throws PersonX's hat in the ring", "references": ["PersonX gives a rousing speech"], "input": {"head": "PersonX throws PersonX's hat in the ring", "relation": "isAfter"}}
{"generation": "PersonX lights a candle. After that, he takes a shower and then goes to bed", "references": ["PersonX is glad the smell is gone", "PersonX sings happy birthday to the child", "PersonX blows out the candle"], "input": {"head": "PersonX lights a candle", "relation": "isBefore"}}
{"generation": "PersonX begs PersonX's parents for one. As a result, others feel that they are being treated unfairly", "references": ["none", "unsure about purchasing the object"], "input": {"head": "PersonX begs PersonX's parents for one", "relation": "oReact"}}
{"generation": "PersonX avoids every ___. After, others will want to know what the hell you're doing", "references": ["none"], "input": {"head": "PersonX avoids every ___", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["person x is out of money", "PersonY did a bad job.", "PersonX's bank has frozen PersonX's account.", "person y will not take the money", "PersonX has no contact information for PersonY.", "PersonX doesn't have money."], "input": {"head": "PersonX pays PersonY wages", "relation": "HinderedBy"}}
{"generation": "PersonX fails PersonX's classes. The effect on PersonX will be applied to the class", "references": ["has to re-take the classes.", "can't get a good job."], "input": {"head": "PersonX fails PersonX's classes", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY's friends don't like PersonX", "Person x does not have their phone numbers", "PersonX does not have the numbers of these people", "There is not enough time to contact everyone", "PersonX doesn't have a list of PersonY's friends", "PersonX does not have access to a phone", "PersonY's friends have different schedules."], "input": {"head": "PersonX gets all PersonY's friends together", "relation": "HinderedBy"}}
{"generation": "PersonX flies overhead. After that, he's back in the cockpit", "references": ["PersonX uses super-strength to get the plane to safety"], "input": {"head": "PersonX flies overhead", "relation": "isBefore"}}
{"generation": "PersonX makes bread. PersonX is a very good bread maker", "references": ["Skilled", "dutiful", "Talented", "talented", "skilled", "cook"], "input": {"head": "PersonX makes bread", "relation": "xAttr"}}
{"generation": "PersonX creates the ___ in days. Before, PersonX needs to create the ___ in days", "references": ["Decide what to create", "Work hard", "To work with dedication", "To be consistent", "none"], "input": {"head": "PersonX creates the ___ in days", "relation": "xNeed"}}
{"generation": "PersonX fixes the issue. Before that, the game would crash if you tried to use the", "references": ["PersonX notices the sink is leaking"], "input": {"head": "PersonX fixes the issue", "relation": "isAfter"}}
{"generation": "PersonX performs PersonX's ___ in a manner. Before, PersonX needs to perform the ___ in order to perform the PersonX", "references": ["to carry out a duty", "training", "to work with others", "practice", "to get a job", "develop a system of doing things", "be trusted to do the work"], "input": {"head": "PersonX performs PersonX's ___ in a manner", "relation": "xNeed"}}
{"generation": "PersonX grabs PersonY's gun. Before, PersonX needs to get PersonY's gun", "references": ["approach the person.", "to find their gun", "to decide when to grab the gun.", "none", "to reach out for it"], "input": {"head": "PersonX grabs PersonY's gun", "relation": "xNeed"}}
{"generation": "PersonX doesn't make the cut. PersonX will be the one who gets the most votes", "references": ["sad", "dejected", "disheartened", "disappointed", "unworthly"], "input": {"head": "PersonX does n't make the cut", "relation": "xReact"}}
{"generation": "write story. PersonX did this to me", "references": ["get published"], "input": {"head": "write story", "relation": "xIntent"}}
{"generation": "PersonX looks in PersonX's cupboard. Before, PersonX needs to be able to see the person in person", "references": ["to know where personX lives", "to open the door", "to travel to personX's house", "to enter personX's house", "to walk over to the cabinet", "none", "to locate the cupboard in personX's house"], "input": {"head": "PersonX looks in PersonX's cupboard", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't live near a computer store.", "PersonX doesn't have any money.", "PersonX's boss fired him so he cannot afford a computer.", "PersonX is computer illiterate.", "PersonX has no money.", "PersonX can't decide what brand to buy.", "The local technology shop owner banned personX from the store.", "PersonX doesn't know which one to buy.", "PersonX's father will not buy it for him.", "PersonX can't afford it.", "PersonX is Amish and can't use computers."], "input": {"head": "PersonX buys a computer", "relation": "HinderedBy"}}
{"generation": "a postal counter can be used for the delivery of goods to the address specified in the", "references": ["buy for stamp collection", "buying stamps", "insure packages", "count postals", "estimate postage", "buy stamps", "buy postage", "send packages"], "input": {"head": "postal counter", "relation": "ObjectUse"}}
{"generation": "PersonX works tirelessly. Before, PersonX needs to be able to do things like create a new account", "references": ["to want to succeed", "to have work to do", "to have task to do", "to be motivated"], "input": {"head": "PersonX works tirelessly", "relation": "xNeed"}}
{"generation": "PersonX has trouble staying awake. After that, he's not very good at sleeping", "references": ["PersonX cracks open an energy drink to stay awake"], "input": {"head": "PersonX has trouble staying awake", "relation": "isBefore"}}
{"generation": "PersonX burns ___ badly. PersonX is a fucking idiot", "references": ["pale", "hurt", "violent", "injured", "careless", "fair"], "input": {"head": "PersonX burns ___ badly", "relation": "xAttr"}}
{"generation": "PersonX saves for years. Before that, he was a member of the team that won the", "references": ["PersonX wants to save up for a new car"], "input": {"head": "PersonX saves for years", "relation": "isAfter"}}
{"generation": "PersonX wipes PersonY's forehead. PersonX will be able to see PersonY's face", "references": ["like they helped someone out", "helpful", "protective"], "input": {"head": "PersonX wipes PersonY's forehead", "relation": "xReact"}}
{"generation": "a bunch of cigarettes can be used for a few hours, but it's not a good", "references": ["sell", "throw out the window", "smoke while gaming", "gather the tobacco and use as chewing tobacco", "smoke at a party", "kill you slowly", "pass around for smoking", "fill up a small hole", "to get that nicotine fix in"], "input": {"head": "bunch of cigarettes", "relation": "ObjectUse"}}
{"generation": "PersonX shuts the ___ behind PersonY is filled by the ___", "references": ["door", "cabinet", "windows", "window"], "input": {"head": "PersonX shuts the ___ behind PersonY", "relation": "isFilledBy"}}
{"generation": "PersonX falls ill. After that, he is taken to the hospital", "references": ["PersonX stays in bed", "PersonX went to the doctor", "PersonX schedules an appointment with their doctor"], "input": {"head": "PersonX falls ill", "relation": "isBefore"}}
{"generation": "PersonX finds ___ though. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX finds ___ though", "relation": "oEffect"}}
{"generation": "PersonX is a good soccer player. PersonX will be a good soccer player", "references": ["center of attention", "noticed", "strong"], "input": {"head": "PersonX is a good soccer player", "relation": "xReact"}}
{"generation": "PersonX is coming to an end. PersonX will be replaced by a new character called \"Person X\"", "references": ["sad about it", "depressed", "desperate"], "input": {"head": "PersonX is coming to an end", "relation": "xReact"}}
{"generation": "PersonX finds ___ that PersonY liked. After, others will want to know who is the best person to be with", "references": ["to call her friends and tell them about the puppy.", "thank personx for the cat", "take the cat home", "to thank X for the puppy."], "input": {"head": "PersonX finds ___ that PersonY liked", "relation": "oWant"}}
{"generation": "PersonX covers PersonX's head. PersonX did this to her in order to get her to stop talking about", "references": ["to show respect", "to be dry", "their head covered", "to be warm", "to be shielded from the rain"], "input": {"head": "PersonX covers PersonX's head", "relation": "xIntent"}}
{"generation": "PersonX feels better ___. Before, PersonX needs to be able to do things like:\n\n-", "references": ["to exercise", "to of not been feeling good", "to eat healthy food", "to of rested", "to rest", "to drink enough water"], "input": {"head": "PersonX feels better ___", "relation": "xNeed"}}
{"generation": "PersonX puts PersonX's mind to it. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "oEffect"}}
{"generation": "PersonX protects the ___ from harm. PersonX is a member of the ___, and the ___ is", "references": ["dutiful", "strong", "positive", "sacrificial", "optimistic", "protective"], "input": {"head": "PersonX protects the ___ from harm", "relation": "xAttr"}}
{"generation": "PersonX gets PersonY's license. Before, PersonX needs to be a member of PersonX's team", "references": ["to be knowing Y", "patience", "a car", "to grab a pen", "to be knowing where Y keeps licence", "to grab paper"], "input": {"head": "PersonX gets PersonY's license", "relation": "xNeed"}}
{"generation": "PersonX attains PersonX's goals. PersonX will be able to use the PersonX trait to gain the", "references": ["satisfied.", "proud", "proud to have reached his goal"], "input": {"head": "PersonX attains PersonX's goals", "relation": "xReact"}}
{"generation": "PersonX hands it to PersonY. After that, PersonX hands it to PersonY", "references": ["PersonX tells PersonY to open a bank account"], "input": {"head": "PersonX hands it to PersonY", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is not allowed on the computer.", "PersonX will be fired", "PersonX's girlfriend told him that it is a bad idea", "PersonX does not know the password.", "PersonX's dad made it impossible", "PersonX is trying to be good.", "PersonX can't get the forms", "PersonX's boss threatened to fire him if he did", "PersonX has no access to the forms"], "input": {"head": "PersonX distributes in forms without permission", "relation": "HinderedBy"}}
{"generation": "PersonX would like PersonY. PersonX is a very good person, but he's not a", "references": ["social", "emotional", "envious", "friendly", "loving", "boring"], "input": {"head": "PersonX would like PersonY", "relation": "xAttr"}}
{"generation": "PersonX pumps PersonY's gas. PersonX will be able to pump PersonY's gas", "references": ["hopeful", "good about themselves", "thoughtful", "proud that he did his part", "proud"], "input": {"head": "PersonX pumps PersonY's gas", "relation": "xReact"}}
{"generation": "PersonX finds PersonY at home. As a result, others feel that they are being treated unfairly", "references": ["happy", "none", "surprised"], "input": {"head": "PersonX finds PersonY at home", "relation": "oReact"}}
{"generation": "You are likely to find a senate in a state that is not a state that is not a", "references": ["netherlands", "belmopan", "hague", "belize"], "input": {"head": "senate", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too much of a perfectionist", "PersonX's math teacher is the best giving classes.", "PersonX's father gave PersonX an order to never fail math.", "because he is a math genius", "Person X is a math prodigy and it would be suspicious if they failed.", "Person X won't graduate without this math class.", "parents would be very angry", "PersonX is too good at math"], "input": {"head": "PersonX fails math", "relation": "HinderedBy"}}
{"generation": "PersonX gets a small loan. PersonX is a very nice guy, but he's not a", "references": ["rich", "relieved", "competent", "in debt", "trustworthy", "determined"], "input": {"head": "PersonX gets a small loan", "relation": "xAttr"}}
{"generation": "PersonX sees PersonX too. PersonX is a very good player, but he's not a", "references": ["Observant", "thorough", "Knowledgable", "observant", "self-reflective"], "input": {"head": "PersonX sees PersonX too", "relation": "xAttr"}}
{"generation": "PersonX wins several awards. Before that, he was a member of the team that won the", "references": ["PersonX directs a movie"], "input": {"head": "PersonX wins several awards", "relation": "isAfter"}}
{"generation": "PersonX puts ___ on top. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX puts ___ on top", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is trying to be nice.", "Person X doesn't have a sleeve.", "Person X is not finding it funny.", "PersonX's sleeve is too short.", "PersonX cannot reach their sleeve.", "Person X knows this would be rude."], "input": {"head": "PersonX laughs in PersonX's sleeve", "relation": "HinderedBy"}}
{"generation": "PersonX sees the elephants. After that, he goes to the zoo and finds the elephants", "references": ["PersonX also sees the tigers"], "input": {"head": "PersonX sees the elephants", "relation": "isBefore"}}
{"generation": "PersonX not does PersonY any favours. The effect on others will be limited to the person who is the most popular", "references": ["they tell others to avoid him", "avoid personX", "communicate less with person X.", "works hard to find his own solutions.", "none"], "input": {"head": "PersonX not does PersonY any favours", "relation": "oEffect"}}
{"generation": "PersonX puts it in PersonX's purse. PersonX is a character in the game who is a member of", "references": ["careful", "tidy", "assertive"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "xAttr"}}
{"generation": "PersonX puts ___ into the oven. After, others will want to eat it", "references": ["none"], "input": {"head": "PersonX puts ___ into the oven", "relation": "oWant"}}
{"generation": "PersonX does better in school. Before that, he was a very good student", "references": ["PersonX studies harder"], "input": {"head": "PersonX does better in school", "relation": "isAfter"}}
{"generation": "move car. PersonX did this to me, and I'm not sure if it was", "references": ["go somewhere", "drive car"], "input": {"head": "move car", "relation": "xIntent"}}
{"generation": "deep sea fisherman can be found in the waters off the coast of the", "references": ["catch large tunafish"], "input": {"head": "deep sea fisherman", "relation": "CapableOf"}}
{"generation": "PersonX sneaks around. PersonX is a very good player, but he's not a", "references": ["daring", "clever", "Clever", "discreet", "devious", "mischievous", "Evasive"], "input": {"head": "PersonX sneaks around", "relation": "xAttr"}}
{"generation": "PersonX gathers all the ingredients. After, others will want to know what they are doing", "references": ["none"], "input": {"head": "PersonX gathers all the ingredients", "relation": "oWant"}}
{"generation": "PersonX gives the ___ PersonY's name. As a result, others feel that the person is a \"monster\" and that", "references": ["happy", "none", "surprised", "satisfied"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "oReact"}}
{"generation": "PersonX donates plasma. After, PersonX will want to use the plasma to heal the player", "references": ["eat food", "to earn money", "to help people in trouble", "get's a band aid", "get happiness from it", "to help others"], "input": {"head": "PersonX donates plasma", "relation": "xWant"}}
{"generation": "PersonX blows smoke. Before that, he's got a big grin on his face", "references": ["PersonX onx lights a cigarette"], "input": {"head": "PersonX blows smoke", "relation": "isAfter"}}
{"generation": "PersonX gets PersonX's foot in the door. After, others will want to talk to him", "references": ["to pay him for his effort", "to help him learn the trade", "none"], "input": {"head": "PersonX gets PersonX's foot in the door", "relation": "oWant"}}
{"generation": "PersonX gets a small loan. PersonX will be able to pay off the loan", "references": ["hopeful", "happy", "excited", "satisfied"], "input": {"head": "PersonX gets a small loan", "relation": "xReact"}}
{"generation": "PersonX storms out of the blocks. PersonX is a little confused as to why he's here", "references": ["mean", "impatient", "aggressive", "angry", "eager", "wild", "ambitious", "violent", "agressive"], "input": {"head": "PersonX storms out of the blocks", "relation": "xAttr"}}
{"generation": "PersonX quickly called. Before that, he had been a member of the team that had", "references": ["PersonX hears there is an emergency at work"], "input": {"head": "PersonX quickly called", "relation": "isAfter"}}
{"generation": "PersonX drives ___ in PersonY's new car. Before, PersonX needs to drive ___ in PersonY's new car", "references": ["Know how to work the car", "to warm up the car", "Get in the car", "to get the keys", "have permission from PersonY"], "input": {"head": "PersonX drives ___ in PersonY's new car", "relation": "xNeed"}}
{"generation": "PersonX wants cereal. After that, he's going to have to go to the mall", "references": ["PersonX pours a bowl of cereal"], "input": {"head": "PersonX wants cereal", "relation": "isBefore"}}
{"generation": "PersonX dyes PersonX's hair pink. PersonX will be wearing a pink dress", "references": ["worried", "disappointed", "good.", "adventurous", "weird"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "xReact"}}
{"generation": "PersonX visits PersonX's daughter. The effect on others will be different", "references": ["gets hugged", "none", "gets stressed", "gets excited"], "input": {"head": "PersonX visits PersonX's daughter", "relation": "oEffect"}}
{"generation": "PersonX buys PersonX's wife ___. As a result, others feel that PersonX is a bad person", "references": ["happy.", "sadness", "contempt"], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "oReact"}}
{"generation": "PersonX enters PersonY's office. As a result, others feel that PersonX is a threat to the group", "references": ["happy", "also curious", "surprised to see personx"], "input": {"head": "PersonX enters PersonY's office", "relation": "oReact"}}
{"generation": "PersonX opens the windows. After that, he goes to the door and opens it", "references": ["PersonX grabs a glass of ice water"], "input": {"head": "PersonX opens the windows", "relation": "isBefore"}}
{"generation": "PersonX works things out. After that, he's a bit of a jerk", "references": ["PersonX is happy they made up"], "input": {"head": "PersonX works things out", "relation": "isBefore"}}
{"generation": "PersonX takes ___ to prevent. After, PersonX will want to know if you're a good person", "references": ["test the plan out", "make sure the plan works", "to continue to take his medications", "to stay healthy"], "input": {"head": "PersonX takes ___ to prevent", "relation": "xWant"}}
{"generation": "PersonX calls PersonY at work. PersonX will be the one who calls PersonY", "references": ["lonely", "informed", "reassured", "loving"], "input": {"head": "PersonX calls PersonY at work", "relation": "xReact"}}
{"generation": "PersonX speaks the ___ fluently is filled by the same people who are the most likely to be", "references": ["German", "Spanish", "English", "French"], "input": {"head": "PersonX speaks the ___ fluently", "relation": "isFilledBy"}}
{"generation": "PersonX finds PersonY explanation. PersonX did this to me, and I'm not sure if it's", "references": ["none", "to have all the facts"], "input": {"head": "PersonX finds PersonY explanation", "relation": "xIntent"}}
{"generation": "PersonX has a baby girl. PersonX is a girl", "references": ["strong", "committed", "brave", "excited", "anxious", "parental"], "input": {"head": "PersonX has a baby girl", "relation": "xAttr"}}
{"generation": "PersonX throws the ___ overboard. PersonX will be thrown into the water", "references": ["lucky and questioning"], "input": {"head": "PersonX throws the ___ overboard", "relation": "xReact"}}
{"generation": "PersonX arches PersonY's back. As a result, others feel the same way", "references": ["none", "thankful."], "input": {"head": "PersonX arches PersonY's back", "relation": "oReact"}}
{"generation": "PersonX buys a used car. PersonX is a member of the \"Fashion Police\" and", "references": ["busy", "motivated", "positive", "desperate"], "input": {"head": "PersonX buys a used car", "relation": "xAttr"}}
{"generation": "PersonX takes place in the century. After, PersonX will want to know what the future holds for the world", "references": ["read", "to live in the moment", "watch tv", "unclear", "to make a statement"], "input": {"head": "PersonX takes place in the century", "relation": "xWant"}}
{"generation": "PersonX chases the cat. After that, he goes to the bathroom and finds the cat", "references": ["PersonX trips and falls on the ground", "PersonX catches the cat", "PersonX gets arrested"], "input": {"head": "PersonX chases the cat", "relation": "isBefore"}}
{"generation": "PersonX falls into the wrong hands. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX falls into the wrong hands", "relation": "oReact"}}
{"generation": "PersonX fits PersonY's needs. The effect on others will be different", "references": ["Sighs in contentment", "Ends up with X", "gets receipt", "gets cash back", "none"], "input": {"head": "PersonX fits PersonY's needs", "relation": "oEffect"}}
{"generation": "PersonX pays ___ late. PersonX is not paying", "references": ["guilty", "careless", "ashamed", "stressed", "irresponsible"], "input": {"head": "PersonX pays ___ late", "relation": "xAttr"}}
{"generation": "PersonX is someone else's ___. As a result, others feel that they are not being treated fairly", "references": ["unhappy,hurt,disturbed"], "input": {"head": "PersonX is someone else 's ___", "relation": "oReact"}}
{"generation": "PersonX gives ___ a warning. The effect on PersonX will be the same as the effect on PersonX", "references": ["none"], "input": {"head": "PersonX gives ___ a warning", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX likes to cheat", "PersonX was told by her mom that they were bad people", "PersonX is a mean person", "PersonX's friend caused a hostile environment", "It makes them feel good to hit", "PersonX is too mean.", "They have a mental problem that makes them angry", "PersonX's dad ordered her to take them out", "PersonX doesn't have any toys."], "input": {"head": "PersonX plays nice", "relation": "HinderedBy"}}
{"generation": "PersonX visits ___ every day. As a result, others feel like they are being watched", "references": ["sociable", "friendly", "none", "thankful"], "input": {"head": "PersonX visits ___ every day", "relation": "oReact"}}
{"generation": "PersonX talks to PersonY again. The effect on PersonX will be similar to the one seen in the previous episode", "references": ["communicates", "uses hand gesters", "voices opinions", "becomes heard", "none"], "input": {"head": "PersonX talks to PersonY again", "relation": "xEffect"}}
{"generation": "PersonX sees an opening. As a result, others feel that they are being punished for their actions", "references": ["irritated", "none"], "input": {"head": "PersonX sees an opening", "relation": "oReact"}}
{"generation": "PersonX pumps PersonX's gas. After that, PersonX will be able to use the gas to", "references": ["PersonX gets a big tip", "PersonX pays the cashier for their gas"], "input": {"head": "PersonX pumps PersonX's gas", "relation": "isBefore"}}
{"generation": "PersonX gives ___ a warning. The effect on others will be limited to the user", "references": ["behaves more carefully", "develops insight", "contemplates the warning", "nods head"], "input": {"head": "PersonX gives ___ a warning", "relation": "oEffect"}}
{"generation": "PersonX touches PersonY's shoulder. After that, they both get up and walk away", "references": ["PersonX laughs as PersonY jumps"], "input": {"head": "PersonX touches PersonY's shoulder", "relation": "isBefore"}}
{"generation": "PersonX knocks PersonY's socks off. After that, PersonX goes to the bathroom and knocks PersonY", "references": ["PersonX takes the trophy"], "input": {"head": "PersonX knocks PersonY's socks off", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["There is nobody near PersonX.", "PersonX can't find anyone who needs help.", "PersonX must steal to feed his family.", "PersonX is in prison.", "Person X doesn't have the means to be helpful to anyone.", "Person X can't think of a good deed that needs doing."], "input": {"head": "PersonX does a good deed", "relation": "HinderedBy"}}
{"generation": "PersonX is a good person. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX is a good person", "relation": "oEffect"}}
{"generation": "PersonX stills lives. After that, he's still a member of the team", "references": ["PersonX signs up to skydive again"], "input": {"head": "PersonX stills lives", "relation": "isBefore"}}
{"generation": "PersonX gives you PersonY account. Before that, you can use PersonX to create a new account", "references": ["PersonX is not the best hacker"], "input": {"head": "PersonX gives you PersonY account", "relation": "isAfter"}}
{"generation": "PersonX walks PersonY to PersonX's car. The effect on PersonX will be similar to the effect of PersonY's car", "references": ["He opens the car door for Person Y", "opens door", "speaks", "PersonX hold open the door", "Person X drives the car", "PersonX bids them goodnight"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "xEffect"}}
{"generation": "PersonX forms a band. After, PersonX will want to know who you are", "references": ["record performance", "to launch the band", "to book performances", "to play music with band", "perform on stage", "to perform in front of the audience"], "input": {"head": "PersonX forms a band", "relation": "xWant"}}
{"generation": "PersonX opens PersonX's doors. As a result, others feel the same way", "references": ["none", "enlightened"], "input": {"head": "PersonX opens PersonX's doors", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no way to get the car to the repair shop.", "There's no way to get the car to a mechanic.", "PersonX doesn't have the money to get the car fixed.", "The repair shop does not have time in their schedule today.", "The repair shop is not open today.", "PersonX doesn't have the right tools.", "PersonY doesn't want PersonX to fix it.", "The car needs a part that will have to be ordered."], "input": {"head": "PersonX gets PersonY's car fixed", "relation": "HinderedBy"}}
{"generation": "PersonX sleeps tonight. After, PersonX will want to sleep with you", "references": ["to be energized for the next day", "to relax", "to go to work earlier than usual.", "to feel fresh in the morning."], "input": {"head": "PersonX sleeps tonight", "relation": "xWant"}}
{"generation": "PersonX wins the match. The effect on others will be similar to that of a normal match", "references": ["none"], "input": {"head": "PersonX wins the match", "relation": "oEffect"}}
{"generation": "PersonX watches scary movies. Before that, he was a writer for the BBC, and he", "references": ["PersonX goes to the theatre"], "input": {"head": "PersonX watches scary movies", "relation": "isAfter"}}
{"generation": "PersonX scrambles eggs. PersonX is a member of the team that is responsible for the", "references": ["dutiful", "Talented", "hungry", "Skilled", "industrious"], "input": {"head": "PersonX scrambles eggs", "relation": "xAttr"}}
{"generation": "PersonX thinks it was beautiful. After, others will want to see it", "references": ["to tell others about the beauty", "none", "to experience the beauty again"], "input": {"head": "PersonX thinks it was beautiful", "relation": "oWant"}}
{"generation": "You are likely to find a fight in a bar or restaurant, but you will not be able", "references": ["hockey game"], "input": {"head": "fight", "relation": "AtLocation"}}
{"generation": "PersonX blows through town. PersonX is a character who is a bit of a jerk,", "references": ["Selfless", "Careless", "exuberant", "quick"], "input": {"head": "PersonX blows through town", "relation": "xAttr"}}
{"generation": "PersonX plays PersonY's new game. After, PersonX will want to play PersonX's new game", "references": ["to play games with PersonY", "to beat PersonY", "to finish all stages of the new games", "to punch Y in the mouth for winning the game because he cheated.", "to invite their friends to play with them", "to celebrate that X won the game over Y."], "input": {"head": "PersonX plays PersonY's new game", "relation": "xWant"}}
{"generation": "PersonX takes matters. PersonX is a very good player, and I think he's", "references": ["heroic", "assertive", "noble", "independent", "serious", "responsible"], "input": {"head": "PersonX takes matters", "relation": "xAttr"}}
{"generation": "PersonX curls PersonY's hair. PersonX did this to PersonY's hair", "references": ["to groom person y", "to help"], "input": {"head": "PersonX curls PersonY's hair", "relation": "xIntent"}}
{"generation": "PersonX appoints a ___ to investigate. After, PersonX will want to know who the ___ is", "references": ["to solve the case", "to come to a conclusion", "to see what they find out", "Gather information.", "to make sure everyone is professional"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "xWant"}}
{"generation": "PersonX orders one. Before that, he orders the other", "references": ["PersonX reads the menu of cheesecakes"], "input": {"head": "PersonX orders one", "relation": "isAfter"}}
{"generation": "PersonX makes PersonY feel good. Before that, he's a little bit of a jerk", "references": ["PersonX knows it's PersonY's birthday", "PersonX starts dating someone new"], "input": {"head": "PersonX makes PersonY feel good", "relation": "isAfter"}}
{"generation": "PersonX is working at a diner. Before, PersonX needs to get a job at a restaurant", "references": ["to get an interview", "to apply for the diner", "Get dressed before their shift.", "Arrive on time to the location.", "Get a job at a diner.", "none"], "input": {"head": "PersonX is working at a diner", "relation": "xNeed"}}
{"generation": "PersonX wants to play outside. The effect on PersonX will be similar to that of a normal person", "references": ["stays inside", "puts on shoes", "goes outside", "gets exercise", "enjoys the sunshine", "checks the time", "checks the weather"], "input": {"head": "PersonX wants to play outside", "relation": "xEffect"}}
{"generation": "an entry fee can be used for the purchase of a ticket", "references": ["get a complimentary gift", "feel like part of the club", "validate contest entry", "fulfill requirements", "to participate in the event", "collect money", "get into an event", "keep out the riff-raff", "pay to have fun", "start a fund raiser", "pay to get into a museum", "pay for a ticket"], "input": {"head": "entry fee", "relation": "ObjectUse"}}
{"generation": "PersonX gets a call from PersonY's boss. The effect on others will be different", "references": ["Y explains his side of the situation", "Boss talks to PersonX about a project.", "Boss tells PersonX about a new hire in PersonX's department.", "none", "Person Y gets confronted by X about the call."], "input": {"head": "PersonX gets a call from PersonY's boss", "relation": "oEffect"}}
{"generation": "PersonX sets ___ on the table. PersonX will be the one who is the one who is the one", "references": ["neutral", "tired", "lazy"], "input": {"head": "PersonX sets ___ on the table", "relation": "xReact"}}
{"generation": "PersonX starts working out. PersonX did this to me, and I'm glad I did", "references": ["to get healthy", "to build muscle"], "input": {"head": "PersonX starts working out", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They're too drunk and can't see properly.", "Person X is with their friends.", "Person X has too much respect for Person Y", "Person Y is of the opposite sex.", "Person Y ran away.", "Person X is not a fighter.", "Persony ran off", "Person X will be in a lot of trouble"], "input": {"head": "PersonX hits PersonY's face", "relation": "HinderedBy"}}
{"generation": "PersonX licks PersonY's balls. As a result, others feel the same way", "references": ["powerful", "important and powerful", "satisfied"], "input": {"head": "PersonX licks PersonY's balls", "relation": "oReact"}}
{"generation": "PersonX picks on PersonY. PersonX is a bit of a jerk, but he's a", "references": ["cruel", "mean", "aggressive", "malicious", "unkind"], "input": {"head": "PersonX picks on PersonY", "relation": "xAttr"}}
{"generation": "PersonX feels cheated. PersonX will be the one who gets the most out of the game", "references": ["let down", "like someone took advantage of them", "jipped", "upset", "disgusted"], "input": {"head": "PersonX feels cheated", "relation": "xReact"}}
{"generation": "PersonX makes that mistake again. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX makes that mistake again", "relation": "oWant"}}
{"generation": "PersonX makes some pasta. PersonX will be able to make pasta for you", "references": ["accomlished", "successful", "satisfied"], "input": {"head": "PersonX makes some pasta", "relation": "xReact"}}
{"generation": "PersonX goes to kill PersonY. Before that, he's going to kill PersonZ", "references": ["PersonX swears revenge on PersonY", "PersonX finds out PersonY is a thief", "PersonX grabs a knife"], "input": {"head": "PersonX goes to kill PersonY", "relation": "isAfter"}}
{"generation": "PersonX wipes PersonX's forehead. After, PersonX will want to talk to PersonX", "references": ["to throw away napkin", "to stop sweat dripping into eyes", "to drink water", "dry forehead"], "input": {"head": "PersonX wipes PersonX's forehead", "relation": "xWant"}}
{"generation": "PersonX thinks it would be fun. Before, PersonX needs to be able to do things like make a video game", "references": ["to think about doing something", "talk to people", "be open-minded or outgoing", "to make a plan", "make some plans", "has similar experiences before"], "input": {"head": "PersonX thinks it would be fun", "relation": "xNeed"}}
{"generation": "Sometimes red wine causes a lot of problems", "references": ["migraines"], "input": {"head": "red wine", "relation": "Causes"}}
{"generation": "PersonX speaks the ___ fluently. After, others will want to know what he's talking about", "references": ["none"], "input": {"head": "PersonX speaks the ___ fluently", "relation": "oWant"}}
{"generation": "PersonX finds ___ anywhere. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX finds ___ anywhere", "relation": "oWant"}}
{"generation": "PersonX advances another ___. After, others will want to know what the other is doing", "references": ["none"], "input": {"head": "PersonX advances another ___", "relation": "oWant"}}
{"generation": "PersonX pulls PersonY's hand away. After, others will want to know what's going on", "references": ["to thank person X", "to check nothing untoward has happened."], "input": {"head": "PersonX pulls PersonY's hand away", "relation": "oWant"}}
{"generation": "PersonX looks confused. After that, he says, \"I'm sorry, but I", "references": ["PersonX smiles when the teacher explains it again"], "input": {"head": "PersonX looks confused", "relation": "isBefore"}}
{"generation": "PersonX puts it together. As a result, others feel that the game is too complex and too complex to", "references": ["happy.", "none"], "input": {"head": "PersonX puts it together", "relation": "oReact"}}
{"generation": "PersonX sends PersonY a letter. As a result, others feel that PersonY is a better person than PersonX", "references": ["good", "none", "happy to receive letter"], "input": {"head": "PersonX sends PersonY a letter", "relation": "oReact"}}
{"generation": "PersonX breaks the news to PersonY. PersonX will be the one who gets the message", "references": ["responsive", "confused", "relieved"], "input": {"head": "PersonX breaks the news to PersonY", "relation": "xReact"}}
{"generation": "You are likely to find an american english in an english dictionary", "references": ["united states"], "input": {"head": "american english", "relation": "AtLocation"}}
{"generation": "PersonX sprays by a skunk. The effect on PersonX will be similar to that of a spray from a spray from", "references": ["Person x needs to wash", "Person needs to deodorize", "PersonX takes a shower", "PersonX bathes in tomato juice"], "input": {"head": "PersonX sprays by a skunk", "relation": "xEffect"}}
{"generation": "a dirty bowls can be used for a lot of things", "references": ["store rubbish", "wash before going to bed", "gross out your roommate", "attract bugs", "Feed the dogs", "throw away because they're too lazy to clean it", "through in trash", "Make a fly trap", "plant flowers in", "hide from parents"], "input": {"head": "dirty bowls", "relation": "ObjectUse"}}
{"generation": "PersonX sees ___ on the street. PersonX will be able to see the person who is in the street", "references": ["sad", "interested", "satisfied"], "input": {"head": "PersonX sees ___ on the street", "relation": "xReact"}}
{"generation": "PersonX brings the puppy home. Before, PersonX needs to be able to walk around with the puppy", "references": ["get house ready for puppy", "to go the pet shop", "to purchase it", "adopt puppy"], "input": {"head": "PersonX brings the puppy home", "relation": "xNeed"}}
{"generation": "PersonX brings the ___ to a head. Before, PersonX needs to be able to use the ___ to get the ___", "references": ["none"], "input": {"head": "PersonX brings the ___ to a head", "relation": "xNeed"}}
{"generation": "PersonX gives the ___ PersonX's name. After, PersonX will want to know who the ___ PersonX is", "references": ["to be known", "to let PersonX know the news", "to book a room", "to change the name"], "input": {"head": "PersonX gives the ___ PersonX's name", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know about health.", "PersonX is too poor to afford healthy food.", "PersonX doesn't know what to purchase.", "The grocery bill will be to high for Person X.", "PersonX's boss keeps catering pizza at work lunches.", "PersonX's mother is in charge of cooking and she likes junk.", "The store didn't stock the shelves before PersonX arrived.", "Person  X  boyfriend will not support Person  X."], "input": {"head": "PersonX eats healthy food", "relation": "HinderedBy"}}
{"generation": "PersonX finds PersonX's daughter. Before that, she's been in a relationship with PersonX for", "references": ["PersonX is shouting their daughter's name", "PersonX goes to the school"], "input": {"head": "PersonX finds PersonX's daughter", "relation": "isAfter"}}
{"generation": "PersonX jumps the shark. Before, PersonX needs to be able to use his powers to get to the", "references": ["none", "to drive the boat", "to start the engine"], "input": {"head": "PersonX jumps the shark", "relation": "xNeed"}}
{"generation": "PersonX learns the printer's ___. After, PersonX will want to print the printer's name", "references": ["to get hired as a printer", "to check their progress", "to test their knowledge", "put paper in", "to print a paper", "to begin printing materials"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xWant"}}
{"generation": "PersonX hangs PersonX's ___ in shame. PersonX did this to me", "references": ["to express shame", "thing that is bad", "none", "to show regret"], "input": {"head": "PersonX hangs PersonX's ___ in shame", "relation": "xIntent"}}
{"generation": "PersonX diagnoses with the flu. As a result, others feel that they are not being treated properly", "references": ["sad", "none"], "input": {"head": "PersonX diagnoses with the flu", "relation": "oReact"}}
{"generation": "PersonX starts to sink. As a result, others feel the same way", "references": ["none", "disgusted"], "input": {"head": "PersonX starts to sink", "relation": "oReact"}}
{"generation": "PersonX learns the printer's ___. Before, PersonX needs to know the printer's ___", "references": ["get a printer", "eliminate distractions", "gathera learning material", "to purchase printing equipment", "look at the printer", "to find a printing apprenticeship"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xNeed"}}
{"generation": "PersonX is an astronaut when PersonY grew up. After that, he was a member of the Space Shuttle Program", "references": ["PersonX mentors PersonY while PersonY studies to be an astronaut"], "input": {"head": "PersonX is an astronaut when PersonY grew up", "relation": "isBefore"}}
{"generation": "PersonX grabs ___ from behind is filled by a large, red-haired man", "references": ["hand", "cats", "a pig", "the dresser", "gifts", "frogs", "a sheep"], "input": {"head": "PersonX grabs ___ from behind", "relation": "isFilledBy"}}
{"generation": "PersonX calls ___ immediately. After, others will want to know what's going on", "references": ["to respond", "to listen", "to converse", "to ignore the call", "to pick up the call"], "input": {"head": "PersonX calls ___ immediately", "relation": "oWant"}}
{"generation": "PersonX invites PersonY. PersonX will be the one who will be the first to get the", "references": ["inclusive", "happy", "like a good person", "excited"], "input": {"head": "PersonX invites PersonY", "relation": "xReact"}}
{"generation": "PersonX creates the ___ in days. The effect on PersonX will be the same as the effect on PersonX", "references": ["body trembles", "falls asleep", "no effect", "becomes tired"], "input": {"head": "PersonX creates the ___ in days", "relation": "xEffect"}}
{"generation": "PersonX touches wood. After that, he's a bit more of a \"go-", "references": ["PersonX receives a splinter from the wood"], "input": {"head": "PersonX touches wood", "relation": "isBefore"}}
{"generation": "PersonX gives PersonY PersonX's name. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to be polite", "to help someone", "persony was a new acquaintence"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xIntent"}}
{"generation": "PersonX takes ___ daily. As a result, others feel more comfortable with ___", "references": ["none"], "input": {"head": "PersonX takes ___ daily", "relation": "oReact"}}
{"generation": "PersonX doesn't want to waste it. Before, PersonX needs to be able to do things like:\n\n-", "references": ["Make a budget", "none", "Receive gift"], "input": {"head": "PersonX does n't want to waste it", "relation": "xNeed"}}
{"generation": "PersonX never been on one. PersonX did this to me", "references": ["to do other things"], "input": {"head": "PersonX never been on one", "relation": "xIntent"}}
{"generation": "PersonX spits nails. After, PersonX will want to know what you're doing", "references": ["clean up mess", "place hand in mouth again", "walk away to calm down", "talk to person who caused it", "finish woodwork", "look at fingers"], "input": {"head": "PersonX spits nails", "relation": "xWant"}}
{"generation": "a television can be used for a variety of purposes, including:\n\n\u2022", "references": ["relax in chair", "watch a documentary", "display picture", "project the show", "watch cartoons", "see lottery numbers", "use for viewing", "run the console", "watch while eating", "show the game", "watch the radar", "check winning numbers", "watch the lottery on tv", "watch wrestling", "play it from", "watch shows on", "display sports", "watch a film", "watch media streaming", "watch movies", "display the show", "watch show", "look at", "have played the system", "view the picture", "find nothing to watch on", "play video games", "watch programs", "watch results on", "watch from", "watch sexy movies", "play the movie on", "broadcast the show", "Use as a decoration", "watch video on", "see the game on", "Engage in screentime", "see the game", "light up the room", "turn on", "watch because they can't do anything else with this hangover", "tune into the daily program", "show the action", "watch the nightly news", "pair with remote", "watch in the background", "watch sports", "see shows on", "sell to the person", "watch the movie on", "consume media", "project experience", "view shows", "get tornado warning", "view the films", "watch the films", "put the show on", "watch dr phil", "see the program", "view it on", "watch the news on", "stream online", "watch a show", "display the movie", "see the channel", "project app", "see the films on", "show film on", "use as a plant stand", "watch the game on", "view the program", "see the action", "use as a boat anchor", "watch baseball", "watch a movie together", "project entertainment", "project film", "watch in the cabin", "watch on", "watch shows", "watch media coverage of the trial", "watch a movie", "turn off", "watch local news on", "watch the movies with", "display film", "project movie", "project the games onto", "have a means of watching football", "consume the content", "view a show on", "display the movies", "view the game", "watch shows,etc", "watch the news", "play the movie", "watch the show", "watch movie", "have something to break", "play the film on", "entertain themselves during the day", "watch the numbers", "show what they could be watching", "listen to speech", "watch video", "look at channels", "watch movie on", "switch on with the controller", "output the game", "see the gameplay on"], "input": {"head": "television", "relation": "ObjectUse"}}
{"generation": "PersonX comes of age. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX comes of age", "relation": "xIntent"}}
{"generation": "PersonX moves to florida. After that, he is sent to the main room", "references": ["PersonX attends classes at college", "PersonX begins their new job", "PersonX unpacks their moving van"], "input": {"head": "PersonX moves to florida", "relation": "isBefore"}}
{"generation": "PersonX looks up into PersonY's eyes. After that, she looks up at him", "references": ["PersonX proposes marriage to PersonY"], "input": {"head": "PersonX looks up into PersonY's eyes", "relation": "isBefore"}}
{"generation": "PersonX becomes great friends. After, PersonX will want to know who you are", "references": ["to hang out with his friend", "to get lunch with his friend", "eat fun foods", "play games"], "input": {"head": "PersonX becomes great friends", "relation": "xWant"}}
{"generation": "a machinery can be used for the purpose of producing a large amount of electricity", "references": ["build a hotel", "recycle for cash", "do the tests with", "hang clothes on to dry", "make drugs", "help", "hang clothing", "make a lot of noise", "failing dangerously", "lose a finger", "gauge all the numbers", "work", "print a newspaper", "perform", "function", "put food on to eat", "cut the grass"], "input": {"head": "machinery", "relation": "ObjectUse"}}
{"generation": "PersonX finds another. After that, he's back in the same room", "references": ["PersonX holds the new book tightly", "PersonX puts the shells in the beach bag", "PersonX plays with the new toy"], "input": {"head": "PersonX finds another", "relation": "isBefore"}}
{"generation": "PersonX finds PersonY's shoes. The effect on PersonX will be similar to that of the effect on PersonY", "references": ["receives thanks", "PersonX helps PersonY", "personY thanks them", "PersonX gets thanked", "gives the shoes to the person", "they gives personY the shoes"], "input": {"head": "PersonX finds PersonY's shoes", "relation": "xEffect"}}
{"generation": "PersonX waters PersonX's garden. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX waters PersonX's garden", "relation": "oEffect"}}
{"generation": "PersonX has a fear of heights. After, others will want to see him climb the tallest building in the world", "references": ["none"], "input": {"head": "PersonX has a fear of heights", "relation": "oWant"}}
{"generation": "PersonX maintains PersonY equilibrium. PersonX is the only entity that can be considered a \"person", "references": ["dedicated", "strong", "pleasant", "balanced", "calming", "steady"], "input": {"head": "PersonX maintains PersonY equilibrium", "relation": "xAttr"}}
{"generation": "PersonX forgets PersonY's wallet. After, PersonX will want to know who the person is", "references": ["drive back home", "to go back to get PersonY's wallet", "retrieve forgotten item", "to remember PersonY's wallet"], "input": {"head": "PersonX forgets PersonY's wallet", "relation": "xWant"}}
{"generation": "PersonX gets a small loan. As a result, others feel that they are being cheated", "references": ["happy", "none", "excited", "grateful"], "input": {"head": "PersonX gets a small loan", "relation": "oReact"}}
{"generation": "PersonX orders delivery food. PersonX is a member of the \"Guild of the Dead", "references": ["busy", "Lazy", "Hungry", "occupied"], "input": {"head": "PersonX orders delivery food", "relation": "xAttr"}}
{"generation": "PersonX grants a ___ by ccc. After, others will want to know what the ___ is", "references": ["none"], "input": {"head": "PersonX grants a ___ by ccc", "relation": "oWant"}}
{"generation": "PersonX burns the ___ at both ends. After, PersonX will want to kill PersonX", "references": ["to enjoy the rewards from working so hard", "To throw away", "to relax", "Put the candle away", "Clean up", "To turn it to ashes"], "input": {"head": "PersonX burns the ___ at both ends", "relation": "xWant"}}
{"generation": "PersonX obeys every ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["gets praised", "none", "gets used"], "input": {"head": "PersonX obeys every ___", "relation": "xEffect"}}
{"generation": "PersonX starts a campfire. The effect on others will be similar to that of a fire", "references": ["none"], "input": {"head": "PersonX starts a campfire", "relation": "oEffect"}}
{"generation": "PersonX buys cookies. After, others will want to know what cookies are", "references": ["none"], "input": {"head": "PersonX buys cookies", "relation": "oWant"}}
{"generation": "PersonX pumps PersonX's gas. Before, PersonX needs to pump PersonX's gas", "references": ["to want to speed up", "swipe his credit card.", "to pay the cashier.", "to get in the car", "none", "to open up his gas tank."], "input": {"head": "PersonX pumps PersonX's gas", "relation": "xNeed"}}
{"generation": "PersonX enjoys PersonY's class. After, PersonX will want to know who is the best person in the class", "references": ["to have a break from class", "tell someone about it", "go to another class", "to leave the class"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xWant"}}
{"generation": "PersonX forms PersonY opinion as. The effect on PersonX will be the same as the effect on PersonY", "references": ["gets into argument", "gets accused for manipulation"], "input": {"head": "PersonX forms PersonY opinion as", "relation": "xEffect"}}
{"generation": "PersonX realizes that PersonY was lost. Before, PersonX needs to find a way to get back to the original person", "references": ["to notice they were in a bad situation", "to of watched personY"], "input": {"head": "PersonX realizes that PersonY was lost", "relation": "xNeed"}}
{"generation": "PersonX tries PersonX's ___ at making. The effect on PersonX will be the same as PersonX's", "references": ["discovers a talent", "gains knowledge", "is successful in their attempt", "learns a new skill", "Learns a new craft", "Makes the item poorly"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "xEffect"}}
{"generation": "PersonX can not believe PersonX's eyes. As a result, others feel that PersonX is a liar", "references": ["none"], "input": {"head": "PersonX can not believe PersonX's eyes", "relation": "oReact"}}
{"generation": "PersonX seems larger and heavier at that elevation. Before that, he was a very good athlete, but he was", "references": ["PersonX climbs the hill"], "input": {"head": "PersonX seems larger and heavier at that elevation", "relation": "isAfter"}}
{"generation": "PersonX gives PersonY an earful. After that, PersonY is given a new name, PersonX", "references": ["PersonX leaves PersonY behind"], "input": {"head": "PersonX gives PersonY an earful", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X's doctor gave Person X medicine to stay calm and peaceful.", "PersonX is in the middle of court.", "Person X's spouse makes sure Person X's day goes by flawlessly.", "PersonX is giving a speech.", "PersonX is compassionate.", "PersonX is a calm person.", "PersonX is too patient.", "PersonX went to anger management.", "Person X's work team keeps making stellar presentations."], "input": {"head": "PersonX becomes very frustrated", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They are allergic", "the vet doesn't think person x can take care of a cat", "person x is not allowed to have animals at their house", "the doctor told person x they're allergic to cats", "person x is allergic to cats", "They cant afford the shots", "They have two dogs", "does not have income to take care of the cat.", "does not have a big enough apartment"], "input": {"head": "PersonX decides to adopt the cat", "relation": "HinderedBy"}}
{"generation": "yogi can be found in the following locations:\n\nThe", "references": ["fast for long time", "fast for days"], "input": {"head": "yogi", "relation": "CapableOf"}}
{"generation": "PersonX is an hour late for work. After that, you can get a free lunch", "references": ["PersonX gets fired"], "input": {"head": "PersonX is an hour late for work", "relation": "isBefore"}}
{"generation": "PersonX renews within days. The effect on others will be limited to those who have already paid for the service", "references": ["none"], "input": {"head": "PersonX renews within days", "relation": "oEffect"}}
{"generation": "PersonX prevents ___ from spreading is filled by the same thing as the other", "references": ["measles", "malaria", "illnesses", "oil", "disease", "water"], "input": {"head": "PersonX prevents ___ from spreading", "relation": "isFilledBy"}}
{"generation": "PersonX challenges ___ to a basketball game. PersonX will be playing a basketball game", "references": ["having fun", "talented", "anxious"], "input": {"head": "PersonX challenges ___ to a basketball game", "relation": "xReact"}}
{"generation": "PersonX is fired from PersonX's job. Before that, he is hired by the company to help out with", "references": ["PersonX smokes marijuana"], "input": {"head": "PersonX is fired from PersonX's job", "relation": "isAfter"}}
{"generation": "PersonX invites ___ over to play. Before, PersonX needs to get a new phone number and then get a new", "references": ["to pick up their phone", "to ask their parents' permission", "to call them", "to ask the person at school to play", "none"], "input": {"head": "PersonX invites ___ over to play", "relation": "xNeed"}}
{"generation": "a mouse can be used for this purpose", "references": ["click on objects online", "double click", "control moves", "move around with", "click loading buttons", "navigate the internet", "navigate on", "select the video", "click on the next link", "click the item", "interact with data", "swing it around as a weapon", "navigate the screen", "interface with computer", "move to the next line", "scroll through results", "click the play button", "to use the computer", "give a massage", "remove wrinkles from clothing", "control computer", "move clicker and click buttons", "to navigate page", "direct the information", "navigate laptop", "click on information", "click on the webpage", "make scrolling easier", "move around screen", "click on the link", "click on searches", "click refresh", "click on preferences", "click on items", "submit message on PersonX's account", "click on icons", "navigate computer", "place on something to keep it in place", "click things", "move cursor and click buttons", "scroll through site", "navigate through websites", "use with computer", "click on results", "click on sites", "choose a gift", "scroll around with", "click on video", "click around", "click on the search bar and web pages", "to click on link", "move the cursor", "move", "click on videos", "click on the information online", "control where the cursor goes", "use as a hand workout", "click on submit button", "move cursor", "scroll on page", "computer input", "navigate the webpage", "click on the search results", "click through websites", "clear the transaction", "click buttons", "use as a paperweight", "click search results", "select the address", "move around the screen", "select picture", "make selections", "navigate the computer", "move around", "click buy or sell buttons", "click on selections", "surfing", "click with", "navigate sites", "navigate around", "point and click the button", "click on things", "click on links", "click on search results", "click on the button", "operate", "click on buttons", "click on the searches", "point to the information", "work on the computer"], "input": {"head": "mouse", "relation": "ObjectUse"}}
{"generation": "PersonX sits at PersonY's feet. The effect on PersonX will be similar to that of PersonY's", "references": ["is kicked", "gets kicked", "PersonX jumps from discomfort", "PersonX shifts and struggles to see from a worms-eye view", "gets engaged in conversation", "listens"], "input": {"head": "PersonX sits at PersonY's feet", "relation": "xEffect"}}
{"generation": "PersonX is sent to the office. After that, he is sent to the office of the president", "references": ["PersonX gets a write up by the principal", "PersonX gets a formal reprimand from their boss"], "input": {"head": "PersonX is sent to the office", "relation": "isBefore"}}
{"generation": "PersonX gets PersonX's makeup done. The effect on PersonX will be similar to the one seen in the movie", "references": ["They thank the make up artist.", "they impress others", "They take a selfie and upload it online to show everyone their lovely make up.", "They head out for a night out.", "they look good", "They pay the make up artist and leave."], "input": {"head": "PersonX gets PersonX's makeup done", "relation": "xEffect"}}
{"generation": "PersonX needs a bath. PersonX did this to me", "references": ["none", "to wash off the mud he was covered with"], "input": {"head": "PersonX needs a bath", "relation": "xIntent"}}
{"generation": "PersonX tries again next year. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX tries again next year", "relation": "oEffect"}}
{"generation": "PersonX measures the ___ directly. After, PersonX will want to know if you are using the same language as the", "references": ["to make sure it's the right fit", "To finish the work", "to show independence", "to find another one", "To get the work done", "to show accuracy"], "input": {"head": "PersonX measures the ___ directly", "relation": "xWant"}}
{"generation": "PersonX gets it to work. PersonX did this to me", "references": ["it to be functioning", "it to be fixed", "to have it be usable"], "input": {"head": "PersonX gets it to work", "relation": "xIntent"}}
{"generation": "PersonX gets PersonX's dad. PersonX is a very nice guy, but he's not a", "references": ["amiable", "helping", "cordial", "caring"], "input": {"head": "PersonX gets PersonX's dad", "relation": "xAttr"}}
{"generation": "PersonX looks angry. After, PersonX will want to know what's going on", "references": ["to vent his anger", "to shout at him", "to understand the situation and to be cool", "to stay calm"], "input": {"head": "PersonX looks angry", "relation": "xWant"}}
{"generation": "PersonX never lost. The effect on others will be similar to that of a normal person", "references": ["people congratulate PersonX", "people clap for PersonX", "photographers take a photo of PersonX", "people award PersonX", "none"], "input": {"head": "PersonX never lost", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has to get a promotion first.", "PersonX has low confidence.", "PersonX's dad did not teach him well enough.", "PersonX's teacher did not set him up for success.", "PersonX doesn't know who they are.", "PersonX is immature.", "PersonX has too many years of college left.", "PersonX's mom will not let him succeed.", "PersonX is young."], "input": {"head": "PersonX comes into PersonX's own", "relation": "HinderedBy"}}
{"generation": "PersonX finds ___ everywhere is filled by the same people", "references": ["plates", "kids", "balloons", "lumber", "apples", "rocks", "dishes", "cups", "eggs", "money", "tools", "shells", "glass", "candy", "dirt"], "input": {"head": "PersonX finds ___ everywhere", "relation": "isFilledBy"}}
{"generation": "PersonX inflicts ___ on others. PersonX is not a member of the party", "references": ["cruel", "mean", "insensible", "violent", "abusive", "sadist", "hurtful"], "input": {"head": "PersonX inflicts ___ on others", "relation": "xAttr"}}
{"generation": "PersonX remembers PersonY's name. PersonX did this to her when she was a child", "references": ["none", "to be kind", "to show they are special", "to be thoughtful"], "input": {"head": "PersonX remembers PersonY's name", "relation": "xIntent"}}
{"generation": "PersonX uses PersonY instrument. After that, you can use PersonX to create a new Person", "references": ["PersonX gives a good performance"], "input": {"head": "PersonX uses PersonY instrument", "relation": "isBefore"}}
{"generation": "PersonX asks PersonX's doctor. Before that, he asks PersonX if he can take a test", "references": ["PersonX wonders what a strange lump is"], "input": {"head": "PersonX asks PersonX's doctor", "relation": "isAfter"}}
{"generation": "PersonX gives PersonY leave. Before that, PersonY gives PersonX a new name", "references": ["PersonX learns PersonY is ill"], "input": {"head": "PersonX gives PersonY leave", "relation": "isAfter"}}
{"generation": "PersonX breaks free. PersonX is a member of the X-Men, and he", "references": ["motivated", "forceful", "independent", "energetic", "determined"], "input": {"head": "PersonX breaks free", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's friends all live very far away.", "PersonX needs to stay late at work.", "PersonX has to work overtime.", "PersonX doesn't have a car to get there.", "PersonX's friend wants some alone time.", "PersonX doesn't own a car.", "PersonX's friend is in prison and it is on lock down and not accepting visitors."], "input": {"head": "PersonX visits a friend", "relation": "HinderedBy"}}
{"generation": "a confessional booth can be used for a variety of purposes, including:\n\n\u2022", "references": ["sit in and talk", "confess one's sins", "hook up with boys at church", "eat in peace", "take a nap", "pray in quietly", "record new songs", "speak with the priest", "hide in for some privacy", "confess your sins", "sleep in", "talk to friend"], "input": {"head": "confessional booth", "relation": "ObjectUse"}}
{"generation": "PersonX loses sight of PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["none"], "input": {"head": "PersonX loses sight of PersonY", "relation": "xIntent"}}
{"generation": "PersonX buys PersonY a dog. After that, PersonY is given a dog", "references": ["PersonX drives PersonY to the vet to get the dog vaccinated", "PersonX helps PersonY take care of the dog", "PersonX gives the dog to PersonY"], "input": {"head": "PersonX buys PersonY a dog", "relation": "isBefore"}}
{"generation": "PersonX catches PersonY's dog. After, PersonX will want to know who the dog is", "references": ["to take the dog to the dog pound", "to return the dog to PersonY", "to ask PersonY out", "to give the animal back", "to make sure it is okay"], "input": {"head": "PersonX catches PersonY's dog", "relation": "xWant"}}
{"generation": "You are likely to find a closet floor in a closet, or a closet floor in a closet,", "references": ["closet"], "input": {"head": "closet floor", "relation": "AtLocation"}}
{"generation": "PersonX gains PersonY's confidence. The effect on others will be similar to that of PersonX's", "references": ["none"], "input": {"head": "PersonX gains PersonY's confidence", "relation": "oEffect"}}
{"generation": "PersonX finds what PersonY wanted. Before that, he's been trying to find the right person to", "references": ["PersonX looks for a gift for PersonY"], "input": {"head": "PersonX finds what PersonY wanted", "relation": "isAfter"}}
{"generation": "PersonX improves PersonX's sales. PersonX will be able to sell more items in PersonX's store", "references": ["happy", "accomplished", "successful", "proud"], "input": {"head": "PersonX improves PersonX's sales", "relation": "xReact"}}
{"generation": "PersonX comes to PersonY's house. Before, PersonX needs to be able to talk to PersonY", "references": ["to drive to PersonY's house", "to walk over to PersonY's", "to make arrangements with PersonY", "To know person Y\u2019s home", "to see if PersonY is at their house", "to call PersonY", "To travel"], "input": {"head": "PersonX comes to PersonY's house", "relation": "xNeed"}}
{"generation": "PersonX uses PersonX's coupons. PersonX did this to make sure that the coupons were not being used to", "references": ["to save money", "to get a discount on some items"], "input": {"head": "PersonX uses PersonX's coupons", "relation": "xIntent"}}
{"generation": "a hedlights can be used for the same purpose", "references": ["use to alert people of wrecks", "drive safely", "warn someone of danger", "see at night", "have sex in the grass at night.", "light up a landing pad", "light up a dark place at night for parties", "find something in the dark.", "navigate through a cave"], "input": {"head": "hedlights", "relation": "ObjectUse"}}
{"generation": "PersonX gives PersonY a account. PersonX is the only person who can access PersonY's account", "references": ["naive", "generous", "helpful", "independent", "trusting"], "input": {"head": "PersonX gives PersonY a account", "relation": "xAttr"}}
{"generation": "PersonX knocks PersonX over with a feather. Before that, PersonX says, \"I'm sorry, I", "references": ["PersonX balances on a beam"], "input": {"head": "PersonX knocks PersonX over with a feather", "relation": "isAfter"}}
{"generation": "PersonX consolidates PersonX's position. Before, PersonX needs to be able to use PersonX's data to create", "references": ["none", "to devise a plan", "have influence"], "input": {"head": "PersonX consolidates PersonX's position", "relation": "xNeed"}}
{"generation": "PersonX drops a log. Before, PersonX needs to be able to log in to the server", "references": ["to go outside", "to pick up a log.", "to have tummy ache", "to be bound up", "to find a log.", "to pick up a log"], "input": {"head": "PersonX drops a log", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too drunk to open the door", "PersonX's car is locked", "PersonX's car was wrecked.", "PersonX's keys are locked in the car.", "PersonX's car is stuck in a closed parking garage.", "PersonX's car didn't qualify."], "input": {"head": "PersonX enters PersonX's car", "relation": "HinderedBy"}}
{"generation": "PersonX loses thirty pounds. The effect on others will be similar to that of a normal weight loss", "references": ["none"], "input": {"head": "PersonX loses thirty pounds", "relation": "oEffect"}}
{"generation": "PersonX joins ___ for the protection. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX joins ___ for the protection", "relation": "oReact"}}
{"generation": "PersonX looks at PersonY's face. PersonX did this to her, and she's not happy", "references": ["to say something to them.", "to be attentive", "to look at the other person.", "to see their expression.", "to look at them."], "input": {"head": "PersonX looks at PersonY's face", "relation": "xIntent"}}
{"generation": "PersonX visits every ___. After, PersonX will want to see the current user's name, and then the", "references": ["think of fond memories of visit", "go home", "to go back home", "to visit other places", "to explore more places", "to rest"], "input": {"head": "PersonX visits every ___", "relation": "xWant"}}
{"generation": "PersonX stops at a store. PersonX did this to me", "references": ["to get some bread", "to buy tissues", "to buy some groceries"], "input": {"head": "PersonX stops at a store", "relation": "xIntent"}}
{"generation": "PersonX keeps the ___ from the door. PersonX did this to me", "references": ["stay safe"], "input": {"head": "PersonX keeps the ___ from the door", "relation": "xIntent"}}
{"generation": "PersonX beats everyone. PersonX is the only person who can beat Person X", "references": ["capable", "competitive", "strong", "lucky", "talented", "brave", "hard working", "skilled"], "input": {"head": "PersonX beats everyone", "relation": "xAttr"}}
{"generation": "a golf club can be used for a variety of purposes, including:\n\n\u2022", "references": ["hit golf ball", "hit a ball", "provide protection", "check out the quality", "use as a mirror", "hit the target", "use as a fake sword in a fight", "use as defend tool", "lean against wall", "swing", "use as cavaletti", "hit someone over the head with", "meet others who also like golf", "hit the ball with", "hit a person", "play golf", "hit golf balls"], "input": {"head": "golf club", "relation": "ObjectUse"}}
{"generation": "PersonX brings the ___ to a head. PersonX will be able to use the ___ to attack, but not", "references": ["relieved.", "nice"], "input": {"head": "PersonX brings the ___ to a head", "relation": "xReact"}}
{"generation": "PersonX increases the ___ at the expense. After, PersonX will want to use the ___ to get the ___", "references": ["to try to make amends", "to make a new agreement", "Keep looking for more ways.", "Fire some people."], "input": {"head": "PersonX increases the ___ at the expense", "relation": "xWant"}}
{"generation": "You are likely to find a television program in a local news station that is not on the list", "references": ["television"], "input": {"head": "television program", "relation": "AtLocation"}}
{"generation": "PersonX mixes it up. PersonX is a game that is a bit more of a puzzle", "references": ["careful", "change agent", "fiesty", "excited", "Creative", "Bizzare"], "input": {"head": "PersonX mixes it up", "relation": "xAttr"}}
{"generation": "PersonX eats quickly. As a result, others feel the need to take a break from the game", "references": ["none"], "input": {"head": "PersonX eats quickly", "relation": "oReact"}}
{"generation": "PersonX calls the ambulance. Before that, he says, \"I'm sorry, I'm", "references": ["PersonX sees a car accident happen", "PersonX sees PersonY in a seizure", "PersonX witnesses a car accident"], "input": {"head": "PersonX calls the ambulance", "relation": "isAfter"}}
{"generation": "PersonX puts upon PersonY. As a result, others feel that PersonX is more important than PersonY", "references": ["real bad"], "input": {"head": "PersonX puts upon PersonY", "relation": "oReact"}}
{"generation": "PersonX gets there early. After that, he's a little bit more of a threat", "references": ["PersonX sits down in the waiting room"], "input": {"head": "PersonX gets there early", "relation": "isBefore"}}
{"generation": "PersonX plays a ___ in the system. PersonX is a character who is a member of the group", "references": ["dedicated", "cooperative", "sociable", "influetnial", "included", "driven", "involved"], "input": {"head": "PersonX plays a ___ in the system", "relation": "xAttr"}}
{"generation": "PersonX watches cartoons. Before that, he was a cartoonist for the New York Times", "references": ["PersonX gets up early", "PersonX leaves work early"], "input": {"head": "PersonX watches cartoons", "relation": "isAfter"}}
{"generation": "PersonX looks PersonY ___ in the face. PersonX will be the one who gets the most attention", "references": ["in control", "good because they are seen"], "input": {"head": "PersonX looks PersonY ___ in the face", "relation": "xReact"}}
{"generation": "a toy box can be used for a variety of purposes", "references": ["put toys away", "keep toys in", "store toys that aren't being used", "hold toys when not in use", "use as a photo prop", "put garden materials in", "place jewelry in", "keep the floor picked up", "hold tools on the porch", "eat out of", "keep stuffed animals in", "use as a pet bed"], "input": {"head": "toy box", "relation": "ObjectUse"}}
{"generation": "orgasm is a very good way to get started", "references": ["very pleasurable", "necessary for mental health"], "input": {"head": "orgasm", "relation": "HasProperty"}}
{"generation": "PersonX turns PersonX's nose up. Before, PersonX needs to be able to see PersonX's face", "references": ["to see someone they know", "She sees a skater.", "to be out somewhere", "She thinks he looks like a Thug.", "see something gross", "smell something bad"], "input": {"head": "PersonX turns PersonX's nose up", "relation": "xNeed"}}
{"generation": "PersonX takes a hike in the woods. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX takes a hike in the woods", "relation": "oReact"}}
{"generation": "PersonX buys a used one. The effect on PersonX will be the same as the one on PersonX", "references": ["uses it", "takes it home", "replaced with a new one", "doesn't work", "machine getting repair soon", "loses money"], "input": {"head": "PersonX buys a used one", "relation": "xEffect"}}
{"generation": "PersonX also liked ___. PersonX will be the first person to use the ___", "references": ["appreciative", "friendly"], "input": {"head": "PersonX also liked ___", "relation": "xReact"}}
{"generation": "You are likely to find a reverence in a person's heart for the man who has been so", "references": ["church"], "input": {"head": "reverence", "relation": "AtLocation"}}
{"generation": "PersonX pays PersonX's ___ to the king is filled by the king's own money", "references": ["money", "silver", "gold"], "input": {"head": "PersonX pays PersonX's ___ to the king", "relation": "isFilledBy"}}
{"generation": "PersonX gets on PersonX's feet. The effect on PersonX will be similar to the effect on Person X", "references": ["GET GREAT", "none", "Gets task started", "Starting walking"], "input": {"head": "PersonX gets on PersonX's feet", "relation": "xEffect"}}
{"generation": "PersonX wants to learn how to swim. PersonX is a very good swimmer, but he's not", "references": ["hopeful", "curious", "eager", "nervous", "amazed"], "input": {"head": "PersonX wants to learn how to swim", "relation": "xAttr"}}
{"generation": "PersonX uses ___ to communicate. The effect on others will be different", "references": ["sharpens their ability to converse", "none", "must respond to the other person"], "input": {"head": "PersonX uses ___ to communicate", "relation": "oEffect"}}
{"generation": "PersonX gets the stain. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets the stain", "relation": "oEffect"}}
{"generation": "PersonX puts everything together. After, others will want to know what's going on", "references": ["to watch the presentation", "to express gratitude", "none"], "input": {"head": "PersonX puts everything together", "relation": "oWant"}}
{"generation": "PersonX rides every ride. PersonX will be able to ride the ride with the same amount of", "references": ["capable", "tired", "excited"], "input": {"head": "PersonX rides every ride", "relation": "xReact"}}
{"generation": "PersonX gets PersonY hands on. PersonX did this to me", "references": ["to show y something", "wants to help someone", "to be with someone"], "input": {"head": "PersonX gets PersonY hands on", "relation": "xIntent"}}
{"generation": "PersonX wraps PersonY's hand. As a result, others feel the same way", "references": ["relieved that the bleeding has stopped"], "input": {"head": "PersonX wraps PersonY's hand", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY has not offered thanks", "PersonX is ungrateful", "PersonX is ashamed of themselves", "PersonX's boss doesn't let employees engage in social interactions on company time.", "PersonX feels guilty", "PersonY's family is too proud to let PersonY show gratitude to PersonX.", "PersonX can't talk because of illness.", "Person Y didn't send the thank you card.", "PersonX didn't hear the thanks.", "Person Y didn't thank them."], "input": {"head": "PersonX accepts PersonY thanks", "relation": "HinderedBy"}}
{"generation": "PersonX grabs a towel. Before that, he grabs a towel from the floor", "references": ["PersonX jumps out of the shower"], "input": {"head": "PersonX grabs a towel", "relation": "isAfter"}}
{"generation": "PersonX starts working again. After, PersonX will want to know if you are a member of the group", "references": ["clock out after work", "to have dinner", "save", "work hard", "to finish their work", "obey bosses", "to travel back home", "to make money", "to fill in back to work forms", "complete the work day"], "input": {"head": "PersonX starts working again", "relation": "xWant"}}
{"generation": "PersonX finishes PersonX's test. After that, PersonX will be able to use the test to", "references": ["PersonX gets out of their seat to hand it in"], "input": {"head": "PersonX finishes PersonX's test", "relation": "isBefore"}}
{"generation": "PersonX wants to run a marathon. Before that, he's running a marathon", "references": ["PersonX starts to run", "PersonX runs a mile", "PersonX starts running daily"], "input": {"head": "PersonX wants to run a marathon", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX shift is almost over.", "PersonX is sick in bed.", "PersonX has other responsibilities", "PersonX has been given bad genetics from his mom", "PersonX is too turned on by Julie", "PersonX has been denied sex from Julie for a month", "PersonX hasn't had enough sleep"], "input": {"head": "PersonX lasts all day", "relation": "HinderedBy"}}
{"generation": "Sometimes snow causes the snow to fall, and the snow is a", "references": ["blizzard", "shovelling", "avalanches"], "input": {"head": "snow", "relation": "Causes"}}
{"generation": "PersonX takes liberties. After, others will want to know what you're doing", "references": ["to catch them", "tell them to stop", "none"], "input": {"head": "PersonX takes liberties", "relation": "oWant"}}
{"generation": "PersonX divides the ___ into sections is filled by the following:\n\nSection 1: The ___", "references": ["lamp", "produce", "pizza", "food", "chart", "hair", "pie", "building", "room", "bookcase", "cake", "book"], "input": {"head": "PersonX divides the ___ into sections", "relation": "isFilledBy"}}
{"generation": "PersonX gains confidence. The effect on others will be felt by the user", "references": ["none"], "input": {"head": "PersonX gains confidence", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX didn't practice a lot.", "PersonX is being sat on by Sally", "PersonX was disqualified for penaties.", "PersonX injured their arm in the last round.", "PersonX is injured.", "PersonX is being held down by Julie", "Personx is too sick to play.", "PersonX's friend has his foot", "PersonX isn't very good at the game."], "input": {"head": "PersonX wins the game for PersonX's team", "relation": "HinderedBy"}}
{"generation": "PersonX hears a phone ring. The effect on PersonX will be similar to that of a phone ringing", "references": ["PersonX wakes up", "PersonX looks for the phone", "PersonX jumps up to pick it up", "Walks to phone", "Answers phone"], "input": {"head": "PersonX hears a phone ring", "relation": "xEffect"}}
{"generation": "PersonX falls back to sleep. The effect on PersonX will be similar to that of a normal person", "references": ["They dream", "They rest", "has a dream", "wakes up", "They sleep all night", "cuddles", "They curl up cosy in bed"], "input": {"head": "PersonX falls back to sleep", "relation": "xEffect"}}
{"generation": "PersonX finds ___ PersonY wanted. PersonX did this to PersonY", "references": ["to get persony what they want", "persony to be happy", "none"], "input": {"head": "PersonX finds ___ PersonY wanted", "relation": "xIntent"}}
{"generation": "PersonX sends a letter. The effect on PersonX will be the same as the effect on Person X", "references": ["gets a return letter", "waits for a reply", "gets change", "gets response", "none"], "input": {"head": "PersonX sends a letter", "relation": "xEffect"}}
{"generation": "PersonX makes ___ quickly. After, others will want to know what you're doing", "references": ["fabric supply stores may send email or other advertisements to PersonX to promote the selling of materials that PersonX needs to buy in order to make clothes", "none", "other people who might have purchased PersonX's clothes will tell others, who will in turn possibly also buy the clothes"], "input": {"head": "PersonX makes ___ quickly", "relation": "oWant"}}
{"generation": "PersonX never been to one before. PersonX will be the first person to ever be able to play the", "references": ["curious", "eager", "anxious"], "input": {"head": "PersonX never been to one before", "relation": "xReact"}}
{"generation": "PersonX begins to eat. PersonX will be able to see the person's face and will be", "references": ["full", "eager", "satisfied"], "input": {"head": "PersonX begins to eat", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person x is too sick to work.", "Person x is poor.", "PersonX doesn't have enough money.", "PersonX has too many bills to pay.", "PersonX isn't allowed to make decisions.", "PersonX is stuck in a dead-end job."], "input": {"head": "PersonX improves PersonX's conditions", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Their boss made them work late.", "PersonX account is empty.", "Their brother hid the money.", "PersonX is homeless.", "The bank is closed.", "PersonX forgot their pin code."], "input": {"head": "PersonX withdraws money", "relation": "HinderedBy"}}
{"generation": "PersonX takes PersonX's first steps. Before that, he's a little more of a character", "references": ["PersonX learns to crawl", "PersonX gets on her feet"], "input": {"head": "PersonX takes PersonX's first steps", "relation": "isAfter"}}
{"generation": "PersonX goes ___ in the lake. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX goes ___ in the lake", "relation": "oEffect"}}
{"generation": "PersonX wants to learn how to sew. The effect on PersonX will be similar to the effect on the other characters", "references": ["gets teased", "Gains knowledge", "Becomes an expert in sewing", "none", "reconsiders"], "input": {"head": "PersonX wants to learn how to sew", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The tour was canceled by the governor.", "PersonX lives in the desert and has no transportation to the sea.", "PersonX has a fear of water so cannot be anywhere near dolphins.", "PersonY poked PersonX in the eye.", "PersonX isn't allowed anywhere near water.", "PersonX doesn't live anywhere near the ocean."], "input": {"head": "PersonX sees dolphins", "relation": "HinderedBy"}}
{"generation": "PersonX asks PersonX's sister. The effect on others will be different", "references": ["Has sense of being needed", "none", "Processes question"], "input": {"head": "PersonX asks PersonX's sister", "relation": "oEffect"}}
{"generation": "PersonX gives PersonY control. After that, PersonX will be able to use the same abilities", "references": ["PersonX writes down his performance"], "input": {"head": "PersonX gives PersonY control", "relation": "isBefore"}}
{"generation": "PersonX calls PersonY the next day. As a result, others feel the same way", "references": ["happy.", "informed"], "input": {"head": "PersonX calls PersonY the next day", "relation": "oReact"}}
{"generation": "PersonX uses ___ anyway. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX uses ___ anyway", "relation": "oEffect"}}
{"generation": "PersonX realizes that PersonY was lost. PersonX is able to find the person who was lost and reun", "references": ["frightened", "Worried", "Concerned", "scared"], "input": {"head": "PersonX realizes that PersonY was lost", "relation": "xAttr"}}
{"generation": "You are likely to find a hostility in a lot of people's eyes", "references": ["war zone"], "input": {"head": "hostility", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY has never had a steady home life.", "PersonY is too flighty and spontaneous."], "input": {"head": "PersonX creates PersonY structure", "relation": "HinderedBy"}}
{"generation": "PersonX gets a second job. After that, he's a regular at the office", "references": ["PersonX buys a house", "PersonX pays the new car off faster", "PersonX buys new clothes for the job"], "input": {"head": "PersonX gets a second job", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's backpack was stolen.", "The train already took off.", "It is dark, and the backpack can't be seen.", "The bag is too heavy.", "PersonX is too far away.", "They left it on the airplane and can't go back in."], "input": {"head": "PersonX grabs PersonX's backpack", "relation": "HinderedBy"}}
{"generation": "PersonX meets PersonY's friends. As a result, others feel the same way", "references": ["happy and satisfied", "happy that x wanted to meet their other friends."], "input": {"head": "PersonX meets PersonY's friends", "relation": "oReact"}}
{"generation": "PersonX listens to music. Before that, he's a musician", "references": ["PersonX turns on PersonX's radio"], "input": {"head": "PersonX listens to music", "relation": "isAfter"}}
{"generation": "PersonX reminds PersonX of PersonY. The effect on others will be similar to PersonX's", "references": ["none"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "oEffect"}}
{"generation": "PersonX stays by PersonY's side. PersonX will be the one who gets the most points", "references": ["helpful", "supportive"], "input": {"head": "PersonX stays by PersonY's side", "relation": "xReact"}}
{"generation": "PersonX leaves PersonX's husband. Before, PersonX needs to be able to talk to PersonX", "references": ["to start their own bank account", "to withdraw money"], "input": {"head": "PersonX leaves PersonX's husband", "relation": "xNeed"}}
{"generation": "PersonX cleans PersonY's bedroom. The effect on PersonX will be similar to the effect of PersonY's effect on", "references": ["gets tired out", "makes the bed", "gets thanked", "gets some windex", "none"], "input": {"head": "PersonX cleans PersonY's bedroom", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's father taught him not to be rude.", "PersonX wants to avoid confrontation with a huge guy.", "PersonX is the joker's boss with a reputation for harshly criticizing subordinates.", "PersonX realizes the prank was good-natured and shouldn't be escalated.", "PersonX had to accept defeat.", "PersonX is a subordinate of the joker.", "PersonX's wife will kill him if he does.", "PersonX couldn't figure out an angle.", "PersonX's friend told him the tables were glued to the ground.", "The kids are too smart.", "PersonX has no proof."], "input": {"head": "PersonX turns the tables", "relation": "HinderedBy"}}
{"generation": "PersonX runs a marathon. Before that, he runs a marathon", "references": ["PersonX trains for a marathon"], "input": {"head": "PersonX runs a marathon", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is in a cast.", "PersonX has braces on his legs.", "PersonX is indoors and the cat isn't.", "PersonX is allergic to cats.", "PersonX's cat refuses to play.", "PersonX has a broken leg."], "input": {"head": "PersonX chases the cat", "relation": "HinderedBy"}}
{"generation": "citizen is a member of the public who is not a member", "references": ["responsible for paying state taxes"], "input": {"head": "citizen", "relation": "HasProperty"}}
{"generation": "PersonX brings the kids with PersonY. After that, they're all going to be in the same room", "references": ["PersonX enjoyed the circus"], "input": {"head": "PersonX brings the kids with PersonY", "relation": "isBefore"}}
{"generation": "PersonX receives ___ from the lord. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX receives ___ from the lord", "relation": "oEffect"}}
{"generation": "PersonX makes jokes. Before that, he was a comedian", "references": ["PersonX saw PersonY fall down"], "input": {"head": "PersonX makes jokes", "relation": "isAfter"}}
{"generation": "PersonX uses the ___ to describe. The effect on PersonX will be the same as the effect on PersonX", "references": ["none"], "input": {"head": "PersonX uses the ___ to describe", "relation": "xEffect"}}
{"generation": "PersonX gets ___ right away. As a result, others feel like they're being punished for their actions", "references": ["none"], "input": {"head": "PersonX gets ___ right away", "relation": "oReact"}}
{"generation": "PersonX becomes very happy. As a result, others feel that he is a good person", "references": ["none"], "input": {"head": "PersonX becomes very happy", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX couldn't get the funds to go to college and is only a blue collar worker.", "PersonX lives in a cheap apartment in the poor side of town.", "PersonX has really bad amnesia.", "PersonX's dementia prevents them from giving an account of themselves.", "PersonX doesn't know themselves.", "PersonX has disassociative personality disorder."], "input": {"head": "PersonX gives a good account of oneself", "relation": "HinderedBy"}}
{"generation": "PersonX gives PersonY help. As a result, others feel that PersonY is more important than PersonX", "references": ["thankful", "relieved", "grateful"], "input": {"head": "PersonX gives PersonY help", "relation": "oReact"}}
{"generation": "PersonX buys PersonX's own house. PersonX is a very nice guy, but he's not a", "references": ["content", "proud", "Financially Sound", "Content"], "input": {"head": "PersonX buys PersonX's own house", "relation": "xAttr"}}
{"generation": "PersonX waits at the bus stop. The effect on PersonX will be similar to that of a normal person", "references": ["take a bus to the destination on time", "takes a ride instead of walking", "none"], "input": {"head": "PersonX waits at the bus stop", "relation": "xEffect"}}
{"generation": "PersonX picks on PersonY. After, PersonX will want to know who is the person who is the person who", "references": ["Walk away and do something else", "to tell his friends what he said", "to laugh at Person Y", "to avoid repercussions.", "Keep picking on PersonY", "to continue the belittlement.", "Physically attack PersonY"], "input": {"head": "PersonX picks on PersonY", "relation": "xWant"}}
{"generation": "PersonX smiles happily. PersonX is a very nice guy, but he's not a", "references": ["Blissful", "happy", "Satisfied", "excited"], "input": {"head": "PersonX smiles happily", "relation": "xAttr"}}
{"generation": "PersonX makes a good living. After that, he's a good guy", "references": ["PersonX buys many expensive things"], "input": {"head": "PersonX makes a good living", "relation": "isBefore"}}
{"generation": "PersonX gets work. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX gets work", "relation": "oWant"}}
{"generation": "PersonX wears PersonX's boots. PersonX did this to make sure that PersonX was not wearing a pair", "references": ["to get ready for the running", "to rush for the tennis court", "to rush to the exercise session", "to keep his feet warm", "to look stylish."], "input": {"head": "PersonX wears PersonX's boots", "relation": "xIntent"}}
{"generation": "PersonX makes bread. As a result, others feel that the bread is too small", "references": ["none"], "input": {"head": "PersonX makes bread", "relation": "oReact"}}
{"generation": "a plutonium can be used for nuclear weapons", "references": ["make nuclear weapons"], "input": {"head": "plutonium", "relation": "ObjectUse"}}
{"generation": "PersonX buys a snack. PersonX is a member of the team", "references": ["excited", "happy", "hungry", "peckish"], "input": {"head": "PersonX buys a snack", "relation": "xAttr"}}
{"generation": "PersonX reaches behind PersonY. As a result, others feel the same way", "references": ["none", "concerned"], "input": {"head": "PersonX reaches behind PersonY", "relation": "oReact"}}
{"generation": "PersonX gets right back. PersonX is a little confused", "references": ["Noble", "Noob"], "input": {"head": "PersonX gets right back", "relation": "xAttr"}}
{"generation": "PersonX passes around PersonY. After, PersonX will want to pass around PersonY", "references": ["to avoid PersonY", "to see PersonY's boss instead of them", "to appear generous", "to bump into personY", "to share", "to have fun", "to hide from PersonY", "to make sure persony has fun"], "input": {"head": "PersonX passes around PersonY", "relation": "xWant"}}
{"generation": "PersonX is a freshman in college. Before, PersonX needs to be able to read and write", "references": ["He gets through middle school.", "to go to orientation", "to apply to college", "to graduate from high school or pass an equivalency exam", "He gets through high school.", "apply college", "to take entrance exams", "get admittance"], "input": {"head": "PersonX is a freshman in college", "relation": "xNeed"}}
{"generation": "PersonX breaks the news. As a result, others feel the same way", "references": ["sad", "informed", "interested"], "input": {"head": "PersonX breaks the news", "relation": "oReact"}}
{"generation": "PersonX spills water on the floor. Before that, he's been drinking water from a fountain", "references": ["PersonX pours a pitcher of water"], "input": {"head": "PersonX spills water on the floor", "relation": "isAfter"}}
{"generation": "PersonX protects ___ from abuse. PersonX is a member of the \"Punitive\" group", "references": ["strong", "brave", "kind", "caring", "dominant", "kindhearted"], "input": {"head": "PersonX protects ___ from abuse", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is too busy.", "PersonY is in another country at war.", "PersonY is about to fall off of a cliff and needs to be warned.", "PersonY has too much going on.", "PersonX is angry at PersonY for cheating on him.", "PersonX is PersonY's supervisor."], "input": {"head": "PersonX gives PersonY peace", "relation": "HinderedBy"}}
{"generation": "PersonX tastes the food. The effect on PersonX will be similar to that of a normal person", "references": ["completed the dish", "is satisfied", "tastes food", "liked the dish"], "input": {"head": "PersonX tastes the food", "relation": "xEffect"}}
{"generation": "PersonX takes PersonY view. The effect on PersonX will be the same as PersonY", "references": ["talks confidently", "none", "seeks to unite with PersonY"], "input": {"head": "PersonX takes PersonY view", "relation": "xEffect"}}
{"generation": "PersonX dates a girl. Before, PersonX needs to be a girl", "references": ["to like a girl", "to ask them out", "none"], "input": {"head": "PersonX dates a girl", "relation": "xNeed"}}
{"generation": "PersonX gives ___ an f. The effect on PersonX will be that PersonX will be able to use the ability", "references": ["is looked at as mean", "none", "hopes the student does better"], "input": {"head": "PersonX gives ___ an f", "relation": "xEffect"}}
{"generation": "PersonX conveys PersonY impression. The effect on PersonX will be similar to the effect on PersonY", "references": ["Other people understand PersonY's impression", "PersonX comes across as kind and caring", "to conveys impression", "to take negative", "Convinces others", "Sees Y point"], "input": {"head": "PersonX conveys PersonY impression", "relation": "xEffect"}}
{"generation": "a buss pass can be used for a wide variety of purposes", "references": ["get on the bus", "wonder where the bus is", "make a paper football", "start a small fire", "patch a hole in a backpack", "go to a friends house", "go pay bills", "pick food from between teeth", "show proof of payment", "go to work", "lose somewhere inconvenient"], "input": {"head": "buss pass", "relation": "ObjectUse"}}
{"generation": "PersonX feels hopeless. Before that, he's a very good player", "references": ["PersonX lost their keys"], "input": {"head": "PersonX feels hopeless", "relation": "isAfter"}}
{"generation": "PersonX meets the love of PersonX's life. Before that, she was a very good friend of PersonX's", "references": ["PersonX goes on a dating site"], "input": {"head": "PersonX meets the love of PersonX's life", "relation": "isAfter"}}
{"generation": "PersonX directs PersonY's steps. PersonX did this to help PersonY get the job done", "references": ["teach them something", "to help person y", "to guide y in the right direction"], "input": {"head": "PersonX directs PersonY's steps", "relation": "xIntent"}}
{"generation": "a handle can be used for the following:\n\nThe following example shows how", "references": ["open drawer", "pick up the basket", "hold onto", "turn open door", "hold on", "affect door", "grab and open door", "open the door", "open the vehicle's door", "carry purse", "pull a door open", "make easier to carry", "grab and pull", "open up the door", "grab the wooden entry", "carry object", "to grab on to", "open the door with", "holding onto", "move a wheelbarrow", "carrying things", "grasping things", "hold tool", "pull a drawer", "turn and pull", "turn lock", "gripping", "to turn the faucet on", "try to open", "carry or push basket", "practice using tools", "hold the cup while drinking", "turn on water", "pick up", "pulling", "open the door the appliance", "shut the door", "Turn to open", "hit someone with", "yank on", "pull it", "pick up groceries", "open the fridge", "open fridge door", "start the water", "carry the container", "open door of aircraft", "pull on the fence", "hold the kite", "see better", "turn and regulate the mixtures", "carry", "turn with their hand", "carry around container", "opening door", "pull on", "turn to off", "manipulate", "pull door open", "hold weapon with hands", "hold the bag", "attach to a skateboard", "Open fridge door", "switch direction", "Open car door", "control the door", "carry container", "open door", "hang on to", "turn on a light", "turn the door knob with", "pull door open to see interior shelves", "bring out water", "lift objects items or things", "open door and eexit", "Close cabinet with", "put in motion", "push the cart", "lower bucket", "something to pull open", "help hold telescope", "lifting", "hang onto", "hold on to", "grip tool"], "input": {"head": "handle", "relation": "ObjectUse"}}
{"generation": "PersonX learns a new instrument. PersonX will be able to play the instrument and will be able to", "references": ["skillful", "accomplished", "excited", "good about themselves", "intelligent"], "input": {"head": "PersonX learns a new instrument", "relation": "xReact"}}
{"generation": "PersonX is coming to an end. After, others will want to see what happens to the character", "references": ["to be with them till it's over", "to say goodbye to them", "none"], "input": {"head": "PersonX is coming to an end", "relation": "oWant"}}
{"generation": "PersonX keeps PersonX's fingers crossed. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX keeps PersonX's fingers crossed", "relation": "oReact"}}
{"generation": "PersonX follows the instructions. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX follows the instructions", "relation": "oWant"}}
{"generation": "PersonX shares ___ equally. After, PersonX will want to know who is the best person to be with", "references": ["money", "to clock out and go home", "to see if everyone is happy", "home"], "input": {"head": "PersonX shares ___ equally", "relation": "xWant"}}
{"generation": "PersonX takes PersonY stand. Before, PersonX needs to be able to use PersonY's abilities to get", "references": ["to be a follower of Y", "to have same opinion as Y", "to take over his responsibility", "to approach PersonY", "to get his permission", "to listen to PersonY"], "input": {"head": "PersonX takes PersonY stand", "relation": "xNeed"}}
{"generation": "Sometimes presence of cloud causes the cloud to become more visible", "references": ["rain"], "input": {"head": "presence of cloud", "relation": "Causes"}}
{"generation": "PersonX misses ___ to school. The effect on PersonX will be the same as the effect on PersonX", "references": ["gets tired walking", "PersonX breathes heavily from running", "was sent to principal's office", "is late from walking", "was late for school", "PersonX sweats from nervousness", "PersonX receives a detention for being late", "gets detention from being late", "has to walk to school"], "input": {"head": "PersonX misses ___ to school", "relation": "xEffect"}}
{"generation": "PersonX walks to the car. After, others will want to know what happened to him", "references": ["none"], "input": {"head": "PersonX walks to the car", "relation": "oWant"}}
{"generation": "PersonX diverts ___ away is filled by the same people who are the most important to him", "references": ["eyes", "car", "pigs", "cars", "horses", "dogs", "candy", "boat", "sheep", "water"], "input": {"head": "PersonX diverts ___ away", "relation": "isFilledBy"}}
{"generation": "PersonX changes PersonY's lives. Before, PersonX needs to be able to see PersonY's face, but", "references": ["to start a fund", "to think they are worth it", "to contribute money", "to have the means", "have a lot of money", "meet PersonY"], "input": {"head": "PersonX changes PersonY's lives", "relation": "xNeed"}}
{"generation": "PersonX makes ___ every morning. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX makes ___ every morning", "relation": "oWant"}}
{"generation": "PersonX blows PersonY's mind. The effect on others will be different", "references": ["Experiences shock", "shouts", "recoils", "Struggles at first to comprehebd, thoughts race"], "input": {"head": "PersonX blows PersonY's mind", "relation": "oEffect"}}
{"generation": "PersonX sends PersonY over the edge. Before that, he sends PersonY over the edge", "references": ["PersonX attacks PersonY with great arguments"], "input": {"head": "PersonX sends PersonY over the edge", "relation": "isAfter"}}
{"generation": "PersonX wants to play outside. PersonX did this to me", "references": ["to get fresh air", "none"], "input": {"head": "PersonX wants to play outside", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is not a good actor.", "They do not have great acting skills.", "PersonX has no auditioned.", "PersonX does not have the skill for the lead role", "PersonX did  not practice the lines.", "They don't have enough experience.", "the director chose another actor for the role", "The other actor dressed the part really well and got the job"], "input": {"head": "PersonX gets the lead role", "relation": "HinderedBy"}}
{"generation": "PersonX tickles the dragons tail. Before, PersonX needs to be able to use the Dragon's Tail to attack", "references": ["to reach at the dragon", "picks up item to tickle with", "calls the dragon over", "to approach dragon", "none"], "input": {"head": "PersonX tickles the dragons tail", "relation": "xNeed"}}
{"generation": "PersonX not knows which end is up. Before, PersonX needs to know which end is up", "references": ["to have bad information", "be confused by surroundings", "to say anything anywhere", "to have done some crazy things"], "input": {"head": "PersonX not knows which end is up", "relation": "xNeed"}}
{"generation": "PersonX hangs PersonX's ___ in shame. The effect on others will be felt by the person who is offended", "references": ["none"], "input": {"head": "PersonX hangs PersonX's ___ in shame", "relation": "oEffect"}}
{"generation": "PersonX begins to eat. After, PersonX will want to eat", "references": ["to enjoy the tastes", "to satisfy their hunger", "to finish their meal", "to be full"], "input": {"head": "PersonX begins to eat", "relation": "xWant"}}
{"generation": "PersonX starts to date. The effect on PersonX will be similar to that of a normal date", "references": ["has a significant other", "meets new people", "obtains a significant other", "has someone to do things with"], "input": {"head": "PersonX starts to date", "relation": "xEffect"}}
{"generation": "PersonX pisses up a rope. After, others will want to see what he's doing", "references": ["none"], "input": {"head": "PersonX pisses up a rope", "relation": "oWant"}}
{"generation": "PersonX drops PersonY off at home. Before, PersonX needs to be in PersonX's room to get the person", "references": ["drive", "to pick PersonY up", "to drive a car", "pick up PersonY", "See that her car is not working.", "Work together all day."], "input": {"head": "PersonX drops PersonY off at home", "relation": "xNeed"}}
{"generation": "PersonX immediately began. PersonX did this to me, and I was shocked", "references": ["to be finished quickly", "to hurry up", "to be efficient"], "input": {"head": "PersonX immediately began", "relation": "xIntent"}}
{"generation": "PersonX enjoys swimming. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX enjoys swimming", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X has arthritis.", "PersonY's watch clasp is stuck", "PersonY is blocking PersonX's hands.", "PersonX's hands are too full to take the watch off", "PersonY is holding their hands above and PersonX cannot reach it.", "Person Y arm isn\u2019t available.", "PersonX's fingers are too large to remove the watch"], "input": {"head": "PersonX takes PersonY's watch off", "relation": "HinderedBy"}}
{"generation": "PersonX has to cancel PersonX's plans. PersonX did this to me, and I'm not going to let it", "references": ["none", "to stay at home"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xIntent"}}
{"generation": "PersonX loses 100 pounds. The effect on PersonX will be reversed if PersonX is not in the same class", "references": ["eats a cake", "gets thinner", "sorrow", "feeling sad", "eats a stick of carrot", "gets healthier"], "input": {"head": "PersonX loses 100 pounds", "relation": "xEffect"}}
{"generation": "PersonX puts ___ to death. PersonX did this to me", "references": ["to be evil", "to punish people", "to be dominant", "to punish", "to hurt people"], "input": {"head": "PersonX puts ___ to death", "relation": "xIntent"}}
{"generation": "PersonX thanks the ___ for PersonY's comments. PersonX did this to me", "references": ["to be polite", "to be thankful", "to show appreciation"], "input": {"head": "PersonX thanks the ___ for PersonY's comments", "relation": "xIntent"}}
{"generation": "PersonX arrives to class. After that, she is seen with her friends and the rest of", "references": ["PersonX is sweaty"], "input": {"head": "PersonX arrives to class", "relation": "isBefore"}}
{"generation": "PersonX shields PersonY's eyes. Before, PersonX needs to be able to see PersonY's face, but", "references": ["to raise their hands", "to jump in front of personY", "go close to PersonY", "creep up behind PersonY"], "input": {"head": "PersonX shields PersonY's eyes", "relation": "xNeed"}}
{"generation": "PersonX renders PersonY account. Before, PersonX needs to render PersonY account", "references": ["find out person y's password to access account", "to give", "to go to an atm machine", "to sneak person y's atm card", "find out the account number for person y", "to help others"], "input": {"head": "PersonX renders PersonY account", "relation": "xNeed"}}
{"generation": "PersonX takes a cruise. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX takes a cruise", "relation": "oEffect"}}
{"generation": "PersonX takes ___ everywhere. Before, PersonX needs to be able to use ___ to get to the next", "references": ["to be dependant on it", "have the item being taken everywhere", "to have no where to put it", "to like it a lot", "none", "decide to take it everywhere"], "input": {"head": "PersonX takes ___ everywhere", "relation": "xNeed"}}
{"generation": "PersonX sings PersonX's heart. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sings PersonX's heart", "relation": "oEffect"}}
{"generation": "PersonX finds another. Before, PersonX needs to find a way to get the other person to stop", "references": ["to look for another.", "to of found one in the first place", "to look again for one", "to want another."], "input": {"head": "PersonX finds another", "relation": "xNeed"}}
{"generation": "PersonX buys a bicycle. After that, he buys a car", "references": ["PersonX rides his new bike every day"], "input": {"head": "PersonX buys a bicycle", "relation": "isBefore"}}
{"generation": "PersonX buys PersonY's one. Before that, he buys PersonY's one", "references": ["PersonX sees that PersonY wants a cupcake"], "input": {"head": "PersonX buys PersonY's one", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They can't get the door open.", "PersonXs wife is standing in his way", "the cupboard door hinge is broken and won't budge", "The workers install the shelves too high", "The cupboard got blown away.", "the cupboard door is locked tight", "The cupboard is locked.", "PersonX can't reach."], "input": {"head": "PersonX looks in PersonX's cupboard", "relation": "HinderedBy"}}
{"generation": "PersonX eats burgers. After that, he's a regular at the restaurant", "references": ["PersonX is full and pats their belly"], "input": {"head": "PersonX eats burgers", "relation": "isBefore"}}
{"generation": "PersonX finds the ring. After that, he goes to the house and finds the ring", "references": ["PersonX puts the ring back on their finger"], "input": {"head": "PersonX finds the ring", "relation": "isBefore"}}
{"generation": "PersonX fails PersonX's math class. After, PersonX will want to know how many times PersonX has been in the", "references": ["to give up", "to get a better grade", "to work harder", "to be more responsible", "Make the F into an A.", "Lie to his parents."], "input": {"head": "PersonX fails PersonX's math class", "relation": "xWant"}}
{"generation": "PersonX wants to give it a try. Before that, he's been working on a new game, and", "references": ["PersonX watches figure skating"], "input": {"head": "PersonX wants to give it a try", "relation": "isAfter"}}
{"generation": "PersonX gets a call for an interview. PersonX is a very nice guy, but he's not a", "references": ["hard-working", "hopeful", "happy", "efficient"], "input": {"head": "PersonX gets a call for an interview", "relation": "xAttr"}}
{"generation": "PersonX hangs PersonY's head. After, others will want to know what's going on", "references": ["to say their last words", "to be freed from PersonX", "to ignore peer pressure", "to apologize to PersonX", "none"], "input": {"head": "PersonX hangs PersonY's head", "relation": "oWant"}}
{"generation": "PersonX washes ___ today is filled by a lot of things", "references": ["walls", "cars", "cats", "dishes", "dogs", "clothes", "floors"], "input": {"head": "PersonX washes ___ today", "relation": "isFilledBy"}}
{"generation": "PersonX impresses by PersonY's work. After, PersonX will want to know if PersonY is a good person", "references": ["to let them know they did well", "to encourage PersonY", "to assign PersonY more work", "to encourage them to go further", "to praise PersonY"], "input": {"head": "PersonX impresses by PersonY's work", "relation": "xWant"}}
{"generation": "PersonX builds a giant snowman. After that, he's a giant snowman", "references": ["PersonX takes a photo of their snowman", "PersonX goes in for hot chocolate to warm up", "PersonX places an old scarf around its neck"], "input": {"head": "PersonX builds a giant snowman", "relation": "isBefore"}}
{"generation": "PersonX holds a grudge. The effect on PersonX will be similar to that of a curse", "references": ["refuses to cooperate", "makes enemies", "become narrow minded", "develops evil inside", "becomes angry", "becomes alone", "thinks about revenge"], "input": {"head": "PersonX holds a grudge", "relation": "xEffect"}}
{"generation": "PersonX finds ___ later. PersonX did this to her, and she's not happy", "references": ["none", "to find his phone"], "input": {"head": "PersonX finds ___ later", "relation": "xIntent"}}
{"generation": "PersonX finally worked. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX finally worked", "relation": "oEffect"}}
{"generation": "PersonX has a cat named PersonY. Before that, she was a cat named PersonZ", "references": ["PersonX goes to the pet store"], "input": {"head": "PersonX has a cat named PersonY", "relation": "isAfter"}}
{"generation": "PersonX wastes PersonX's day. PersonX will be the one who gets the most out of this", "references": ["neutral", "relaxed", "lazy", "guilty", "depressed", "sad", "bored", "guilty about it", "satisfied"], "input": {"head": "PersonX wastes PersonX's day", "relation": "xReact"}}
{"generation": "PersonX looks the other way. As a result, others feel the same way", "references": ["relieved."], "input": {"head": "PersonX looks the other way", "relation": "oReact"}}
{"generation": "PersonX pulls the ___ open is filled by the ___", "references": ["door", "trunk", "window", "cupboard", "gate"], "input": {"head": "PersonX pulls the ___ open", "relation": "isFilledBy"}}
{"generation": "PersonX puts out to pasture. PersonX will be the one who gets the most votes", "references": ["accomplished", "pained", "afraid"], "input": {"head": "PersonX puts out to pasture", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is not dating anyone.", "his love interest doesn't love him back", "PersonX is not in love.", "PersonX was sent to juvenile detention.", "PersonX already graduated.", "Nobody likes PersonX", "PersonX is homeschooled", "His love interest has a boyfriend"], "input": {"head": "PersonX is highschool sweethearts", "relation": "HinderedBy"}}
{"generation": "PersonX wants money. PersonX is a guy who is a bit of a dick", "references": ["greedy", "destitute", "persistent", "ambitious", "Ambitious", "poor"], "input": {"head": "PersonX wants money", "relation": "xAttr"}}
{"generation": "PersonX links together ___ is filled by the same people who are the most important people in", "references": ["hands", "boards", "chains", "chain"], "input": {"head": "PersonX links together ___", "relation": "isFilledBy"}}
{"generation": "PersonX hats cats. PersonX is a cat-themed hat that cat-themed hats", "references": ["fun loving", "silly", "mean", "wicked"], "input": {"head": "PersonX hats cats", "relation": "xAttr"}}
{"generation": "PersonX is as good as new. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX is as good as new", "relation": "oWant"}}
{"generation": "PersonX checks online. After that, he's able to get a job at a local", "references": ["PersonX buys the game online"], "input": {"head": "PersonX checks online", "relation": "isBefore"}}
{"generation": "PersonX fees PersonY's kids. Before that, I was a kid who was a little bit of", "references": ["PersonX talks to PersonY's kids"], "input": {"head": "PersonX fees PersonY's kids", "relation": "isAfter"}}
{"generation": "PersonX gets the drift. After that, he's just a regular guy who's just a", "references": ["PersonX is smart"], "input": {"head": "PersonX gets the drift", "relation": "isBefore"}}
{"generation": "PersonX is much more careful. After, PersonX will want to know what you're doing, and you'll want", "references": ["to go to sleep", "to go home", "to avoid danger", "to stay safe"], "input": {"head": "PersonX is much more careful", "relation": "xWant"}}
{"generation": "PersonX plays hardball. After, PersonX will want to know who you are", "references": ["people to respect his opinion", "negotiate", "walk away", "to win the negotiation"], "input": {"head": "PersonX plays hardball", "relation": "xWant"}}
{"generation": "PersonX hits something hard. After that, he's a little bit more of a jerk", "references": ["PersonX stops to check the damage", "PersonX now his hand is also broken up"], "input": {"head": "PersonX hits something hard", "relation": "isBefore"}}
{"generation": "PersonX diagnoses with the flu. The effect on others will be less pronounced if the person is not vaccinated", "references": ["they catch the flu from him", "none", "they have to take care of him"], "input": {"head": "PersonX diagnoses with the flu", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["nothing they try feels right for them", "PersonX's government has forced them into military service.", "PersonX keeps changing their purpose.", "they aren't sure where to start", "PersonX is unsure what their purpose is.", "they are not as motivated", "PersonX's parents have confused them about their purpose.", "they are preoccupied with other things"], "input": {"head": "PersonX achieves PersonX's purpose", "relation": "HinderedBy"}}
{"generation": "PersonX finds a good job. PersonX is a good person", "references": ["successful", "smart", "attentive", "hardwoking", "patient", "responsible"], "input": {"head": "PersonX finds a good job", "relation": "xAttr"}}
{"generation": "PersonX is right next to PersonY. After, PersonX will want to know if PersonY is a member of the group", "references": ["to talk to him", "to tease him", "say hello", "wave"], "input": {"head": "PersonX is right next to PersonY", "relation": "xWant"}}
{"generation": "PersonX reschedules PersonX's appointment. After, others will want to know who you are", "references": ["To ask when is the rescheduled appointment", "to have the appointment", "To know what is Person X doing at the freed up time", "to get paid for their work", "none"], "input": {"head": "PersonX reschedules PersonX's appointment", "relation": "oWant"}}
{"generation": "PersonX becomes intolerable. After, others will want to kill her, she will be able to escape", "references": ["to tell PersonX to change", "to ignore PersonX"], "input": {"head": "PersonX becomes intolerable", "relation": "oWant"}}
{"generation": "PersonX looks the other way. The effect on others will be different", "references": ["walk away without being noticed.", "none", "get away with stealing somegthing."], "input": {"head": "PersonX looks the other way", "relation": "oEffect"}}
{"generation": "PersonX closes behind PersonY. Before that, PersonX is the only one who can see the", "references": ["PersonX chases PersonY in a high speed chase"], "input": {"head": "PersonX closes behind PersonY", "relation": "isAfter"}}
{"generation": "PersonX calls the fire department. The effect on others will be minimal", "references": ["get timely help", "send a response unit", "the damages become restricted", "calm PersonX down", "will get prepared for an emergency", "will respond to the call"], "input": {"head": "PersonX calls the fire department", "relation": "oEffect"}}
{"generation": "PersonX dumps by PersonX's boyfriend. After that, he's a little more of a jerk", "references": ["PersonX is very sad", "PersonX goes to the store to get away"], "input": {"head": "PersonX dumps by PersonX's boyfriend", "relation": "isBefore"}}
{"generation": "PersonX reproduces this ___ regardless. PersonX did this to me", "references": ["to make it"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "xIntent"}}
{"generation": "PersonX joins a gym. Before that, he's a member of the gym's staff", "references": ["PersonX draws up a healthy living plan"], "input": {"head": "PersonX joins a gym", "relation": "isAfter"}}
{"generation": "PersonX convinces every ___. Before, PersonX needs to know that PersonX is a member of the __", "references": ["to think of an argument", "to have the facts", "to be able to talk sweetly", "to talk to someone", "none"], "input": {"head": "PersonX convinces every ___", "relation": "xNeed"}}
{"generation": "PersonX seeks PersonY's advice. The effect on others will be to make them feel better about themselves", "references": ["none"], "input": {"head": "PersonX seeks PersonY's advice", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The customer said no.", "Their boss doesn't allow hold.", "PersonX has to keep the line moving.", "PersonX is in a hurry."], "input": {"head": "PersonX holds the line", "relation": "HinderedBy"}}
{"generation": "a state highway can be used for a variety of purposes, including:\n\n\u2022", "references": ["driving on", "driving somewhere", "driving", "cars", "hitchhiking", "travel from city to city", "drive on", "travel in car", "driving quickly", "travelling", "travelling long distance", "driving car on", "driving fast", "toll booths"], "input": {"head": "state highway", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY won't let their parents talk to PersonX.", "PersonY's parents don't trust PersonX.", "PersonY's parents won't answer their phones.", "PersonY's parents are not buying PersonX's story."], "input": {"head": "PersonX convinces PersonY's parents", "relation": "HinderedBy"}}
{"generation": "PersonX makes ___ every night. Before, PersonX needs to be in the same room as the other person", "references": ["to gather ingredients", "to go shopping"], "input": {"head": "PersonX makes ___ every night", "relation": "xNeed"}}
{"generation": "PersonX measures ___ in terms. The effect on PersonX will be the same as the effect on PersonX", "references": ["Deceides", "makes calculations", "does match", "none", "Nothing", "figures the cost"], "input": {"head": "PersonX measures ___ in terms", "relation": "xEffect"}}
{"generation": "PersonX gets the sack. Before that, he's got to get the sack", "references": ["PersonX regularly arrives late to work"], "input": {"head": "PersonX gets the sack", "relation": "isAfter"}}
{"generation": "PersonX wins any money. The effect on PersonX will be the same as if PersonX wins the money", "references": ["Has more money", "They become wealthier", "frowns", "Won a prize", "They can afford to buy more things", "sulks"], "input": {"head": "PersonX wins any money", "relation": "xEffect"}}
{"generation": "PersonX picks blueberries. PersonX is a member of the team", "references": ["employed", "functioning", "resourceful", "excited"], "input": {"head": "PersonX picks blueberries", "relation": "xAttr"}}
{"generation": "PersonX feels the heat. Before that, he's been a bit of a jerk", "references": ["PersonX went outside during the summer"], "input": {"head": "PersonX feels the heat", "relation": "isAfter"}}
{"generation": "PersonX kisses PersonY's cheek. PersonX is a bit of a jerk, but he's a", "references": ["overtly-friendly", "romantic", "loving", "caring", "affectionate", "forward", "sleazy"], "input": {"head": "PersonX kisses PersonY's cheek", "relation": "xAttr"}}
{"generation": "PersonX wants to play an instrument. The effect on PersonX will be the same as the effect on Person X", "references": ["he learns music", "he performs in front of people", "buy a instrument", "Picks up instrument", "learn music", "Plays instrument"], "input": {"head": "PersonX wants to play an instrument", "relation": "xEffect"}}
{"generation": "PersonX dies for PersonX's country. After that, the two of them go to the same place,", "references": ["PersonX is buried back in PersonX's hometown"], "input": {"head": "PersonX dies for PersonX's country", "relation": "isBefore"}}
{"generation": "PersonX tells PersonY had a surprise. After, others will want to know what happened to her", "references": ["to stop PersonX from stop telling the secret to others", "congratulate person x", "to make the surprise happen", "ask more questions about the surprise"], "input": {"head": "PersonX tells PersonY had a surprise", "relation": "oWant"}}
{"generation": "PersonX increases PersonX's ___ at the expense. After, others will want to know who you are", "references": ["to yell at person x", "to steal from person x", "to help PersonX conquer the world", "none", "to find PersonX servants"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "oWant"}}
{"generation": "PersonX is well prepared. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX is well prepared", "relation": "oEffect"}}
{"generation": "PersonX can take PersonY. After, PersonX will want to take PersonY", "references": ["sleep", "take person y", "to do something", "eat", "to go home", "to make sure Y does it right.", "to lead Y."], "input": {"head": "PersonX can take PersonY", "relation": "xWant"}}
{"generation": "PersonX gives ___ an allowance. PersonX will be able to give you an allowance if you are a", "references": ["generous", "proud", "giving"], "input": {"head": "PersonX gives ___ an allowance", "relation": "xReact"}}
{"generation": "PersonX trips balls. PersonX did this to me", "references": ["to escape their life", "to play ball", "to experience a drug"], "input": {"head": "PersonX trips balls", "relation": "xIntent"}}
{"generation": "PersonX changes PersonY life. Before that, you had to be a person who was a person", "references": ["PersonX donates money to PersonY"], "input": {"head": "PersonX changes PersonY life", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["person x cannot get close enogh to start", "PersonX's sharp scratching tool broke.", "person x has no idea where to start", "The surface is pure marble and very hard to scratch."], "input": {"head": "PersonX scratches the surface", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["There's no one to battle with", "The lance is made of unbreakable material and can't be broken.", "PersonX is too weak.", "they don't have the strength to break it", "PersonY his it from PersonX.", "PersonX is afraid of retaliation"], "input": {"head": "PersonX breaks PersonX's lance", "relation": "HinderedBy"}}
{"generation": "PersonX makes thanksgiving dinner. As a result, others feel that they are being treated unfairly", "references": ["fulfilled", "happy.", "none"], "input": {"head": "PersonX makes thanksgiving dinner", "relation": "oReact"}}
{"generation": "PersonX needs something. Before that, he needs to be able to do something", "references": ["PersonX broke their laptop", "PersonX just woke up"], "input": {"head": "PersonX needs something", "relation": "isAfter"}}
{"generation": "PersonX succeeds PersonX's father. After that, the two of them go to the same place,", "references": ["PersonX rules his new kingdom"], "input": {"head": "PersonX succeeds PersonX's father", "relation": "isBefore"}}
{"generation": "PersonX goes first. After that, he goes first", "references": ["PersonX had the right away"], "input": {"head": "PersonX goes first", "relation": "isBefore"}}
{"generation": "PersonX withdraws money. PersonX did this to me", "references": ["to make a large purchase", "to spend money"], "input": {"head": "PersonX withdraws money", "relation": "xIntent"}}
{"generation": "PersonX finds a hole. After, PersonX will want to go to the next room and find the next room", "references": ["to interact with the hole", "to look inside the hole", "to prevent leak", "to see what's inside the hole", "fill the hole", "to shine a flashlight in the hole"], "input": {"head": "PersonX finds a hole", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["There is a hurricane warning and PersonX's job is shut down.", "Person X got laid off at work.", "PersonX did not get enough sleep.", "PersonX does not have flexibility in his work schedule.", "Person X is sick.", "PersonX woke up sick with the flu."], "input": {"head": "PersonX works this morning", "relation": "HinderedBy"}}
{"generation": "PersonX loses track of time. PersonX did this to me, and I'm not sure if it was", "references": ["none"], "input": {"head": "PersonX loses track of time", "relation": "xIntent"}}
{"generation": "PersonX wants to save money. After, others will want to buy it", "references": ["none"], "input": {"head": "PersonX wants to save money", "relation": "oWant"}}
{"generation": "PersonX buys PersonY's wife ___ is filled by a woman who is a woman", "references": ["a necklace", "heels", "shoes", "earrings", "candy", "dinner", "a ring", "some flowers", "necklaces"], "input": {"head": "PersonX buys PersonY's wife ___", "relation": "isFilledBy"}}
{"generation": "a townhouse can be used for a home or office", "references": ["upscale living", "government", "people to live in", "sex in city", "living in", "partying", "decorating", "living close to neighbors", "live in", "throw party"], "input": {"head": "townhouse", "relation": "ObjectUse"}}
{"generation": "PersonX loves the experience. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX loves the experience", "relation": "oEffect"}}
{"generation": "PersonX manages one's ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX manages one 's ___", "relation": "oEffect"}}
{"generation": "PersonX gets milk. PersonX did this to me", "references": ["to drink", "to be healthy", "to make something that requires milk", "get milk", "to drink something"], "input": {"head": "PersonX gets milk", "relation": "xIntent"}}
{"generation": "PersonX wants to sleep. Before, PersonX needs to sleep in order to get to the next level", "references": ["none", "to be tired", "to want to rest"], "input": {"head": "PersonX wants to sleep", "relation": "xNeed"}}
{"generation": "PersonX wants to visit. After that, he'll have to go to the other side of", "references": ["PersonX schedules a trip"], "input": {"head": "PersonX wants to visit", "relation": "isBefore"}}
{"generation": "PersonX holds on for dear life. Before that, he was a member of the X-Men,", "references": ["PersonX falls off a bridge"], "input": {"head": "PersonX holds on for dear life", "relation": "isAfter"}}
{"generation": "PersonX takes the stand. PersonX did this to me", "references": ["to tell the truth", "to be loyal", "to conceal the truth", "to obey the law"], "input": {"head": "PersonX takes the stand", "relation": "xIntent"}}
{"generation": "PersonX loves ___ than anything. The effect on PersonX will be to make him feel like he's a loser", "references": ["Practices", "Does it often", "forgets everything else", "none", "gets obsessed"], "input": {"head": "PersonX loves ___ than anything", "relation": "xEffect"}}
{"generation": "PersonX dyes PersonX's hair blue. After, PersonX will want to know who you are", "references": ["a new look", "to look in the mirror", "to get attention", "to look unique", "to take some photos of their hair", "to shock everyone"], "input": {"head": "PersonX dyes PersonX's hair blue", "relation": "xWant"}}
{"generation": "PersonX gives a good account of oneself. After that, she's a bit more of a \"good girl", "references": ["PersonX asks questions about the job", "PersonX gets the job", "PersonX accepts the position"], "input": {"head": "PersonX gives a good account of oneself", "relation": "isBefore"}}
{"generation": "PersonX puts it together. Before that, he was a member of the team that won the", "references": ["PersonX buys a model car"], "input": {"head": "PersonX puts it together", "relation": "isAfter"}}
{"generation": "PersonX catches my eye. Before, PersonX needs to be able to talk to me", "references": ["none", "see person x", "think about person x"], "input": {"head": "PersonX catches my eye", "relation": "xNeed"}}
{"generation": "PersonX finds PersonX's car. Before, PersonX needs to find a way to get to the car", "references": ["remember where they parked", "key", "to walk around the parking lot", "eye"], "input": {"head": "PersonX finds PersonX's car", "relation": "xNeed"}}
{"generation": "PersonX puts it all together. PersonX did this to me, and I'm glad I did", "references": ["to items are be in a single place", "make sense of things", "to things to be organized", "to create the toy"], "input": {"head": "PersonX puts it all together", "relation": "xIntent"}}
{"generation": "PersonX develops web presence. PersonX will be able to create a new user profile and create a", "references": ["like he is making progress", "proud", "successful"], "input": {"head": "PersonX develops web presence", "relation": "xReact"}}
{"generation": "PersonX wipes PersonY's hands. PersonX will be able to use the same abilities as PersonY", "references": ["satsified", "cleaner."], "input": {"head": "PersonX wipes PersonY's hands", "relation": "xReact"}}
{"generation": "PersonX sprains PersonX's leg. After, others will want to kill PersonX", "references": ["none"], "input": {"head": "PersonX sprains PersonX's leg", "relation": "oWant"}}
{"generation": "PersonX enters an art contest. After that, he is given a chance to win a prize", "references": ["PersonX wins the contest money"], "input": {"head": "PersonX enters an art contest", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not want to lose the job.", "PersonX only wants to do good."], "input": {"head": "PersonX is even worse", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is going on a work trip and can't take the family.", "The family does not want to be taken.", "one cannot take someones family away", "The governor has issued a lockdown so nobody can leave their homes.", "Kidnapping people is illegal.", "my family will never leave me", "The car service failed to send a ride.", "PersonX can't afford to take the whole family with them."], "input": {"head": "PersonX takes my family", "relation": "HinderedBy"}}
{"generation": "PersonX gets a call from PersonY's boss. After, others will want to know who is the boss", "references": ["get an answer", "To set X straight", "to know why their boss called Person X.", "To deliver news to X", "to ask a question", "to talk to their boss about the phone call.", "To talk to personY", "hang up phone"], "input": {"head": "PersonX gets a call from PersonY's boss", "relation": "oWant"}}
{"generation": "PersonX earns some money. PersonX is a member of the team that is responsible for the", "references": ["Giver", "talented", "skilled", "Tired"], "input": {"head": "PersonX earns some money", "relation": "xAttr"}}
{"generation": "PersonX wants to read. PersonX did this to me", "references": ["to learn", "to have a hobby", "to escape", "to learn something", "to learn about penguins"], "input": {"head": "PersonX wants to read", "relation": "xIntent"}}
{"generation": "PersonX prevents ___ in patients. After, PersonX will want to know if you are a patient", "references": ["to keep an eye on their evolution", "sends a hospital bill", "to dispose of syringes", "to ask them how they feel", "to issue bill for service", "do more research"], "input": {"head": "PersonX prevents ___ in patients", "relation": "xWant"}}
{"generation": "PersonX meets someone. As a result, others feel the same way", "references": ["happy", "liked", "excited"], "input": {"head": "PersonX meets someone", "relation": "oReact"}}
{"generation": "PersonX gets very nervous. Before that, he's just a normal guy", "references": ["PersonX walks onto the stage"], "input": {"head": "PersonX gets very nervous", "relation": "isAfter"}}
{"generation": "PersonX makes the cookies. PersonX will be able to see your cookies in the browser", "references": ["like a good person", "proud about it", "excited"], "input": {"head": "PersonX makes the cookies", "relation": "xReact"}}
{"generation": "PersonX moves home. Before that, he's been in the hospital for a few days", "references": ["PersonX finishes university"], "input": {"head": "PersonX moves home", "relation": "isAfter"}}
{"generation": "PersonX rides bikes. Before, PersonX needs to be able to ride a bike", "references": ["Wear necessary clothing", "none", "fill the tank"], "input": {"head": "PersonX rides bikes", "relation": "xNeed"}}
{"generation": "PersonX casts PersonY's eyes. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX casts PersonY's eyes", "relation": "oWant"}}
{"generation": "PersonX learns a new language. PersonX will be able to speak English, French, German, Spanish", "references": ["successful", "smart", "happy", "smarter", "tolerant", "satisfied"], "input": {"head": "PersonX learns a new language", "relation": "xReact"}}
{"generation": "PersonX believes also in PersonY. PersonX will be able to use the same abilities as PersonY,", "references": ["dedicated", "like a good person", "generous", "kind", "satisfied"], "input": {"head": "PersonX believes also in PersonY", "relation": "xReact"}}
{"generation": "PersonX pulls the car. As a result, others feel the same way", "references": ["moved", "either pulled away from something bad", "none"], "input": {"head": "PersonX pulls the car", "relation": "oReact"}}
{"generation": "a basketball contains a lot of energy", "references": ["tip off", "half", "basketball play", "rebound", "basketball shot"], "input": {"head": "basketball", "relation": "MadeUpOf"}}
{"generation": "PersonX takes the train that day. After that, he goes to the hospital", "references": ["PersonX calls a auto repair shop"], "input": {"head": "PersonX takes the train that day", "relation": "isBefore"}}
{"generation": "PersonX finds PersonY's ring. The effect on PersonX will be similar to the effect of the ring on PersonY", "references": ["gets a reward", "pawns the ring", "he returns it to them", "they get a reward"], "input": {"head": "PersonX finds PersonY's ring", "relation": "xEffect"}}
{"generation": "PersonX is walking to the store. PersonX is standing in front of the store", "references": ["busy", "capable", "energized", "active", "content", "energetic"], "input": {"head": "PersonX is walking to the store", "relation": "xAttr"}}
{"generation": "PersonX french kisses. After, PersonX will want to kiss you", "references": ["to make out", "to take photgraph", "to hug", "to turn someone on", "to have embrace reciprocated", "Have sex", "Cuddle"], "input": {"head": "PersonX french kisses", "relation": "xWant"}}
{"generation": "PersonX gets PersonX's foot in the door. Before, PersonX needs to get PersonX's foot in the door", "references": ["to work hard", "to have been drinking alcohol", "to try very hard", "to close the door without putting foot in", "to want it", "to determine they want to do that"], "input": {"head": "PersonX gets PersonX's foot in the door", "relation": "xNeed"}}
{"generation": "PersonX makes pasta. After, others will want to eat it", "references": ["none"], "input": {"head": "PersonX makes pasta", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["There is no one to take PersonX's place.", "PersonX is on a time schedule, and time is almost up.", "PersonX knows if they stop they will not finish.", "PersonX knows they need to work straight through to meet the deadline.", "PersonX is trying to impress their boss", "PersonX is behind on work.", "PersonX is working a double shift", "PersonX has a dentist appointment."], "input": {"head": "PersonX takes a break", "relation": "HinderedBy"}}
{"generation": "PersonX helps PersonY's brother. PersonX will be able to help PersonY with his problems", "references": ["happy about it", "helpful", "satisfied"], "input": {"head": "PersonX helps PersonY's brother", "relation": "xReact"}}
{"generation": "PersonX leads PersonY expedition. PersonX is a member of the team that is tasked with rescuing", "references": ["capable", "brave", "thrill-seeking", "adventurous", "skilled"], "input": {"head": "PersonX leads PersonY expedition", "relation": "xAttr"}}
{"generation": "PersonX gets on PersonX's feet. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX gets on PersonX's feet", "relation": "oReact"}}
{"generation": "PersonX is still nervous. Before that, he's been talking about how he's going to", "references": ["PersonX drinks calming tea before a date"], "input": {"head": "PersonX is still nervous", "relation": "isAfter"}}
{"generation": "PersonX gets close to PersonY. PersonX is the one who gets the most attention", "references": ["friendly", "warm", "aroused", "sensual"], "input": {"head": "PersonX gets close to PersonY", "relation": "xAttr"}}
{"generation": "PersonX wants so badly. Before, PersonX needs to be able to talk to people", "references": ["to gather information", "none", "to decide on something"], "input": {"head": "PersonX wants so badly", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is a sociopath.", "PersonX never sees PersonY anymore.", "PersonX is already in love.", "PersonY is not PersonX's type.", "PersonY is married.", "PersonX has a boyfriend already."], "input": {"head": "PersonX falls in love with PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX wants to play hockey. Before, PersonX needs to be able to play hockey", "references": ["none"], "input": {"head": "PersonX wants to play hockey", "relation": "xNeed"}}
{"generation": "PersonX keeps on truckin. After that, he's got a lot of fun", "references": ["PersonX cashes the paycheck"], "input": {"head": "PersonX keeps on truckin", "relation": "isBefore"}}
{"generation": "PersonX wipes the ___ from PersonX's eyes is filled by the same thing that makes the other person's eyes", "references": ["tears", "Makeup", "shampoo", "blood", "bubbles", "soap suds", "makeup", "salt", "Tears", "dirt", "dust", "water"], "input": {"head": "PersonX wipes the ___ from PersonX's eyes", "relation": "isFilledBy"}}
{"generation": "PersonX makes PersonX's arrangements. PersonX will be able to make arrangements for the following:\n\n", "references": ["productive", "independent", "organized", "prepared"], "input": {"head": "PersonX makes PersonX's arrangements", "relation": "xReact"}}
{"generation": "PersonX takes a bow. After, PersonX will want to know what the hell is going on", "references": ["to perform again", "to get a reward", "get a laugh", "get an ovation"], "input": {"head": "PersonX takes a bow", "relation": "xWant"}}
{"generation": "PersonX covers PersonX's head. Before that, he's covered by a mask", "references": ["PersonX checks the weather outside"], "input": {"head": "PersonX covers PersonX's head", "relation": "isAfter"}}
{"generation": "get fit. Before, PersonX needs to be able to use the same data as PersonX", "references": ["doctor", "exercise", "excersise", "eat healthy food", "lift weights", "excercise", "train", "start working out", "eat less", "juggle", "set schedule", "take slow", "play sport", "reverse aging process", "exercise and eat right", "stop smoking", "drink plenty of water", "go to gym", "eat lsd and run", "do knee bends", "eat less and exercise more", "begin fitness program", "practice", "work out"], "input": {"head": "get fit", "relation": "xNeed"}}
{"generation": "PersonX shakes the pagoda tree. After, others will want to see the same thing", "references": ["none"], "input": {"head": "PersonX shakes the pagoda tree", "relation": "oWant"}}
{"generation": "PersonX owns a dog. After, PersonX will want to know if you're a dog", "references": ["Feed the dog", "walk dog", "to train it to become a good dog", "to take care of it well", "Walk the dog", "play with dog"], "input": {"head": "PersonX owns a dog", "relation": "xWant"}}
{"generation": "PersonX finally worked up ___. The effect on others will be different", "references": ["have a date with person X", "become answerable", "have their issues with X resolved.", "feel the opposition", "none"], "input": {"head": "PersonX finally worked up ___", "relation": "oEffect"}}
{"generation": "PersonX peers inside. The effect on PersonX will be similar to that of a normal peer", "references": ["catches a glimpse of something", "is surprised", "is shooed away", "sees something unexpected", "cannot see anything", "witnesses a murder"], "input": {"head": "PersonX peers inside", "relation": "xEffect"}}
{"generation": "PersonX presents the ___ in a manner. PersonX is not a person", "references": ["insightful", "organized", "talkative", "presenting", "articulate", "prepared"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "xAttr"}}
{"generation": "PersonX gathers all the ingredients. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX gathers all the ingredients", "relation": "oReact"}}
{"generation": "PersonX conducts PersonY investigation. The effect on others will be determined by the results of PersonY", "references": ["PersonY sweats from nervousness", "cries", "asks PersonX to do more", "PersonY is arrested", "none"], "input": {"head": "PersonX conducts PersonY investigation", "relation": "oEffect"}}
{"generation": "PersonX laughs PersonY's asses off. Before that, he's just a guy who's just a guy", "references": ["PersonX makes a funny joke"], "input": {"head": "PersonX laughs PersonY's asses off", "relation": "isAfter"}}
{"generation": "PersonX puts together a ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX puts together a ___", "relation": "oEffect"}}
{"generation": "You are likely to find a nail in a coffin", "references": ["finger", "board"], "input": {"head": "nail", "relation": "AtLocation"}}
{"generation": "PersonX takes matters. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX takes matters", "relation": "oReact"}}
{"generation": "PersonX buys PersonX's one. After, PersonX will want to buy PersonX's one", "references": ["to get new shoes", "to go home", "to use the shoes for a job interview", "to meet a need", "to try it out", "to eat something tasty"], "input": {"head": "PersonX buys PersonX's one", "relation": "xWant"}}
{"generation": "PersonX convinces every ___. After, PersonX will want to know what the ___", "references": ["to be seen as a leader", "to part ways", "to tell everyone that peace is the best", "to persuade", "to take everyone's money and run", "to carry out something", "to continue talking"], "input": {"head": "PersonX convinces every ___", "relation": "xWant"}}
{"generation": "PersonX has to take care of PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to ensure the well being of person y", "none", "to help persony."], "input": {"head": "PersonX has to take care of PersonY", "relation": "xIntent"}}
{"generation": "PersonX nurses PersonY back to health. Before, PersonX needs to be able to talk to PersonY", "references": ["to be a nurse", "to sit with y", "to be lookingn after PersonY", "to bring medicine"], "input": {"head": "PersonX nurses PersonY back to health", "relation": "xNeed"}}
{"generation": "PersonX forgets PersonY's birthday. Before that, he's just a kid", "references": ["PersonX gets really busy at work"], "input": {"head": "PersonX forgets PersonY's birthday", "relation": "isAfter"}}
{"generation": "PersonX pays ___ to the government. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX pays ___ to the government", "relation": "oReact"}}
{"generation": "PersonX sticks with PersonY. As a result, others feel that PersonX is more important than PersonY", "references": ["empowered", "elation", "backed up"], "input": {"head": "PersonX sticks with PersonY", "relation": "oReact"}}
{"generation": "PersonX sits on PersonY's couch. After, others will want to know what's going on", "references": ["to talk with Personx", "to have a chat with the other person on the couch", "to watch some television on the couch", "to put their feet up and get a blanket to get comfortable", "to watch the game"], "input": {"head": "PersonX sits on PersonY's couch", "relation": "oWant"}}
{"generation": "PersonX rides on a rail. PersonX is a character in the game", "references": ["capable", "strong", "active", "adventerous", "adventurous"], "input": {"head": "PersonX rides on a rail", "relation": "xAttr"}}
{"generation": "PersonX goes ___ with PersonX's mom. PersonX did this to her, and she's not going to let it", "references": ["to spend time with personx's mom", "to go shopping with personx's mom", "to go places with her mom all the time."], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "xIntent"}}
{"generation": "PersonX sweeps ___ under the rug is filled by the same people who are the most important people in", "references": ["sequins", "Dust", "Paper", "hair", "Dirt", "cat hair", "dirt", "dust", "Toothpick", "dust bunnies"], "input": {"head": "PersonX sweeps ___ under the rug", "relation": "isFilledBy"}}
{"generation": "PersonX is on a first date. After that, she's going to be a little more open about", "references": ["PersonX takes date home"], "input": {"head": "PersonX is on a first date", "relation": "isBefore"}}
{"generation": "PersonX murders PersonY. After, PersonX will want to kill PersonY", "references": ["to get away with crime", "to get away from the scene", "to destroy all evidences", "to exact revenge", "to get a job", "to meet people"], "input": {"head": "PersonX murders PersonY", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not have the proper credentials.", "PersonY has a criminal record.", "Theres no free time to interview them.", "PersonY does not have a degree.", "PersonY cancelled.", "Persony has an interview somewhere else."], "input": {"head": "PersonX gets PersonY interview", "relation": "HinderedBy"}}
{"generation": "PersonX brings the ___ into disrepute. As a result, others feel that he is a bad person", "references": ["unhappy about their loss of reputation.", "none"], "input": {"head": "PersonX brings the ___ into disrepute", "relation": "oReact"}}
{"generation": "PersonX uses ___ anyway. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX uses ___ anyway", "relation": "oWant"}}
{"generation": "PersonX has to send it back. After that, he'll have to send it back to the other", "references": ["PersonX brings the award to the post office", "PersonX onx walked out without paying"], "input": {"head": "PersonX has to send it back", "relation": "isBefore"}}
{"generation": "PersonX looks better. PersonX is a great player, but he's not a great", "references": ["aware", "handsome", "good looking", "trendy", "intelligent", "stylish"], "input": {"head": "PersonX looks better", "relation": "xAttr"}}
{"generation": "PersonX revenges PersonX's father's ___. Before, PersonX needs to be able to use the ___", "references": ["to plan the attack", "to confront the murderer", "to find the killer", "to get some poison", "to buy a gun"], "input": {"head": "PersonX revenges PersonX's father 's ___", "relation": "xNeed"}}
{"generation": "PersonX achieves PersonY level. Before, PersonX needs to be able to use the same character in a different", "references": ["set goals based on PersonY", "to put in all his efforts", "to work hard", "work hard"], "input": {"head": "PersonX achieves PersonY level", "relation": "xNeed"}}
{"generation": "PersonX pulls PersonX's car over. After, others will want to take it to the hospital", "references": ["none"], "input": {"head": "PersonX pulls PersonX's car over", "relation": "oWant"}}
{"generation": "PersonX leaves the library. Before, PersonX needs to be able to access the library", "references": ["find a library to go to", "enter the library", "work in the library", "study in the library"], "input": {"head": "PersonX leaves the library", "relation": "xNeed"}}
{"generation": "PersonX becomes very frustrated. After, PersonX will want to kill PersonX, but he will not", "references": ["to fight", "to give up", "to figure out the situation.", "to cheer up", "to calm down", "to scream", "to calm down."], "input": {"head": "PersonX becomes very frustrated", "relation": "xWant"}}
{"generation": "PersonX talks to PersonX's friends. After, others will want to know what's going on", "references": ["to have a good time", "to determine what to do next", "continue on their way", "go with PersonX to a bar", "none"], "input": {"head": "PersonX talks to PersonX's friends", "relation": "oWant"}}
{"generation": "PersonX breaks PersonY neck. Before that, he's got a lot of stuff going on", "references": ["PersonX gives PersonY a pile driver in the ring", "PersonX smashes PersonY's head into the wall", "PersonX crashes the car"], "input": {"head": "PersonX breaks PersonY neck", "relation": "isAfter"}}
{"generation": "PersonX borrows ___ from a friend is filled by a lot of people", "references": ["books", "notes", "a book", "cash", "Clothes", "money", "Books", "tools", "clothes", "an eraser", "a pencil", "phone", "Papers", "deordorant", "Money"], "input": {"head": "PersonX borrows ___ from a friend", "relation": "isFilledBy"}}
{"generation": "PersonX feels the heat. As a result, others feel the heat", "references": ["powerful", "none"], "input": {"head": "PersonX feels the heat", "relation": "oReact"}}
{"generation": "PersonX licks PersonY's balls. PersonX will be the one who gets the most points", "references": ["a loss of self-esteem", "hopeful their actions worked", "cheap"], "input": {"head": "PersonX licks PersonY's balls", "relation": "xReact"}}
{"generation": "While seeing story, you would think that the story would be about the story of", "references": ["read", "look for beginning", "notice who author", "read title", "understand", "remember", "might laugh", "would read", "turn page", "start reading", "stop to read story", "write down", "reading", "might listen to narrator", "learn", "read last word", "understand plot", "might entertained", "lacrimation"], "input": {"head": "see story", "relation": "HasSubEvent"}}
{"generation": "PersonX throws the book. PersonX is then thrown into the air", "references": ["frustrated", "aggressive", "obnoxious", "violent", "exasperated"], "input": {"head": "PersonX throws the book", "relation": "xAttr"}}
{"generation": "a snow can be used for this purpose", "references": ["children", "making snowman", "having little snow battle", "building snowmen", "cold climates", "clean the windshield on the car", "removal", "keep drinks cold", "making snow angels", "arrives with storm", "cover ground", "play in", "shoveling", "making snowmen", "form the product", "use as body", "build an igloo", "weather", "building snowmans", "christmas", "use as material", "create snow angels", "build snowman", "shovelling", "build a snow fort", "collect on the ground", "falls around christmas", "build really neat fort", "melt into water", "beautiful vistas", "shovel up", "create snow cones", "make the snowballs"], "input": {"head": "snow", "relation": "ObjectUse"}}
{"generation": "a health fruits can be used for a variety of purposes, including:\n\n\u2022", "references": ["stomp into juice", "use as snacks", "alleviate constipation", "put in smoothies", "revitalize energy", "maintain diet", "paint a still life", "munch on", "lose weight", "throw at people"], "input": {"head": "health fruits", "relation": "ObjectUse"}}
{"generation": "PersonX changes PersonY's lives. As a result, others feel the same way", "references": ["angry and betrayed", "happy", "thankful", "grateful for the change."], "input": {"head": "PersonX changes PersonY's lives", "relation": "oReact"}}
{"generation": "PersonX looks like an idiot. As a result, others feel that he is a bad person", "references": ["none"], "input": {"head": "PersonX looks like an idiot", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X never has time to practice", "PersonX lacks medical insurance.", "PersonX's condition is untreatable.", "PersonX has a learning disability.", "PersonX has cancer.", "Person X is too tired all the time"], "input": {"head": "PersonX gets much better", "relation": "HinderedBy"}}
{"generation": "PersonX picks last. The effect on PersonX will be the same as the effect on PersonX", "references": ["none"], "input": {"head": "PersonX picks last", "relation": "xEffect"}}
{"generation": "PersonX is fired from PersonX's job. PersonX did this to her, and she was fired for it", "references": ["none", "upset"], "input": {"head": "PersonX is fired from PersonX's job", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["It is lightning out.", "The docks are closed.", "PersonX's boat isn't working properly.", "PersonX doesn't have a boating license.", "There is a hurricane in the area.", "The boat has a hole and will sink.", "PersonX doesn't have a truck to tow it to the lake."], "input": {"head": "PersonX takes PersonX's boat out", "relation": "HinderedBy"}}
{"generation": "PersonX gets PersonY's order. After that, PersonX gets PersonY's order", "references": ["PersonX calls in PersonY's order"], "input": {"head": "PersonX gets PersonY's order", "relation": "isBefore"}}
{"generation": "PersonX waits all day. After, PersonX will want to know what's going on", "references": ["to go online and search for a sale", "to get home quickly", "to enter the store and buy everything", "to do something else", "to call and find out the progress", "to stop waiting"], "input": {"head": "PersonX waits all day", "relation": "xWant"}}
{"generation": "PersonX buys PersonY's one. The effect on PersonX will be the same as PersonY's", "references": ["pays personY", "gets back the change", "puts in pocket", "none", "gets personY's one"], "input": {"head": "PersonX buys PersonY's one", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's teacher doesn't let anyone speak", "PersonX does not have a sense of humor.", "PersonX is not a social person.", "PersonX is not a funny person", "The jokes PersonX wants to make are racist.", "No one listens to PersonX", "PersonX doesn't know anything good", "PersonX finds the jokes and comments offensive."], "input": {"head": "PersonX makes a joke", "relation": "HinderedBy"}}
{"generation": "PersonX finishes the test. PersonX is then asked to choose a new name for the test", "references": ["studious", "Persistent", "learning", "Goal oriented"], "input": {"head": "PersonX finishes the test", "relation": "xAttr"}}
{"generation": "PersonX quickly fell in love. After, PersonX will want to know what you think of her", "references": ["to be loved back", "to consummate the love", "to tell the person he loves them", "to get married", "to love and care for someone", "to propose marriage"], "input": {"head": "PersonX quickly fell in love", "relation": "xWant"}}
{"generation": "PersonX lands on PersonY's leg. PersonX did this to PersonY's leg", "references": ["to be on someone", "none"], "input": {"head": "PersonX lands on PersonY's leg", "relation": "xIntent"}}
{"generation": "PersonX gives PersonY name. Before, PersonX needs to know PersonY's name", "references": ["to know personY", "receive permission to decide the name", "decide on a name to give", "none", "to think that they would do well"], "input": {"head": "PersonX gives PersonY name", "relation": "xNeed"}}
{"generation": "PersonX pulls the car. After, others will want to take the car", "references": ["to thank PersonX", "none", "to pay PersonX"], "input": {"head": "PersonX pulls the car", "relation": "oWant"}}
{"generation": "PersonX makes too much noise. PersonX will be able to make a lot of noise, but it", "references": ["powerful", "unhappy", "boisterous"], "input": {"head": "PersonX makes too much noise", "relation": "xReact"}}
{"generation": "PersonX looks the ___ in the face. Before, PersonX needs to be able to see the ___", "references": ["Don't show your fear.", "to be calm", "Make sure he has protection.", "to be face to face with something"], "input": {"head": "PersonX looks the ___ in the face", "relation": "xNeed"}}
{"generation": "PersonX cleans PersonY's clock. The effect on PersonX will be reversed if PersonY is not in the same room", "references": ["gets messy", "gets thanked"], "input": {"head": "PersonX cleans PersonY's clock", "relation": "xEffect"}}
{"generation": "PersonX creates an app. After that, you can use it to create a new app", "references": ["PersonX publishes the app"], "input": {"head": "PersonX creates an app", "relation": "isBefore"}}
{"generation": "PersonX takes ___ to ensure. Before, PersonX needs to know that PersonX is a member of the group", "references": ["to know the details", "to develop managing skills", "to know what it entails", "none", "to know they can do it"], "input": {"head": "PersonX takes ___ to ensure", "relation": "xNeed"}}
{"generation": "You are likely to find a sky in an area that is not your own", "references": ["outside", "painting", "heavens", "day", "planet", "atmosphere", "planetarium", "looking up", "photo", "pre schoolers painting", "place on earth", "air", "outdoors"], "input": {"head": "sky", "relation": "AtLocation"}}
{"generation": "PersonX gets the ___ into PersonX's hands. PersonX is then able to use the ___ to make PersonX", "references": ["resourceful", "brave", "persistent", "helpful", "dominant", "supportive"], "input": {"head": "PersonX gets the ___ into PersonX's hands", "relation": "xAttr"}}
{"generation": "PersonX would like. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX would like", "relation": "oWant"}}
{"generation": "PersonX goes to a doctor's appointment. Before that, he's been in a coma for a week", "references": ["PersonX drives a car to the office"], "input": {"head": "PersonX goes to a doctor 's appointment", "relation": "isAfter"}}
{"generation": "PersonX splits the difference. After that, he's a bit more of a \"good guy", "references": ["PersonX leaves a tip", "PersonX pays their part of the bill"], "input": {"head": "PersonX splits the difference", "relation": "isBefore"}}
{"generation": "PersonX leaves alone. After that, he leaves the room", "references": ["PersonX calls their friends to make sure they got home"], "input": {"head": "PersonX leaves alone", "relation": "isBefore"}}
{"generation": "PersonX reschedules PersonY's appointment. Before that, you can use the \"Resume\" button to", "references": ["PersonX can't make the appointment today"], "input": {"head": "PersonX reschedules PersonY's appointment", "relation": "isAfter"}}
{"generation": "PersonX recalls ___ PersonY be made. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX recalls ___ PersonY be made", "relation": "oReact"}}
{"generation": "PersonX keeps the ___ from the door. After, PersonX will want to talk to you", "references": ["monitor the door", "take shifts with another person", "to release the animal from the trap away from the door", "to save his life from enemies", "to guard his home", "to bring the animal to animal control"], "input": {"head": "PersonX keeps the ___ from the door", "relation": "xWant"}}
{"generation": "PersonX is walking down the street. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX is walking down the street", "relation": "oReact"}}
{"generation": "PersonX spends ___ in prayer. The effect on PersonX will be the same as the effect on PersonX", "references": ["looked down on", "more centered", "gets ridiculed", "has relationship with God", "more trusting"], "input": {"head": "PersonX spends ___ in prayer", "relation": "xEffect"}}
{"generation": "PersonX sits next to PersonY. PersonX did this to me, and I'm not sure if it's", "references": ["to be close to person", "to eat food with the person"], "input": {"head": "PersonX sits next to PersonY", "relation": "xIntent"}}
{"generation": "PersonX sheds ___ on the nature. Before, PersonX needs to be able to see the world", "references": ["to go to the classroom", "to be good at explaining things", "to write on the black board", "to know the nature", "none"], "input": {"head": "PersonX sheds ___ on the nature", "relation": "xNeed"}}
{"generation": "PersonX turns PersonY's life around. As a result, others feel the same way", "references": ["great", "grateful"], "input": {"head": "PersonX turns PersonY's life around", "relation": "oReact"}}
{"generation": "PersonX finds a pay phone. The effect on others will be similar to that of a pay phone", "references": ["none"], "input": {"head": "PersonX finds a pay phone", "relation": "oEffect"}}
{"generation": "PersonX dies for PersonX's country. Before that, he was a member of the United States Army", "references": ["PersonX enlists in the military"], "input": {"head": "PersonX dies for PersonX's country", "relation": "isAfter"}}
{"generation": "PersonX commits ___ by jumping. The effect on PersonX will be the same as the one on PersonX", "references": ["They die", "cremated", "buried", "They break many bones"], "input": {"head": "PersonX commits ___ by jumping", "relation": "xEffect"}}
{"generation": "PersonX hides under the covers. PersonX did this to me because I was a fan of the show and", "references": ["to hide from the boogeyman", "to not be sean", "to be hidden", "to go unnoticed"], "input": {"head": "PersonX hides under the covers", "relation": "xIntent"}}
{"generation": "a mirror can be used for this purpose", "references": ["practice in front of", "see how the item looks", "see themselves in", "groom themselves", "look in while giving self pep talks", "see the outfit", "see reflection", "show PersonY their work", "spectator", "check blind spots", "see what is behind the car", "look at herself in the dress", "see what the boots look like", "show PersonY end results", "show personY", "observe their form", "watch how it's going", "rehearse their speech in front of", "see behind", "try on the jacket and make sure it looks good", "see how the clothing fits", "examine fit", "watch while practicing", "start a fire", "check for vehicles", "covertly check their teeth for food particles before smiling and flirting with PersonX", "get ready", "watch the hairdresser work", "break and use as a weapon", "look at self", "checking make up", "see their teeth", "examine dress", "look at the clothes", "check themselves out", "see hair", "seeing reflection", "see themselves while they brush", "take a look", "practice yelling", "see how shirt looks on", "check the shirt fit", "apply product perfectly", "to see behind yourself", "evaluate their reflection", "look at sweater", "check for traffic", "check blindspot", "check if they look good", "look into and say motivational phrases", "reapply makeup", "tie their bowtie", "see the look", "apply make up", "inspect the haircut", "look at hair", "check out how their hair looks", "see what's happening", "check themself out", "check the progress", "admire self in", "see how frames look", "see how it looks", "avoid moving head and body", "look at how they look on feet", "check face and body", "looking at yourself", "watch the movements in", "look at people in eyes", "practice in front of while standing next to each other", "accurately perform placement", "practice what he is going to say to her when he calls", "reflecting light", "reflect light.", "see how they look this time", "see PersonX's self", "examine fit of clothes", "see themselves", "Watch themselves", "check their appearance", "check if it looks good", "look into while applying cosmetics", "try on the helmet", "see how different frames look", "see how they look", "see how look", "see PersonX's image", "practice with", "see where PersonX is cutting", "look at yourself", "make sure it looks good", "check self out in", "focus sunlight", "look at their new style", "see what the clothes look like", "check out PersonX's butt", "reflect images", "reflect", "check and see if anyone is watching", "see how they're doing", "seeing reflected image", "to see themselves", "see where the other competitors are", "look at self while talking", "try on", "see blind spots", "check how she looks", "see how the fit of new clothing is", "show their clients how they look", "check reflection", "see what they look like when wearing them", "check fit of item before purchase", "see what is happening", "check the finished look", "see where to cut", "watch reflection", "help with the picture", "see other vehicles behind them", "watch himself", "see what they are doing", "see the results", "look at the finished product", "look at themselves", "look at their body", "fix makeup", "smile at", "check appearance", "see the hair from all angles", "check blindspots", "check how they look", "look at pants", "look into", "make sure they look ok", "show them the finished work", "ensure the lotion's rubbed in", "see back of head", "look at dress", "watch how they're doing", "see how it turned out", "try on new outfits", "check how it looks", "write a note on", "look into and feel ashamed", "looking behind", "check back and sides for traffic", "try on outfits in front of", "reflection", "look into to see how his hair looks", "see their reflection", "see how outfit looks", "admire or check themselves", "show PersonY", "see around the corner.", "see what they're doing", "look at the earrings", "look groomed", "look at fit of coat", "practice expressions", "look at face", "see yourself", "look at reflection", "see the results of applying makeup", "see what he looks like", "see how they did", "see what their performance look like", "watch what he looks like", "show the person", "light reflection", "check back and sides for safety", "look in", "send semaphore"], "input": {"head": "mirror", "relation": "ObjectUse"}}
{"generation": "PersonX abuses PersonX's power. PersonX will be able to use PersonX's power to manipulate Person", "references": ["powerful", "mighty", "guilty", "corrupt"], "input": {"head": "PersonX abuses PersonX's power", "relation": "xReact"}}
{"generation": "PersonX falls on PersonY's neck. After, others will want to kill him", "references": ["get help", "to call for Mommy", "to slap PersonX", "to get treatment", "to see doctor", "to yell at PersonX", "to go to the hospital", "to cry"], "input": {"head": "PersonX falls on PersonY's neck", "relation": "oWant"}}
{"generation": "a video camera can be used for this purpose", "references": ["make a movie", "review his practice sessions", "make a speech", "have an excuse to ask people stupid questions when you point it at them.", "tape the performance", "video the rainbows", "record video", "spy on someone", "so baby walking", "place on your desk face up to record the history of the ceiling", "use as evidence"], "input": {"head": "video camera", "relation": "ObjectUse"}}
{"generation": "PersonX pulls PersonY's arm. PersonX is still holding PersonY's arm", "references": ["antagonistic", "jerky", "mean", "annoying"], "input": {"head": "PersonX pulls PersonY's arm", "relation": "xAttr"}}
{"generation": "PersonX holds PersonY place. The effect on PersonX will be the same as PersonY", "references": ["gets yelled at", "stared at"], "input": {"head": "PersonX holds PersonY place", "relation": "xEffect"}}
{"generation": "PersonX throws a frisbee. After, PersonX will want to get a frisbee", "references": ["to have fun", "to enjoy the nice weather", "have fun", "come back home"], "input": {"head": "PersonX throws a frisbee", "relation": "xWant"}}
{"generation": "PersonX commits ___ by jumping. As a result, others feel that the code is too complex and that it is", "references": ["sad.", "bad", "confused.", "hurt."], "input": {"head": "PersonX commits ___ by jumping", "relation": "oReact"}}
{"generation": "PersonX takes PersonY's laptop. PersonX did this to the laptop, and then PersonY did this to", "references": ["to borrow it for a school project.", "to put their friend's laptop away", "to finish his essay"], "input": {"head": "PersonX takes PersonY's laptop", "relation": "xIntent"}}
{"generation": "PersonX always makes. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX always makes", "relation": "oWant"}}
{"generation": "PersonX looks PersonX's ___ in the face. Before, PersonX needs to be able to see PersonX's ___", "references": ["none", "to want to face them", "to talk to them"], "input": {"head": "PersonX looks PersonX's ___ in the face", "relation": "xNeed"}}
{"generation": "PersonX doesn't have many friends. After, PersonX will want to know who you are", "references": ["to cry", "to go out and make more friends", "to make friends", "to so something fun"], "input": {"head": "PersonX does n't have many friends", "relation": "xWant"}}
{"generation": "PersonX helps ___ with PersonY's problems. The effect on PersonX will be similar to the effect on PersonY", "references": ["becomes an expert", "files report", "gets thanked", "writes out report", "none"], "input": {"head": "PersonX helps ___ with PersonY's problems", "relation": "xEffect"}}
{"generation": "PersonX gives PersonY instruction. Before, PersonX needs to know PersonY's name, and PersonY needs", "references": ["to find out in what subject or area PersonY needs instruction.", "know what to do", "to talk to PersonY to set up a time for the instruction.", "be with PersonY", "to research and become familiar with the material that will be taught to PersonY"], "input": {"head": "PersonX gives PersonY instruction", "relation": "xNeed"}}
{"generation": "PersonX reduces the ___ to levels. The effect on PersonX will be applied to the next level", "references": ["is approved of", "gets elected", "is commended for his efforts", "is touted as an example"], "input": {"head": "PersonX reduces the ___ to levels", "relation": "xEffect"}}
{"generation": "PersonX has lost PersonX's phone. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX has lost PersonX's phone", "relation": "xIntent"}}
{"generation": "PersonX takes the bag. PersonX is then given a bag and asks if he can take", "references": ["capable", "dishonest", "sneaky", "Reckless", "Perceptive", "immoral"], "input": {"head": "PersonX takes the bag", "relation": "xAttr"}}
{"generation": "PersonX gets the ___ into PersonY's hands. The effect on PersonX will be the same as the effect on PersonY", "references": ["becomes in charge", "receives a payment", "hides from prosecution", "becomes a leader", "none"], "input": {"head": "PersonX gets the ___ into PersonY's hands", "relation": "xEffect"}}
{"generation": "PersonX makes ___ every morning. PersonX did this to me", "references": ["to make it", "to be wide awake", "to be ready to go", "to accomplish something"], "input": {"head": "PersonX makes ___ every morning", "relation": "xIntent"}}
{"generation": "PersonX doesn't make the cut. After, PersonX will want to know if you're a good person, and if", "references": ["to give up", "to practice more in order to succeed next time", "to sleep", "to go home", "to get better", "to go home and sulk alone"], "input": {"head": "PersonX does n't make the cut", "relation": "xWant"}}
{"generation": "PersonX restores PersonY to life. After that, PersonY will be able to use the ability to", "references": ["PersonX calls for an ambulance", "PersonX feels good about PersonX's work", "PersonX holds PersonY until the ambulance comes"], "input": {"head": "PersonX restores PersonY to life", "relation": "isBefore"}}
{"generation": "PersonX creates PersonY structure. PersonX did this to make it easier to create a PersonY structure", "references": ["to help out y"], "input": {"head": "PersonX creates PersonY structure", "relation": "xIntent"}}
{"generation": "PersonX sits patiently. As a result, others feel the same way", "references": ["thankful for the patience", "none"], "input": {"head": "PersonX sits patiently", "relation": "oReact"}}
{"generation": "PersonX walks barefoot. Before that, he's wearing a pair of jeans and a pair", "references": ["PersonX likes to go outside"], "input": {"head": "PersonX walks barefoot", "relation": "isAfter"}}
{"generation": "PersonX takes for a ride. The effect on PersonX will be similar to that of a car's headlights", "references": ["travels a route or path", "gets out of the house", "gets lost", "tired"], "input": {"head": "PersonX takes for a ride", "relation": "xEffect"}}
{"generation": "PersonX uses the ___ as a means. Before, PersonX needs to know that PersonX is a member of the group", "references": ["to figure out a plan", "to gather materials"], "input": {"head": "PersonX uses the ___ as a means", "relation": "xNeed"}}
{"generation": "PersonX expresses PersonX's ___ in words. After, others will want to know what PersonX is saying", "references": ["to learn more about PersonX", "to hear what PersonX has to say", "to be thanked", "to be recognized"], "input": {"head": "PersonX expresses PersonX's ___ in words", "relation": "oWant"}}
{"generation": "PersonX distributes in forms without permission. The effect on others will be limited to those who have signed the agreement", "references": ["none"], "input": {"head": "PersonX distributes in forms without permission", "relation": "oEffect"}}
{"generation": "PersonX is planning PersonY's wedding. Before that, she's planning to have a baby", "references": ["PersonX is hired by PersonY"], "input": {"head": "PersonX is planning PersonY's wedding", "relation": "isAfter"}}
{"generation": "PersonX trips balls. Before, PersonX needs to be able to get a ball from a person who", "references": ["find balls", "lie in wait for unsuspecting balls", "to run up on the ball", "to play soccer", "take drugs", "take more drugs"], "input": {"head": "PersonX trips balls", "relation": "xNeed"}}
{"generation": "a woman can be used for a variety of purposes, including:\n\n\u2022", "references": ["make things smell nice", "mow the lawn", "make a wife", "cook dinner", "sweep the driveway", "nurture children", "run a company", "take on a date", "clean up a house", "stands close to him in the busy coffee shop"], "input": {"head": "woman", "relation": "ObjectUse"}}
{"generation": "PersonX gets work. Before that, he's a writer, and he's a writer", "references": ["PersonX applies for different positions at a company"], "input": {"head": "PersonX gets work", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is scarred of needles.", "PersonY has an infection currently.", "PersonX is too far away from PersonY.", "PersonY puts their tongue back in too quickly."], "input": {"head": "PersonX sticks PersonY's tongue", "relation": "HinderedBy"}}
{"generation": "PersonX wants to read. PersonX will be able to read the following:\n\nPerson X", "references": ["occupied", "relaxed", "calm", "curious", "interested"], "input": {"head": "PersonX wants to read", "relation": "xReact"}}
{"generation": "PersonX lands on PersonX's leg. As a result, others feel that PersonX is being hurt", "references": ["clumsy", "sorry", "none", "hurt"], "input": {"head": "PersonX lands on PersonX's leg", "relation": "oReact"}}
{"generation": "PersonX feels terrible. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX feels terrible", "relation": "xIntent"}}
{"generation": "PersonX makes arrangements. The effect on others will be limited to those who are not in the group", "references": ["is asked questions", "none", "hears about the plan"], "input": {"head": "PersonX makes arrangements", "relation": "oEffect"}}
{"generation": "PersonX throws a frisbee. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX throws a frisbee", "relation": "oWant"}}
{"generation": "PersonX cann't believe PersonX's luck. As a result, others feel that they are being cheated", "references": ["none"], "input": {"head": "PersonX can n't believe PersonX's luck", "relation": "oReact"}}
{"generation": "bird lover can be a bit of a pain in the ass", "references": ["listen to mockingbird sing"], "input": {"head": "bird lover", "relation": "CapableOf"}}
{"generation": "PersonX waits at home. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX waits at home", "relation": "oEffect"}}
{"generation": "PersonX pursues PersonX's course. Before that, he's been working on the game for a while", "references": ["PersonX writes in their journal that they made the right decisions"], "input": {"head": "PersonX pursues PersonX's course", "relation": "isAfter"}}
{"generation": "PersonX inflicts ___ on others. The effect on PersonX will be the same as the effect on PersonX", "references": ["becomes a criminal", "becomes disliked", "PersonX is yelled at", "PersonX commits a crime", "regret", "becomes evil", "they get a sense of excitement", "becomes a violent person", "PersonX is arrested"], "input": {"head": "PersonX inflicts ___ on others", "relation": "xEffect"}}
{"generation": "a magic contains a number of different types of magic", "references": ["illusion"], "input": {"head": "magic", "relation": "MadeUpOf"}}
{"generation": "PersonX is right next to PersonY. Before, PersonX needs to be able to see PersonY's face", "references": ["none", "walk up to PersonY", "spot PersonY"], "input": {"head": "PersonX is right next to PersonY", "relation": "xNeed"}}
{"generation": "PersonX alters PersonX's course. PersonX will be able to change the course of PersonX's course", "references": ["happy", "responsible", "content", "satisfied"], "input": {"head": "PersonX alters PersonX's course", "relation": "xReact"}}
{"generation": "PersonX studies for an exam. After that, he'll be able to take the exam", "references": ["PersonX improves their grade", "PersonX passed the exam"], "input": {"head": "PersonX studies for an exam", "relation": "isBefore"}}
{"generation": "PersonX finds it a new home. After that, he's back in the same room with his girlfriend", "references": ["PersonX takes a picture of the dog and its new owner", "PersonX moves in to a new home", "PersonX looks for more rabbits"], "input": {"head": "PersonX finds it a new home", "relation": "isBefore"}}
{"generation": "PersonX eats everything. The effect on others will be different", "references": ["Buys more food", "none", "Yells at X"], "input": {"head": "PersonX eats everything", "relation": "oEffect"}}
{"generation": "PersonX gives the children ___. The effect on others will be the same as the effect on themselves", "references": ["they have a sweet treat", "are dancing because they are happy to receive gifts from PersonX", "are drinking soda pop", "playing with the toys and paper hearts, PersonX gave them", "they laugh"], "input": {"head": "PersonX gives the children ___", "relation": "oEffect"}}
{"generation": "PersonX gets ___ at the store. PersonX did this to me", "references": ["none", "to get something done", "to accomplish something", "to look pretty"], "input": {"head": "PersonX gets ___ at the store", "relation": "xIntent"}}
{"generation": "project is a great way to get started with the project", "references": ["interesting"], "input": {"head": "project", "relation": "HasProperty"}}
{"generation": "PersonX takes PersonX's outside. PersonX is the only person in the game who can use the", "references": ["vigilant", "adventurous", "short-winded", "hot"], "input": {"head": "PersonX takes PersonX's outside", "relation": "xAttr"}}
{"generation": "PersonX looks like fun. As a result, others feel that the game is too easy", "references": ["good to get to know person x"], "input": {"head": "PersonX looks like fun", "relation": "oReact"}}
{"generation": "PersonX rescues PersonX's dog. Before that, the dog is taken to the hospital", "references": ["PersonX notices the dog is still in the burning house"], "input": {"head": "PersonX rescues PersonX's dog", "relation": "isAfter"}}
{"generation": "PersonX exerts PersonX's influence. After, PersonX will want to know who you are, and what you're doing", "references": ["to take charge", "give contact information", "for people to be helped", "to change rules", "look for person's reaction", "to opress people", "to things to work out well"], "input": {"head": "PersonX exerts PersonX's influence", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["All of the good places are already taken.", "All the good places are occupied by other people.", "Strangers have taken all the good spots.", "There are no vacancies in the area", "The location PersonX is looking only has run down places.", "A dog pooped in the only spot left.", "PersonX is in prison", "PersonX does not have money for a good place."], "input": {"head": "PersonX finds a good place", "relation": "HinderedBy"}}
{"generation": "PersonX draws the short straw. PersonX did this to me, and I'm not going to lie", "references": ["none"], "input": {"head": "PersonX draws the short straw", "relation": "xIntent"}}
{"generation": "PersonX brings people together. After, others will want to know what they're doing", "references": ["to have fun with everyone", "to listen to PersonX", "to protest", "none", "to get to know everyone"], "input": {"head": "PersonX brings people together", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's dad hid his gun", "There is a union in place.", "PersonX's mom took all his ammo", "HR has a longer than needed process.", "PersonX is not a boss.", "PersonX is in prison.", "PersonX's friend told him not to"], "input": {"head": "PersonX promptly fired", "relation": "HinderedBy"}}
{"generation": "bocci is a very good example of a good example of a", "references": ["played outside"], "input": {"head": "bocci", "relation": "HasProperty"}}
{"generation": "PersonX loves the experience. PersonX will be able to play with you and interact with you in", "references": ["loving, happy as he enjoyed the experience of riding bike", "happy", "exhilarated"], "input": {"head": "PersonX loves the experience", "relation": "xReact"}}
{"generation": "PersonX keeps PersonY around. Before that, you can use PersonX to get PersonY to", "references": ["PersonX asks if PersonY would like to hang out"], "input": {"head": "PersonX keeps PersonY around", "relation": "isAfter"}}
{"generation": "PersonX meets friends. PersonX is a very good friend, and she's a very", "references": ["social", "hopeful", "excited", "sociable", "friendly", "outgoing"], "input": {"head": "PersonX meets friends", "relation": "xAttr"}}
{"generation": "PersonX makes it PersonX's career. After that, he's a regular on the show", "references": ["PersonX opens an animal shelter"], "input": {"head": "PersonX makes it PersonX's career", "relation": "isBefore"}}
{"generation": "PersonX pulls PersonY's car. Before that, he pulls PersonX's car", "references": ["PersonX gets their towline out"], "input": {"head": "PersonX pulls PersonY's car", "relation": "isAfter"}}
{"generation": "PersonX looks sad. After, others will want to see her", "references": ["none"], "input": {"head": "PersonX looks sad", "relation": "oWant"}}
{"generation": "a black dress can be used for a white dress", "references": ["tie up the shoulder straps and use it as a bag for carrying produce", "hold up pants as a belt", "wear to a funeral", "wear as a mask", "hang on the windows as a blackout curtain", "Wear with boots", "advertise anti-dandruff shampoo", "have clothing on", "make a Halloween costume", "wear to look somber", "wear to the funeral", "dress appropriately", "Wear to funeral"], "input": {"head": "black dress", "relation": "ObjectUse"}}
{"generation": "PersonX brings PersonY news. Before that, he's been a bit of a jerk", "references": ["PersonX hears news"], "input": {"head": "PersonX brings PersonY news", "relation": "isAfter"}}
{"generation": "PersonX looks sad. The effect on PersonX will be similar to the effect on Person X", "references": ["turns eyes towards floor", "Gets comforted", "cries", "no effect", "receives comfort from others", "gets ignored"], "input": {"head": "PersonX looks sad", "relation": "xEffect"}}
{"generation": "PersonX gathers all the ingredients. PersonX will be able to use the ingredients to make a new item", "references": ["accomplished", "ready", "excited", "hungry", "prepared"], "input": {"head": "PersonX gathers all the ingredients", "relation": "xReact"}}
{"generation": "PersonX touches wood. The effect on PersonX will be similar to that of a light bulb", "references": ["gets dirty hands", "gets a splinter", "gets splinted into finger", "gets hurt", "is asked to leave the store", "avoids bad things happening to them"], "input": {"head": "PersonX touches wood", "relation": "xEffect"}}
{"generation": "PersonX wants to play outside. Before, PersonX needs to be able to play outside", "references": ["none"], "input": {"head": "PersonX wants to play outside", "relation": "xNeed"}}
{"generation": "PersonX whistles dixie. After that, he's a little more serious", "references": ["PersonX starts to sing dixie"], "input": {"head": "PersonX whistles dixie", "relation": "isBefore"}}
{"generation": "PersonX asks PersonY to speak. PersonX did this to PersonY, and PersonY said that she was", "references": ["person y to talk about something", "to hear his side of the story", "help in speaking"], "input": {"head": "PersonX asks PersonY to speak", "relation": "xIntent"}}
{"generation": "PersonX cuts swathes. PersonX will be able to use the same abilities as Person X,", "references": ["happy", "helpful", "satisfied"], "input": {"head": "PersonX cuts swathes", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person Y does not deserve it.", "PersonX doesn't know where PersonY's home is", "their mother won't let them.", "PersonX is just not looking hard enough.", "PersonY is hiding from PersonX.", "PersonY is not at home", "PersonY is in the bathroom, with the door closed."], "input": {"head": "PersonX finds PersonY at home", "relation": "HinderedBy"}}
{"generation": "an olive can be used for this recipe", "references": ["add to salad", "make decorations", "play marbles", "juggle", "add to pasta", "poison an evil monkey", "spread on toast", "set out for thanksgiving", "extract oil for cooking", "put in last"], "input": {"head": "olive", "relation": "ObjectUse"}}
{"generation": "PersonX forgets the milk. After, others will want to know what the milk is", "references": ["none"], "input": {"head": "PersonX forgets the milk", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is having trouble remembering things.", "Person X was diagnosed with Alzheimer's."], "input": {"head": "PersonX keeps PersonX's head", "relation": "HinderedBy"}}
{"generation": "PersonX tells ___ PersonY had a surprise. As a result, others feel that they are being treated unfairly", "references": ["betrayed", "surprised", "nervous", "excited"], "input": {"head": "PersonX tells ___ PersonY had a surprise", "relation": "oReact"}}
{"generation": "PersonX starts a band. After, others will want to join", "references": ["none", "to practice playing music", "to jam out together"], "input": {"head": "PersonX starts a band", "relation": "oWant"}}
{"generation": "PersonX blows bubbles. Before that, he's got a lot of fun", "references": ["PersonX buys bubbles"], "input": {"head": "PersonX blows bubbles", "relation": "isAfter"}}
{"generation": "PersonX meets the love of PersonX's life. PersonX will be the one who will be the one who will be", "references": ["happy", "in love", "enamored", "good about themselves"], "input": {"head": "PersonX meets the love of PersonX's life", "relation": "xReact"}}
{"generation": "PersonX doeth all ___ well. The effect on PersonX will be the same as the effect on PersonX", "references": ["Earns respect", "is in high demand", "Is given many responsibilties", "is applauded", "none"], "input": {"head": "PersonX doeth all ___ well", "relation": "xEffect"}}
{"generation": "PersonX sees PersonY graduate. The effect on others will be similar to that of a normal person", "references": ["Take pictures", "Receive diploma", "Person Y shakes the hand of Person X", "none", "Person Y sees Person X"], "input": {"head": "PersonX sees PersonY graduate", "relation": "oEffect"}}
{"generation": "PersonX changes PersonX's lives. The effect on others will be different", "references": ["REALISED", "none"], "input": {"head": "PersonX changes PersonX's lives", "relation": "oEffect"}}
{"generation": "PersonX has to go to a new school. PersonX did this to me", "references": ["to be near his parents.", "none"], "input": {"head": "PersonX has to go to a new school", "relation": "xIntent"}}
{"generation": "PersonX recalls ___ PersonY be made. The effect on others will be different", "references": ["is approached by PersonX", "is engaged in conversation by PersonX", "submits required papers", "finds paperwork", "none"], "input": {"head": "PersonX recalls ___ PersonY be made", "relation": "oEffect"}}
{"generation": "PersonX wraps PersonY's arm around PersonY. PersonX is then able to pull PersonY's arm away from", "references": ["friendly", "bold", "comforting", "playful"], "input": {"head": "PersonX wraps PersonY's arm around PersonY", "relation": "xAttr"}}
{"generation": "PersonX wears PersonY's boots. The effect on others will be similar to that of PersonX's boots", "references": ["is confused", "they need their boots", "gets angry", "have t buy new boots", "none"], "input": {"head": "PersonX wears PersonY's boots", "relation": "oEffect"}}
{"generation": "PersonX confronts PersonY's roommate. After, PersonX will want to know who the other person is", "references": ["get their way", "fight", "talk", "argue", "slam the door", "leave"], "input": {"head": "PersonX confronts PersonY's roommate", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's dad is in a foreign country", "PersonX's dad is dead.", "Their dad has been kidnapped.", "PersonX doesn't know their dad's name.", "PersonX doesn't know their dad's address.", "PersonX is lost in the woods"], "input": {"head": "PersonX finds PersonX's dad", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX was told by his girlfriend that she would never talk to him again", "no one is around to talk to", "PersonX is a mute and cannot speak", "PersonX has lost their voice", "PersonX has nobody to talk to", "PersonX didn't do anything wrong", "PersonX is being told by his mom that this is a terrible idea", "PersonX is afraid of getting into trouble", "PersonX was told by the cop that he will get arrested"], "input": {"head": "PersonX spills PersonX's guts", "relation": "HinderedBy"}}
{"generation": "PersonX tells PersonY's friend. PersonX is a member of the group, and PersonY is", "references": ["nosy", "remorseful", "helpful", "friendly", "talkative", "disloyal"], "input": {"head": "PersonX tells PersonY's friend", "relation": "xAttr"}}
{"generation": "PersonX feels refreshed. PersonX will be able to use the new features of the new app", "references": ["relaxed", "refreshed", "content", "satisfied"], "input": {"head": "PersonX feels refreshed", "relation": "xReact"}}
{"generation": "PersonX flies to PersonY. PersonX is the only person who can see PersonY", "references": ["nice", "compassionate", "adventourous", "friendly", "supportive"], "input": {"head": "PersonX flies to PersonY", "relation": "xAttr"}}
{"generation": "PersonX starts with a clean sheet. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX starts with a clean sheet", "relation": "oEffect"}}
{"generation": "PersonX goes down the drain. After, others will want to know what happened to him", "references": ["none"], "input": {"head": "PersonX goes down the drain", "relation": "oWant"}}
{"generation": "PersonX gives a speech. After that, he says that he's going to be a good", "references": ["PersonX receives an applause"], "input": {"head": "PersonX gives a speech", "relation": "isBefore"}}
{"generation": "PersonX sheds ___ on the nature. PersonX did this to me", "references": ["none", "to educate others"], "input": {"head": "PersonX sheds ___ on the nature", "relation": "xIntent"}}
{"generation": "PersonX works tirelessly. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX works tirelessly", "relation": "oEffect"}}
{"generation": "PersonX makes ___ quickly. PersonX will be able to use the same abilities as Person X,", "references": ["productive", "accomplished", "rapid", "efficient", "proud", "fast"], "input": {"head": "PersonX makes ___ quickly", "relation": "xReact"}}
{"generation": "PersonX gets PersonX's feet wet. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX gets PersonX's feet wet", "relation": "oWant"}}
{"generation": "PersonX announces PersonX's decision. Before that, he says that he's going to be a \"", "references": ["PersonX applies to four colleges and is accepted at all of them"], "input": {"head": "PersonX announces PersonX's decision", "relation": "isAfter"}}
{"generation": "PersonX wins the championship. PersonX will be the first person to win the championship", "references": ["triumphant", "accomplished", "courageous", "confident"], "input": {"head": "PersonX wins the championship", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too short.", "PersonY is missing.", "PersonX is too short to look at PersonY's eyes.", "Person X is blind.", "PersonY won't open their eyes.", "Person Y is not above Person X."], "input": {"head": "PersonX looks up into PersonY's eyes", "relation": "HinderedBy"}}
{"generation": "an apps can be used for a variety of purposes, including:\n\n\u2022", "references": ["check online banking accounts", "log into", "put harmful viruses on someone's phone", "edit photos on a phone", "play games on their phone", "Watch videos", "track usage", "hide adware", "Play games", "play games", "track people"], "input": {"head": "apps", "relation": "ObjectUse"}}
{"generation": "PersonX accidentally poured. After, PersonX will want to know what happened to the other person", "references": ["to apologise", "to be more attentive", "get paper towel", "wipe it out", "to clean clothes", "to clean the mess"], "input": {"head": "PersonX accidentally poured", "relation": "xWant"}}
{"generation": "PersonX always fought. After that, he was a bit of a jerk", "references": ["PersonX wins the boxing championship"], "input": {"head": "PersonX always fought", "relation": "isBefore"}}
{"generation": "You are likely to find a choice of direction in a given area", "references": ["corner of two streets"], "input": {"head": "choice of direction", "relation": "AtLocation"}}
{"generation": "PersonX always fought. Before that, he was a very good fighter", "references": ["PersonX trains as a boxer"], "input": {"head": "PersonX always fought", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["he does not have the money for it", "PersonX has no transportation.", "PersonX has no money for admission.", "they will not let him in"], "input": {"head": "PersonX is to the rodeo", "relation": "HinderedBy"}}
{"generation": "PersonX gets there early. After, PersonX will want to get to the top of the tower and get to", "references": ["to scope out the place", "to get a good seat"], "input": {"head": "PersonX gets there early", "relation": "xWant"}}
{"generation": "PersonX gets PersonY's driver's license. After, others will want to know who the driver is", "references": ["none"], "input": {"head": "PersonX gets PersonY's driver 's license", "relation": "oWant"}}
{"generation": "tofu is a very good example of this", "references": ["made from soybeans", "used in soups", "very nourishing"], "input": {"head": "tofu", "relation": "HasProperty"}}
{"generation": "PersonX thinks a lot. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX thinks a lot", "relation": "oReact"}}
{"generation": "PersonX shrugs PersonY's shoulders. PersonX will be the one to get the message", "references": ["unsure"], "input": {"head": "PersonX shrugs PersonY's shoulders", "relation": "xReact"}}
{"generation": "PersonX falls ill. The effect on PersonX will be permanent", "references": ["loses weight", "stays at home", "gets attention and help of family", "gets admitted in a hospital"], "input": {"head": "PersonX falls ill", "relation": "xEffect"}}
{"generation": "PersonX studies for an exam. Before, PersonX needs to be able to read and write", "references": ["to have all the study material", "to know when the exam is", "to read the textbook", "to have all the material to study", "to open his textbook", "to be alone"], "input": {"head": "PersonX studies for an exam", "relation": "xNeed"}}
{"generation": "a comfort can be used for a long time", "references": ["cause boredom"], "input": {"head": "comfort", "relation": "ObjectUse"}}
{"generation": "PersonX leaves the ___ alone. As a result, others feel that they are being punished for their actions", "references": ["none", "free"], "input": {"head": "PersonX leaves the ___ alone", "relation": "oReact"}}
{"generation": "PersonX meets someone. PersonX is a character in the game", "references": ["social", "curious", "excited", "friendly", "interested", "caring"], "input": {"head": "PersonX meets someone", "relation": "xAttr"}}
{"generation": "PersonX moves the car. Before, PersonX needs to be able to move the car", "references": ["choose a direction", "to have a car", "steer the car", "to go to the road", "choose a another parking spot", "to shift their weight on the car", "turn on the ignition", "to have parked it"], "input": {"head": "PersonX moves the car", "relation": "xNeed"}}
{"generation": "You are likely to find a goalie in a position where you can't get a shot off", "references": ["hockey game", "soccer game"], "input": {"head": "goalie", "relation": "AtLocation"}}
{"generation": "PersonX finds a good one. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX finds a good one", "relation": "oWant"}}
{"generation": "PersonX buys PersonX's wife ___. PersonX is a member of the \"PersonX family\" and", "references": ["rich", "generous", "dumb", "loving", "caring"], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "xAttr"}}
{"generation": "PersonX owes PersonY. As a result, others feel that PersonY is a better fit for PersonX", "references": ["anxious", "helpful"], "input": {"head": "PersonX owes PersonY", "relation": "oReact"}}
{"generation": "PersonX asks PersonY to bring. PersonX will be able to bring the person to the room", "references": ["happy", "thankful"], "input": {"head": "PersonX asks PersonY to bring", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have a can opener.", "The lid is too tight.", "PersonX isn't strong enough.", "The kid swiped it away.", "They're too weak.", "The attacker broke PersonX's hand.", "The lid is frozen in place.", "There is pressure built up that makes it dangerous.", "The wife covered it in jelly."], "input": {"head": "PersonX opens the lid", "relation": "HinderedBy"}}
{"generation": "PersonX looks at PersonY like that. PersonX did this to me", "references": ["to communicate a message to the person", "to see the person."], "input": {"head": "PersonX looks at PersonY like that", "relation": "xIntent"}}
{"generation": "PersonX hands PersonY a glass. PersonX will be able to see PersonY's face", "references": ["calm", "thankful", "hospitable"], "input": {"head": "PersonX hands PersonY a glass", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's friends ignore the jokes", "PersonX's teacher put him in detention", "Personx is unavailable now.", "PersonX forgot most of the jokes.", "Person X is in a serious business meeting.", "PersonX must be quiet in class.", "Person X passed out and is in the hospital unconsious.", "PersonX has inappropriate jokes."], "input": {"head": "PersonX tells PersonX's jokes", "relation": "HinderedBy"}}
{"generation": "PersonX peers inside. After, PersonX will want to know if you're a member of the group", "references": ["to watch a movie", "to find his mom", "to look at everything", "leave", "to ask the price of the house", "see what is in there", "to go inside"], "input": {"head": "PersonX peers inside", "relation": "xWant"}}
{"generation": "PersonX asks PersonY to speak. Before that, PersonY asks PersonX to speak", "references": ["PersonX is at a wedding", "PersonX sees PersonY with their hand in the air", "PersonX plugs in the microphone"], "input": {"head": "PersonX asks PersonY to speak", "relation": "isAfter"}}
{"generation": "a medical tools can be used for the treatment of a wide range of conditions", "references": ["work on car", "fight off an attacker", "carve a pumpkin", "clean under one's finger nails.", "operate on a toy doll", "help change a tire.", "make surgical incisions", "help diagnose patients", "treat sick people", "operate on patients", "help patients"], "input": {"head": "medical tools", "relation": "ObjectUse"}}
{"generation": "PersonX pulls open the ___. PersonX did this to me", "references": ["to help them get inside", "to watch something interesting"], "input": {"head": "PersonX pulls open the ___", "relation": "xIntent"}}
{"generation": "PersonX works really well. The effect on others will be very noticeable", "references": ["Gets a good job done", "Promotes X", "none"], "input": {"head": "PersonX works really well", "relation": "oEffect"}}
{"generation": "PersonX drops money off at home. Before that, he's a regular at the local bar", "references": ["PersonX gets their paycheck"], "input": {"head": "PersonX drops money off at home", "relation": "isAfter"}}
{"generation": "While hungry, you would have to eat a lot of food to survive", "references": ["is find food to eat", "is eat", "is finding to eat"], "input": {"head": "hungry", "relation": "HasSubEvent"}}
{"generation": "stonemason can be found at http://www", "references": ["cut stone"], "input": {"head": "stonemason", "relation": "CapableOf"}}
{"generation": "PersonX becomes ill. PersonX is then sent to the hospital", "references": ["unhealthy", "vulnerable", "unwell", "in pain", "exhausted", "irresponsible"], "input": {"head": "PersonX becomes ill", "relation": "xAttr"}}
{"generation": "PersonX follows the ___ far is filled by the ___, and the ___ is filled by the", "references": ["ball", "bird", "car", "train", "puppy", "dog", "ambulance", "bus", "bike", "cat"], "input": {"head": "PersonX follows the ___ far", "relation": "isFilledBy"}}
{"generation": "PersonX visits PersonY's daughter. After, PersonX will want to talk to PersonY about the situation", "references": ["Engage in leisure activities with PersonY's daughter", "Have an enjoyable social call", "Catch up on old times", "to go home", "to visit with persony"], "input": {"head": "PersonX visits PersonY's daughter", "relation": "xWant"}}
{"generation": "PersonX starts to worry. Before, PersonX needs to be able to talk to her", "references": ["to call friends", "none", "to watch live news"], "input": {"head": "PersonX starts to worry", "relation": "xNeed"}}
{"generation": "PersonX breaks PersonX's lance. Before that, he's got a sword", "references": ["PersonX practices fencing"], "input": {"head": "PersonX breaks PersonX's lance", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's mom does not buy his fake illness.", "PersonX has an incurable illness.", "PersonX's mom said he has no symptoms.", "PersonX's doctor told him he is in good shape.", "PersonX doesn't know how to fake having a fever", "PersonX is sick.", "PersonX isn't a good liar"], "input": {"head": "PersonX does n't feel well", "relation": "HinderedBy"}}
{"generation": "PersonX loves football. Before, PersonX needs to be a football player", "references": ["to buy a ball", "none", "to watch TV"], "input": {"head": "PersonX loves football", "relation": "xNeed"}}
{"generation": "PersonX preheats the oven. The effect on PersonX will be similar to that of a regular oven", "references": ["to have it fun", "gets change", "good", "needs to read the other instructions", "to be great", "is ready to cook"], "input": {"head": "PersonX preheats the oven", "relation": "xEffect"}}
{"generation": "PersonX gathers the ingredients. After, others will want to know what the ingredients are", "references": ["none"], "input": {"head": "PersonX gathers the ingredients", "relation": "oWant"}}
{"generation": "PersonX finds ___ later. The effect on PersonX will be similar to the effect on Person X", "references": ["has his phone back", "takes a break", "receives a phone call", "stops searching"], "input": {"head": "PersonX finds ___ later", "relation": "xEffect"}}
{"generation": "PersonX blows up PersonY's phone. The effect on PersonX will be similar to that of PersonY's", "references": ["gets yelled at", "they get beat up", "becomes spited", "curses", "Has anxiety", "paces the room", "gets scolded", "they get arrested"], "input": {"head": "PersonX blows up PersonY's phone", "relation": "xEffect"}}
{"generation": "PersonX sees ___ on the street. The effect on PersonX will be similar to the effect on Person X", "references": ["wonder what's it's doing there", "watches it for a while", "spares some change", "takes a picture"], "input": {"head": "PersonX sees ___ on the street", "relation": "xEffect"}}
{"generation": "PersonX scars ___ away. After, others will want to know what happened to him", "references": ["sad", "to be enjoyed", "to be free", "cries"], "input": {"head": "PersonX scars ___ away", "relation": "oWant"}}
{"generation": "PersonX hurts like hell. As a result, others feel like they're being punished for their actions", "references": ["none"], "input": {"head": "PersonX hurts like hell", "relation": "oReact"}}
{"generation": "PersonX shares the ___ equally. PersonX is a member of the \"I\" group, and", "references": ["generous", "giving", "thoughtful", "fair", "just"], "input": {"head": "PersonX shares the ___ equally", "relation": "xAttr"}}
{"generation": "PersonX gets hurt. Before that, he's a little bit more of a jerk", "references": ["PersonX attempts bungy jumping"], "input": {"head": "PersonX gets hurt", "relation": "isAfter"}}
{"generation": "PersonX works really well. PersonX did this to me, and I'm glad I did", "references": ["to be a successful employee.", "complete the job"], "input": {"head": "PersonX works really well", "relation": "xIntent"}}
{"generation": "PersonX throws ___ at the wall. PersonX did this to the wall", "references": ["to release frustration.", "to express anger", "to express frustration", "to be upset", "to show anger."], "input": {"head": "PersonX throws ___ at the wall", "relation": "xIntent"}}
{"generation": "PersonX wants to come. PersonX is a very good person", "references": ["Outgoing", "Sociable", "desperate", "lonely", "needy", "eager", "friendly"], "input": {"head": "PersonX wants to come", "relation": "xAttr"}}
{"generation": "PersonX draws PersonY conclusion. PersonX will be the one who decides who gets to be the next", "references": ["rewarded"], "input": {"head": "PersonX draws PersonY conclusion", "relation": "xReact"}}
{"generation": "PersonX sifts out ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["accepts the good ones", "to go program", "none", "discards the poor ones", "to sifts to cell"], "input": {"head": "PersonX sifts out ___", "relation": "xEffect"}}
{"generation": "PersonX uses the restroom. Before, PersonX needs to use the restroom", "references": ["to open the door", "open the door", "to go to the restroom", "go to the restroom", "to find where the bathroom is.", "to sit down", "to walk inside the bathroom.", "go inside"], "input": {"head": "PersonX uses the restroom", "relation": "xNeed"}}
{"generation": "PersonX hits PersonY hard. Before that, he's a very good player", "references": ["PersonX raises hand"], "input": {"head": "PersonX hits PersonY hard", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no goals that PersonX is trying to achieve.", "Their girlfriend dumped them before the moment.", "PersonX is a pessimist.", "PersonX lacks courage.", "The waiter interrupted at exactly the wrong time", "PersonX has no drama in their life."], "input": {"head": "PersonX culminates into a magically climatic moment", "relation": "HinderedBy"}}
{"generation": "PersonX has PersonX's fingers in many pies. PersonX is a very good person, and I think he's", "references": ["busy", "greedy", "busybody", "hardworking", "noisy", "unhelpful", "selfish"], "input": {"head": "PersonX has PersonX's fingers in many pies", "relation": "xAttr"}}
{"generation": "PersonX uses PersonX's coupons. After, others will want to buy them", "references": ["to thank PersonX", "none", "to wonder how PersonX saved all that money"], "input": {"head": "PersonX uses PersonX's coupons", "relation": "oWant"}}
{"generation": "While taking stand, you would have to ask yourself, \"What is the point", "references": ["firm", "tell truth", "make everyone look at", "state name", "stand up", "leave little note", "testimony interrupted", "testifying", "sober and righteous feeling", "have to pay for", "being sworn in", "give testimony", "injury", "lie", "testify in courtroom trial", "have strong opinion", "take fifth amendment", "talk", "sway jury", "answer questions", "change world", "swear to tell truth", "would speak", "give evidence", "swear on bible", "testify", "get cross examined", "runaway", "swear oath", "get sworn in", "might testify", "swear"], "input": {"head": "take stand", "relation": "HasSubEvent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["This is the last year of the event.", "PersonX's coach cut him from the team after the season ended.", "There will be no more chances next year", "This is the last year before the thing they want to try ends forever.", "PersonX's doctor told him he will die before then.", "PersonX will no longer be eligible.", "PersonX will be too old next year", "PersonX is moving to another place next year where they won't be able to try."], "input": {"head": "PersonX tries again next year", "relation": "HinderedBy"}}
{"generation": "PersonX begs PersonY's parents for one. After, PersonX will want to know who the other person is", "references": ["to get a dog", "get dog food"], "input": {"head": "PersonX begs PersonY's parents for one", "relation": "xWant"}}
{"generation": "PersonX finds PersonY another chair. Before that, he finds a chair with a chair with a chair", "references": ["PersonX invites PersonY to video games"], "input": {"head": "PersonX finds PersonY another chair", "relation": "isAfter"}}
{"generation": "PersonX decides to read a book. As a result, others feel that they are being manipulated by the book's author", "references": ["none"], "input": {"head": "PersonX decides to read a book", "relation": "oReact"}}
{"generation": "Sometimes argument causes the user to be redirected to the wrong page", "references": ["violence"], "input": {"head": "argument", "relation": "Causes"}}
{"generation": "shyster can be found in the following locations:\n\nThe", "references": ["sell broken goods"], "input": {"head": "shyster", "relation": "CapableOf"}}
{"generation": "PersonX wipes the ___ from PersonX's forehead. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX wipes the ___ from PersonX's forehead", "relation": "oWant"}}
{"generation": "You are likely to find a train or homeless in a city that has a lot of homeless people", "references": ["train station"], "input": {"head": "train or homeless", "relation": "AtLocation"}}
{"generation": "PersonX walks to the car. PersonX did this to her", "references": ["to get somewhere", "to drive home", "to drive"], "input": {"head": "PersonX walks to the car", "relation": "xIntent"}}
{"generation": "play chess. Before, PersonX needs to be able to play chess with a friend", "references": ["try to capture queen", "have oppenant", "learn game", "learn how", "set up pieces", "buy set", "arrange pieces", "get chess board", "learn rules", "find chess partner", "find partner to play with", "join chess team", "get chess set", "find else to play against", "have set", "buying chess", "know rules", "get partner", "find partner", "have chess board", "get chessboard", "learn chess", "learn way pieces move", "find opponent", "learn to play chess", "find to play with"], "input": {"head": "play chess", "relation": "xNeed"}}
{"generation": "PersonX cries tears of joy. The effect on others will be felt", "references": ["none"], "input": {"head": "PersonX cries tears of joy", "relation": "oEffect"}}
{"generation": "PersonX runs some errands. After that, he's going to have to deal with the rest", "references": ["PersonX comes home and relax after finishing with errands"], "input": {"head": "PersonX runs some errands", "relation": "isBefore"}}
{"generation": "write term paper. Before, PersonX needs to be able to write a paper that is not a", "references": ["go to school and buy paper", "do", "choose subject", "spend 10 to buy one", "know subject", "well versed on subject", "use computer", "study and outline", "read writing term papers", "leave plenty of time", "decide on subject", "make outline first", "know topic"], "input": {"head": "write term paper", "relation": "xNeed"}}
{"generation": "PersonX shows PersonX's mother. PersonX is a very intelligent and intelligent person", "references": ["friendly", "accommodating", "obliging", "caring"], "input": {"head": "PersonX shows PersonX's mother", "relation": "xAttr"}}
{"generation": "PersonX packs heat. Before, PersonX needs to be able to use its own heat source to heat", "references": ["to apply for a gun permit", "to pass background check", "to look at guns", "to buy a gun", "none"], "input": {"head": "PersonX packs heat", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has too many things to get done.", "PersonX has a mandatory meeting.", "PersonX has work deadlines to meet", "PersonX is being evaluated by their boss today.", "PersonX has reports due today and can't blow them off.", "PersonY is not answering PersonX's phone calls"], "input": {"head": "PersonX wastes PersonX's day", "relation": "HinderedBy"}}
{"generation": "PersonX gives PersonY a note. After, PersonX will want to know if PersonY is a member of the group", "references": ["to read a response", "to hear PersonY's response", "to smile at PersonY", "to talk to PersonY about the note", "to await a response", "to write another note"], "input": {"head": "PersonX gives PersonY a note", "relation": "xWant"}}
{"generation": "PersonX passionately rucked PersonY. After, others will want to know who you are", "references": ["to feel comfortable.", "to accept his love", "to marry him", "to feel loved.", "none"], "input": {"head": "PersonX passionately rucked PersonY", "relation": "oWant"}}
{"generation": "PersonX pulls PersonY to safety. Before that, he's got to get the hell out of here", "references": ["PersonX sees PersonY drowning"], "input": {"head": "PersonX pulls PersonY to safety", "relation": "isAfter"}}
{"generation": "PersonX wins every ___. Before, PersonX needs to win every ___", "references": ["to work hard", "to pass the bar", "to study very hard", "to practice their skills", "to enter the contest", "to practice everyday", "to have discipline"], "input": {"head": "PersonX wins every ___", "relation": "xNeed"}}
{"generation": "PersonX has a garage sale. Before that, he was a member of the \"Gangster", "references": ["PersonX setup a garage sale"], "input": {"head": "PersonX has a garage sale", "relation": "isAfter"}}
{"generation": "a pain pill can be used for pain relief", "references": ["calm down", "fix headache", "keep from going insane", "crush up and get high", "sell to someone", "cure pain", "get a good sleep", "clear up hangover", "get rid of pain", "help with the pain", "zone out for the day", "reduce aches"], "input": {"head": "pain pill", "relation": "ObjectUse"}}
{"generation": "PersonX pulls the wool over PersonY's eyes. Before that, he's just a normal person", "references": ["PersonX wants to make the sale"], "input": {"head": "PersonX pulls the wool over PersonY's eyes", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY wont listen to PersonX.", "PersonX is too embarrassed to ask.", "There are too many people around PersonY for PersonX to ask what happened.", "PersonX is grounded from PersonY.", "PersonX knows it is rude to ask what happened and does not want to do that.", "PersonY is asleep.", "PersonX does not have PersonY's phone number to call and ask them what happened."], "input": {"head": "PersonX asks PersonY what happened", "relation": "HinderedBy"}}
{"generation": "PersonX congratulates PersonY. As a result, others feel the same way", "references": ["happy", "proud"], "input": {"head": "PersonX congratulates PersonY", "relation": "oReact"}}
{"generation": "PersonX finds every ___. As a result, others feel that the ___", "references": ["none"], "input": {"head": "PersonX finds every ___", "relation": "oReact"}}
{"generation": "PersonX is short on money. Before, PersonX needs to be able to buy a car, and then he", "references": ["none", "incapable", "need money"], "input": {"head": "PersonX is short on money", "relation": "xNeed"}}
{"generation": "PersonX finds a good spot. The effect on PersonX will be similar to that of a normal person", "references": ["is able to relax", "falls asleep", "gains a spot", "sighs in contentment"], "input": {"head": "PersonX finds a good spot", "relation": "xEffect"}}
{"generation": "You are likely to find a spot light in an area where you have a lot of light", "references": ["opera"], "input": {"head": "spot light", "relation": "AtLocation"}}
{"generation": "PersonX takes PersonY in PersonY's arms. After that, PersonX takes PersonY in PersonX's arms", "references": ["PersonX onx tells PersonY he loves her"], "input": {"head": "PersonX takes PersonY in PersonY's arms", "relation": "isBefore"}}
{"generation": "PersonX makes a turn. As a result, others feel the same way", "references": ["excited that personx is coming home", "none"], "input": {"head": "PersonX makes a turn", "relation": "oReact"}}
{"generation": "PersonX becomes very frustrated. After that, he tries to convince her to leave him alone", "references": ["PersonX eats a donut"], "input": {"head": "PersonX becomes very frustrated", "relation": "isBefore"}}
{"generation": "PersonX makes bread. After that, he makes a sandwich", "references": ["PersonX eats their yummy bread", "PersonY and PersonX eat the fresh bread", "PersonX slices the bread"], "input": {"head": "PersonX makes bread", "relation": "isBefore"}}
{"generation": "PersonX pardons my french. After that, I'm going to be a little more relaxed", "references": ["PersonX turns red of embarrassment", "PersonX is speaking french", "PersonX keeps talking"], "input": {"head": "PersonX pardons my french", "relation": "isBefore"}}
{"generation": "PersonX saves PersonX's breath. PersonX is now able to use the same abilities as PersonX", "references": ["strong", "lucky", "a dentist", "courteous", "disciplined", "non-reactive"], "input": {"head": "PersonX saves PersonX's breath", "relation": "xAttr"}}
{"generation": "PersonX becomes impatient. After that, he starts to get angry", "references": ["PersonX finally sees the doctor"], "input": {"head": "PersonX becomes impatient", "relation": "isBefore"}}
{"generation": "PersonX watches ___ online. The effect on PersonX will be the same as the effect on PersonX", "references": ["none", "has a good time", "consumes the time"], "input": {"head": "PersonX watches ___ online", "relation": "xEffect"}}
{"generation": "PersonX asks PersonY to sign. After that, PersonY asks PersonX to sign", "references": ["PersonX gathers more signatures"], "input": {"head": "PersonX asks PersonY to sign", "relation": "isBefore"}}
{"generation": "PersonX makes the team though. The effect on PersonX will be similar to the effect of the \"D\" in", "references": ["gets praised", "becomes grateful toward teamates", "smiles", "spends most of the time on the bench", "gets congratulated", "gets complaints"], "input": {"head": "PersonX makes the team though", "relation": "xEffect"}}
{"generation": "PersonX takes it outside. After, others will want to see what she's doing", "references": ["none"], "input": {"head": "PersonX takes it outside", "relation": "oWant"}}
{"generation": "PersonX would like it. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX would like it", "relation": "oWant"}}
{"generation": "PersonX puts it in PersonX's purse. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "oWant"}}
{"generation": "PersonX visits the city. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX visits the city", "relation": "oEffect"}}
{"generation": "PersonX studies extra. PersonX will be able to use the same abilities as the player,", "references": ["happy,good and satisfied", "smart"], "input": {"head": "PersonX studies extra", "relation": "xReact"}}
{"generation": "PersonX gets dressed for school. As a result, others feel that he is a bad person", "references": ["none"], "input": {"head": "PersonX gets dressed for school", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is on a business trip out of town, and can't take calls.", "PersonX's phone was stolen."], "input": {"head": "PersonX tells PersonY to make", "relation": "HinderedBy"}}
{"generation": "PersonX dies peacefully. Before that, he was a member of the group called the \"", "references": ["PersonX turns 98 year old"], "input": {"head": "PersonX dies peacefully", "relation": "isAfter"}}
{"generation": "PersonX talks on PersonX's phone. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX talks on PersonX's phone", "relation": "oEffect"}}
{"generation": "PersonX doesn't want to waste it. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX does n't want to waste it", "relation": "oReact"}}
{"generation": "PersonX visits the zoo. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX visits the zoo", "relation": "oEffect"}}
{"generation": "PersonX lays on PersonY's bed. After, PersonX will want to talk to PersonY", "references": ["get up", "to rest", "to sleep", "rest"], "input": {"head": "PersonX lays on PersonY's bed", "relation": "xWant"}}
{"generation": "PersonX draws ___ to the need. The effect on others will be different", "references": ["see's what is needed", "none", "decides what should be done"], "input": {"head": "PersonX draws ___ to the need", "relation": "oEffect"}}
{"generation": "PersonX drives to the office. PersonX did this to her", "references": ["to go to work"], "input": {"head": "PersonX drives to the office", "relation": "xIntent"}}
{"generation": "an ice-pack can be used for a variety of purposes", "references": ["put on head", "calm a toothache", "put on a swollen knee", "keep the beers cold.", "crush up for a drink", "cool down a beer", "put on a sore muscle", "hold Ziploc of frozen water", "keep lunch cold", "keep cool on a hot day", "break up to put in drink."], "input": {"head": "ice-pack", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Their bother borrowed the boots.", "They lost their boots.", "They don't own any boots.", "Their mother hid them.", "The boots are too small for PersonX.", "The boots aren't office appropriate", "Someone stole the boots.", "The boots are too small"], "input": {"head": "PersonX wears PersonX's boots", "relation": "HinderedBy"}}
{"generation": "a chiffonier can be used for a variety of purposes, including:\n\n\u2022", "references": ["gathering long hair into bun", "storing clothes"], "input": {"head": "chiffonier", "relation": "ObjectUse"}}
{"generation": "PersonX asks PersonY for money. As a result, others feel that PersonY is a scammer", "references": ["happy and satisfied", "broke", "helpful"], "input": {"head": "PersonX asks PersonY for money", "relation": "oReact"}}
{"generation": "PersonX has a long way to go. After, PersonX will want to know what you're doing, and you'll want", "references": ["to reach the end", "to find purpose", "to ask help someone", "to reach home", "to find direction", "to meet people", "to keep going"], "input": {"head": "PersonX has a long way to go", "relation": "xWant"}}
{"generation": "PersonX graduates college. After that, he's a full-time student at the University", "references": ["PersonX is proud of their degree"], "input": {"head": "PersonX graduates college", "relation": "isBefore"}}
{"generation": "PersonX wins the bet. PersonX will be the winner of the bet", "references": ["surprised", "lucky", "happy", "excited", "vindicated"], "input": {"head": "PersonX wins the bet", "relation": "xReact"}}
{"generation": "PersonX stands on PersonX's head. PersonX will be the one who will be the one who will be", "references": ["amusing", "accomplished", "proud", "self-satisfied"], "input": {"head": "PersonX stands on PersonX's head", "relation": "xReact"}}
{"generation": "PersonX distributes among PersonY. PersonX will be the only PersonY that can be created", "references": ["like they are giving something to them"], "input": {"head": "PersonX distributes among PersonY", "relation": "xReact"}}
{"generation": "PersonX coachs PersonY. After, others will want to know who is the best player in the world", "references": ["to practice what they learned", "thank PersonX", "perform better", "be great", "work hard", "to become better at a skill"], "input": {"head": "PersonX coachs PersonY", "relation": "oWant"}}
{"generation": "PersonX burns ___ badly. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX burns ___ badly", "relation": "xIntent"}}
{"generation": "PersonX kisses PersonY gently. Before, PersonX needs to be careful not to get too close to PersonY", "references": ["to express love to PersonY", "to get close to PersonY", "to be with PersonY", "to grasp onto Persony", "to show affection", "to approach PersonY"], "input": {"head": "PersonX kisses PersonY gently", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have any money.", "It is impossible to get everything.", "PersonX has nowhere to put it all.", "PersonX's hands are full.", "PersonX's kid is sick and needs to go home.", "PersonX can't afford it."], "input": {"head": "PersonX gets everything", "relation": "HinderedBy"}}
{"generation": "PersonX looks like crap. After that, he's just a normal guy", "references": ["PersonX tried to conceal her looks"], "input": {"head": "PersonX looks like crap", "relation": "isBefore"}}
{"generation": "PersonX provides ___ to the public. After, PersonX will want to know if you are a member of the public", "references": ["to be president", "to join politics", "to work for the community", "to help community"], "input": {"head": "PersonX provides ___ to the public", "relation": "xWant"}}
{"generation": "PersonX hides under the covers. PersonX is a character who is a member of the X-", "references": ["cowardly", "fearful", "timid", "scared", "weak", "tired"], "input": {"head": "PersonX hides under the covers", "relation": "xAttr"}}
{"generation": "a family contains a large number of children", "references": ["aunt", "brother", "cousin", "grandfather", "neice", "genus", "uncle", "nephew", "grandmother", "relatives", "mother in law", "father in law", "everybody", "grandma", "child", "every grandfather"], "input": {"head": "family", "relation": "MadeUpOf"}}
{"generation": "PersonX eats ___ for weeks is filled by a lot of people", "references": ["healthy food", "ramen", "apples", "bread", "crackers", "bananas", "soup", "take out", "oranges", "ice cream", "junk food", "cookies", "salads"], "input": {"head": "PersonX eats ___ for weeks", "relation": "isFilledBy"}}
{"generation": "PersonX wipes PersonY's hands. As a result, others feel the same way", "references": ["none", "clean"], "input": {"head": "PersonX wipes PersonY's hands", "relation": "oReact"}}
{"generation": "PersonX lives next door. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX lives next door", "relation": "oReact"}}
{"generation": "PersonX loves sweets. After, others will want to eat them", "references": ["to ask if PersonX wants to buy anything else", "to sell PersonX some sweets", "none"], "input": {"head": "PersonX loves sweets", "relation": "oWant"}}
{"generation": "PersonX unbuckles PersonY's belt. PersonX did this to PersonY", "references": ["to take off their pants", "to undress"], "input": {"head": "PersonX unbuckles PersonY's belt", "relation": "xIntent"}}
{"generation": "PersonX loses PersonX's sense. After, PersonX will want to kill PersonX", "references": ["to go crazy", "Make new sense.", "Find his sense.", "to do something reckless"], "input": {"head": "PersonX loses PersonX's sense", "relation": "xWant"}}
{"generation": "PersonX is camping in the woods. Before that, he's been playing with a friend of his,", "references": ["PersonX buys a tent"], "input": {"head": "PersonX is camping in the woods", "relation": "isAfter"}}
{"generation": "PersonX goes blue. Before that, he's a little bit more of a jerk", "references": ["PersonX chokes on the candy"], "input": {"head": "PersonX goes blue", "relation": "isAfter"}}
{"generation": "PersonX gives PersonY a note. After that, PersonX gives PersonY a note", "references": ["PersonX waits for PersonY to respond"], "input": {"head": "PersonX gives PersonY a note", "relation": "isBefore"}}
{"generation": "PersonX sits down next to PersonY. PersonX will be the one who will be the one who will be", "references": ["happy", "nervous"], "input": {"head": "PersonX sits down next to PersonY", "relation": "xReact"}}
{"generation": "PersonX accidentally poured. Before, PersonX needs to be able to use his powers to get to the", "references": ["to be drunk", "brew coffee", "make juice", "none", "to have wine mug"], "input": {"head": "PersonX accidentally poured", "relation": "xNeed"}}
{"generation": "PersonX leans back in PersonY's chair. The effect on PersonX will be similar to that of the effect on PersonY", "references": ["gets yelled at", "gets interrupted", "none"], "input": {"head": "PersonX leans back in PersonY's chair", "relation": "xEffect"}}
{"generation": "PersonX finds another way. After that, he's going to have to find a way to", "references": ["PersonX didn't have to wait for the train"], "input": {"head": "PersonX finds another way", "relation": "isBefore"}}
{"generation": "PersonX quits ___ for good. PersonX is a good person", "references": ["Impatient", "determined", "Decisive", "Not persistent", "disgusted"], "input": {"head": "PersonX quits ___ for good", "relation": "xAttr"}}
{"generation": "PersonX thinks a lot. PersonX did this to me", "references": ["to become a philosopher", "to find ways to prosperity", "to find the purpose of his existance"], "input": {"head": "PersonX thinks a lot", "relation": "xIntent"}}
{"generation": "PersonX gives PersonY relief. As a result, others feel the same way", "references": ["pleased", "thankful", "grateful"], "input": {"head": "PersonX gives PersonY relief", "relation": "oReact"}}
{"generation": "PersonX falls ill. Before that, he was a member of the team that won the", "references": ["PersonX had a shower", "PersonX walks outside in the cold without a jacket", "PersonX didn't wash hands"], "input": {"head": "PersonX falls ill", "relation": "isAfter"}}
{"generation": "a letter from old friend can be used for a new one", "references": ["make happy"], "input": {"head": "letter from old friend", "relation": "ObjectUse"}}
{"generation": "PersonX takes PersonY on a hike. The effect on others will be different", "references": ["dies", "has a friend", "goes with someone", "gets injured", "gets exercise", "sees new things"], "input": {"head": "PersonX takes PersonY on a hike", "relation": "oEffect"}}
{"generation": "PersonX puts PersonY together. After, others will want to know who is the best person to be with", "references": ["to keep playing with their dad", "to try to put Mr. Potato head together like their dad"], "input": {"head": "PersonX puts PersonY together", "relation": "oWant"}}
{"generation": "PersonX throws PersonY. After, others will want to know what's going on", "references": ["Stand up", "see a doctor", "yell at X", "Punch someone", "to get medical attention", "to attack PersonX"], "input": {"head": "PersonX throws PersonY", "relation": "oWant"}}
{"generation": "PersonX flies across the room. After, PersonX will want to talk to the other two", "references": ["to catch someone before they leave", "to check his invention", "to stop the vase from falling", "to keep flying", "to stop moving", "to check the ceiling"], "input": {"head": "PersonX flies across the room", "relation": "xWant"}}
{"generation": "PersonX sees PersonX's crush PersonY. The effect on PersonX will be similar to that of PersonX's crush", "references": ["sweats", "becomes aroused", "face flushes", "nervous", "gets jittery", "heart rate increases"], "input": {"head": "PersonX sees PersonX's crush PersonY", "relation": "xEffect"}}
{"generation": "PersonX watches intently. After, PersonX will want to see the current position of the cursor", "references": ["to learn", "call the police", "to investigate", "to find out what happened", "chase after the thing they are watching", "to stay hidden so that they are not noticed", "take note of actions"], "input": {"head": "PersonX watches intently", "relation": "xWant"}}
{"generation": "PersonX hears the end of ___. After, PersonX will want to know what the next step is", "references": ["Stop listening.", "Turn off something.", "to ask a question", "to leave"], "input": {"head": "PersonX hears the end of ___", "relation": "xWant"}}
{"generation": "PersonX looks different. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX looks different", "relation": "oWant"}}
{"generation": "PersonX prevents PersonY from coming. The effect on PersonX will be applied to PersonY", "references": ["continues to party", "none", "blocks their number"], "input": {"head": "PersonX prevents PersonY from coming", "relation": "xEffect"}}
{"generation": "PersonX works really hard. PersonX did this to me", "references": ["to good", "to be dependable", "to be hardworking", "none"], "input": {"head": "PersonX works really hard", "relation": "xIntent"}}
{"generation": "Sometimes fear causes you to be afraid", "references": ["trembling"], "input": {"head": "fear", "relation": "Causes"}}
{"generation": "PersonX knows much about PersonY. After that, he's a bit more of a mystery", "references": ["PersonX sends a friend request to PersonY", "PersonX writes a book report on PersonY"], "input": {"head": "PersonX knows much about PersonY", "relation": "isBefore"}}
{"generation": "PersonX makes PersonY well. PersonX will be able to make PersonY more useful", "references": ["good", "satisfied to help", "helpful"], "input": {"head": "PersonX makes PersonY well", "relation": "xReact"}}
{"generation": "PersonX needs a bath. PersonX will be in the bath", "references": ["self conscious", "completely refreshed and ready to relax"], "input": {"head": "PersonX needs a bath", "relation": "xReact"}}
{"generation": "PersonX plays PersonX's favorite song. PersonX did this to me when I was a kid", "references": ["to entertain themselves", "to dance hard", "to celebrate his lover's birthday", "to spend the evening in a relaxed way", "to feel good"], "input": {"head": "PersonX plays PersonX's favorite song", "relation": "xIntent"}}
{"generation": "PersonX sees every ___. PersonX is a member of the ___", "references": ["insightful", "observant", "alive", "reliable", "brainy", "determined"], "input": {"head": "PersonX sees every ___", "relation": "xAttr"}}
{"generation": "PersonX tries sushi before. After, others will want to eat it", "references": ["none"], "input": {"head": "PersonX tries sushi before", "relation": "oWant"}}
{"generation": "PersonX begins to eat it. After, others will want to eat it too", "references": ["none"], "input": {"head": "PersonX begins to eat it", "relation": "oWant"}}
{"generation": "PersonX makes ___ every night. PersonX will be in the bathroom, and PersonX will be in", "references": ["happy", "habitual", "satisfied"], "input": {"head": "PersonX makes ___ every night", "relation": "xReact"}}
{"generation": "PersonX hightails it. After that, it's just a matter of time before it's", "references": ["PersonX gets pulled over by a cop"], "input": {"head": "PersonX hightails it", "relation": "isBefore"}}
{"generation": "PersonX gives PersonY children. Before, PersonX needs to be able to talk to PersonY", "references": ["to become pregnant", "make arrangements for adoption", "get the forms ready", "to give birth", "none"], "input": {"head": "PersonX gives PersonY children", "relation": "xNeed"}}
{"generation": "PersonX sees ___ out of the corner of PersonX's eye. PersonX did this to her", "references": ["see something", "none", "to look"], "input": {"head": "PersonX sees ___ out of the corner of PersonX's eye", "relation": "xIntent"}}
{"generation": "PersonX manages PersonY's ___ well. The effect on others will be similar to that of PersonY's", "references": ["none"], "input": {"head": "PersonX manages PersonY's ___ well", "relation": "oEffect"}}
{"generation": "PersonX loves to garden. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX loves to garden", "relation": "oWant"}}
{"generation": "PersonX takes PersonY's temperature. Before that, you can use the same method to get PersonX", "references": ["PersonX saw that PersonY was coughing"], "input": {"head": "PersonX takes PersonY's temperature", "relation": "isAfter"}}
{"generation": "PersonX asks PersonY's little brother. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX asks PersonY's little brother", "relation": "oReact"}}
{"generation": "PersonX changes PersonX's lives. As a result, others feel the same way", "references": ["motivated", "none", "jealous", "proud"], "input": {"head": "PersonX changes PersonX's lives", "relation": "oReact"}}
{"generation": "PersonX practices all day. After, PersonX will want to know what you're doing, and you'll want", "references": ["win a game", "be the best at something", "win the contest", "to get better", "to win the competition", "take part in the contest"], "input": {"head": "PersonX practices all day", "relation": "xWant"}}
{"generation": "PersonX helps PersonY's brother. After, PersonX will want to know who the other person is", "references": ["to relax", "a glass of water", "to go home", "to be thanked", "to get some rest", "to go home and rest"], "input": {"head": "PersonX helps PersonY's brother", "relation": "xWant"}}
{"generation": "PersonX plays PersonX's favorite game. After, others will want to play the game", "references": ["none"], "input": {"head": "PersonX plays PersonX's favorite game", "relation": "oWant"}}
{"generation": "PersonX says PersonY nay. PersonX is a bit of a jerk", "references": ["aggressive", "ignorant", "loud", "adamant"], "input": {"head": "PersonX says PersonY nay", "relation": "xAttr"}}
{"generation": "PersonX sits on PersonY's couch. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sits on PersonY's couch", "relation": "oEffect"}}
{"generation": "PersonX puts everything together. PersonX did this to me", "references": ["to be organized", "none", "to be nice", "to surprise little brother"], "input": {"head": "PersonX puts everything together", "relation": "xIntent"}}
{"generation": "PersonX reschedules PersonY's appointment. The effect on PersonX will be the same as if PersonY had been assigned to", "references": ["none"], "input": {"head": "PersonX reschedules PersonY's appointment", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's friend took his pants from him.", "PersonX is wearing a skirt", "PersonX is bed ridden", "PersonX's wife fed him too much and they do not fit anymore.", "PersonX's wife was hemming his pants and ripped them by accident.", "PersonX has an injured leg.", "PersonX can't find the pants"], "input": {"head": "PersonX puts PersonX's pants on PersonX leg at a time", "relation": "HinderedBy"}}
{"generation": "PersonX meets PersonX's husband. Before that, they're both in the same room", "references": ["PersonX goes to a restaurant"], "input": {"head": "PersonX meets PersonX's husband", "relation": "isAfter"}}
{"generation": "PersonX never occurred to PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["none"], "input": {"head": "PersonX never occurred to PersonY", "relation": "xIntent"}}
{"generation": "PersonX makes ___ that day. PersonX did this to me", "references": ["it to happen that day", "none", "to be productive", "to make something"], "input": {"head": "PersonX makes ___ that day", "relation": "xIntent"}}
{"generation": "PersonX watches for PersonY opportunity. PersonX is a smartwatch that can be used to watch the", "references": ["helpfull", "selfish", "considerate", "jelous"], "input": {"head": "PersonX watches for PersonY opportunity", "relation": "xAttr"}}
{"generation": "PersonX leaves ___ on the table. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX leaves ___ on the table", "relation": "oReact"}}
{"generation": "PersonX enters a baking competition. After, others will want to see if they can make a cake", "references": ["to do their best", "to beat PersonX", "to win as well", "to cheer PersonX on", "to try Person X's baking.", "to mark a judging ballad."], "input": {"head": "PersonX enters a baking competition", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX stays home every night", "PersonX was seen by Jane as a predetor", "PersonX is afraid to meet new people.", "PersonX lives in the middle of nowhere.", "PersonX was told by Mary that he is creepy", "PersonX has to work all the time.", "PersonX was dumped by his girlfriend", "PersonX does not know who they are.", "PersonX isn't over their ex"], "input": {"head": "PersonX meets the love of PersonX's life", "relation": "HinderedBy"}}
{"generation": "PersonX gets PersonY's license. The effect on others will be the same", "references": ["goes to the dmv", "Gets ticket", "left", "had their identity stolen", "Drives home", "Take the license back"], "input": {"head": "PersonX gets PersonY's license", "relation": "oEffect"}}
{"generation": "PersonX runs for class president. As a result, others feel that he is too conservative", "references": ["none", "proud"], "input": {"head": "PersonX runs for class president", "relation": "oReact"}}
{"generation": "PersonX finds a ring. After that, he goes to the ring and finds a ring with", "references": ["PersonX finds the person it belongs to"], "input": {"head": "PersonX finds a ring", "relation": "isBefore"}}
{"generation": "PersonX tricks or treat. The effect on others will be different", "references": ["Hand out candy", "none", "Open door"], "input": {"head": "PersonX tricks or treat", "relation": "oEffect"}}
{"generation": "PersonX nurses PersonY back. PersonX did this to PersonY", "references": ["to help persony", "to help someone in need", "to do something good", "to do a nice job"], "input": {"head": "PersonX nurses PersonY back", "relation": "xIntent"}}
{"generation": "PersonX eventually bought ___. PersonX did this to the other two people in the group, and they", "references": ["to have resources", "to treat themself", "a good deal", "to enjoy life"], "input": {"head": "PersonX eventually bought ___", "relation": "xIntent"}}
{"generation": "PersonX tunes PersonX's guitar. After, PersonX will want to play the guitar", "references": ["to play beautiful music", "to see if the guitar still works", "start to play quitar", "to show skill", "take a bow", "to play a good performance"], "input": {"head": "PersonX tunes PersonX's guitar", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Someone else already ate it", "PersonX had stomach surgery.", "They filled up on appetizerss", "PersonY kept taking bites", "The baby drool on PersonX's food", "PersonX is full."], "input": {"head": "PersonX eats the whole thing", "relation": "HinderedBy"}}
{"generation": "PersonX finds gold. The effect on PersonX will be similar to that of a gold coin", "references": ["sells it", "shouts triumphantly", "becomes rich", "heart beats fast", "verifies its purity", "stakes a claim", "stocks it"], "input": {"head": "PersonX finds gold", "relation": "xEffect"}}
{"generation": "PersonX enjoys PersonY's class. PersonX is a very good student, and I think he's", "references": ["understanding", "interested", "knowledgeable", "passionate", "intelligent", "satisfied"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xAttr"}}
{"generation": "PersonX comes again. As a result, others feel that the game is too much of a mess", "references": ["happy", "none"], "input": {"head": "PersonX comes again", "relation": "oReact"}}
{"generation": "PersonX feels better than ever. As a result, others feel the same way", "references": ["sad", "bored", "none", "content"], "input": {"head": "PersonX feels better than ever", "relation": "oReact"}}
{"generation": "PersonX sees PersonY mother. After that, she's a little more of a mystery", "references": ["PersonX stops to chat with PersonY's mother"], "input": {"head": "PersonX sees PersonY mother", "relation": "isBefore"}}
{"generation": "PersonX surmounts every ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["Beams with Pride", "gains experience", "gets awarded", "Wins award", "gets congratulated", "gains skills"], "input": {"head": "PersonX surmounts every ___", "relation": "xEffect"}}
{"generation": "PersonX sends PersonY home. As a result, others feel that they are being treated unfairly", "references": ["bad", "like a cared for employee", "angry", "annoyed"], "input": {"head": "PersonX sends PersonY home", "relation": "oReact"}}
{"generation": "PersonX is coming to an end. After that, we'll see if we can get a new character", "references": ["PersonX sets up a will"], "input": {"head": "PersonX is coming to an end", "relation": "isBefore"}}
{"generation": "PersonX puts it in the oven. Before, PersonX needs to make sure that the oven is set to the correct", "references": ["to pour it in a pan", "to mix batter", "make cookie", "to buy ingredients", "put dough in cooking sheet"], "input": {"head": "PersonX puts it in the oven", "relation": "xNeed"}}
{"generation": "PersonX plays the gender card. PersonX did this to me, and I'm not sure if it's", "references": ["explain her situation", "have sympathy", "to get away with something", "to be pitied", "get her way"], "input": {"head": "PersonX plays the gender card", "relation": "xIntent"}}
{"generation": "PersonX knocks the living daylights out of ___ is filled by the power of the Internet", "references": ["his boss", "criminals", "puppet", "bulls", "her", "them", "wrestlers", "his brother", "target", "him", "dog", "boxers", "turbin", "Sam"], "input": {"head": "PersonX knocks the living daylights out of ___", "relation": "isFilledBy"}}
{"generation": "PersonX bows the ___ to baal. PersonX is the one who is the one who is the one", "references": ["slavish", "submissive", "deferential", "Young", "Idolizing", "servile"], "input": {"head": "PersonX bows the ___ to baal", "relation": "xAttr"}}
{"generation": "PersonX gets the shot. PersonX will be the one to get the shot", "references": ["slightly hurt", "thankful for the chance", "better", "content"], "input": {"head": "PersonX gets the shot", "relation": "xReact"}}
{"generation": "PersonX takes place over a period. PersonX did this to make sure that the game was not too much of", "references": ["to take time to do something"], "input": {"head": "PersonX takes place over a period", "relation": "xIntent"}}
{"generation": "PersonX really wants. PersonX is a great guy, but he's not a great", "references": ["greedy", "hopeful", "curious", "excited", "desirous", "wishful"], "input": {"head": "PersonX really wants", "relation": "xAttr"}}
{"generation": "PersonX jumps to conclusions. PersonX did this to me, and I'm not going to lie", "references": ["to make a decision", "to have some resolution", "be correct"], "input": {"head": "PersonX jumps to conclusions", "relation": "xIntent"}}
{"generation": "PersonX divideth PersonX's ___ from the goats. PersonX is a member of the Goat Tribe", "references": ["capable", "efficient", "effective", "insidious", "organized", "orderly", "wise", "sly"], "input": {"head": "PersonX divideth PersonX's ___ from the goats", "relation": "xAttr"}}
{"generation": "PersonX starts crying. Before, PersonX needs to be able to talk to her", "references": ["to not take it well", "to see something sad", "none"], "input": {"head": "PersonX starts crying", "relation": "xNeed"}}
{"generation": "PersonX looks like was going. PersonX is a very good player, but he's not a", "references": ["waiting", "noting", "elegant", "interested", "prepared", "fancy", "special"], "input": {"head": "PersonX looks like was going", "relation": "xAttr"}}
{"generation": "PersonX calls PersonY this morning. Before that, he's been talking about how he's going to", "references": ["PersonX got bad news from the doctor"], "input": {"head": "PersonX calls PersonY this morning", "relation": "isAfter"}}
{"generation": "PersonX finds PersonX's shoes. Before that, he finds the shoes of the other two", "references": ["PersonX looks for PersonX's shoes"], "input": {"head": "PersonX finds PersonX's shoes", "relation": "isAfter"}}
{"generation": "PersonX falls back asleep. Before that, he's been watching the news", "references": ["PersonX wakes up early", "PersonX suddenly woke up", "PersonX wakes up to drink water"], "input": {"head": "PersonX falls back asleep", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Their boss is never satisfied with their work.", "PersonX got sick before the exam.", "PersonX is bad at math", "Their brother messes up everything.", "PersonX is too lax in being perfect.", "PersonX has no training on the matter.", "PersonX is still trying to perfect their talents.", "PersonX is not able to stay until the end.", "Their mom keeps telling them to do something else."], "input": {"head": "PersonX has done a great job", "relation": "HinderedBy"}}
{"generation": "PersonX knows PersonY's name. After, PersonX will want to know PersonY's name", "references": ["tell others the persons name", "to indite y", "talk with that person", "to gather information", "to ask them out.", "to report them."], "input": {"head": "PersonX knows PersonY's name", "relation": "xWant"}}
{"generation": "PersonX offer to teach PersonY. After, PersonX will want to teach PersonY", "references": ["to make sure PersonY succeeds", "to pay PersonY", "to find more students", "to help PersonY know how to do things", "to thank PersonY", "to evaluate PersonY", "to teach PersonY"], "input": {"head": "PersonX offer to teach PersonY", "relation": "xWant"}}
{"generation": "PersonX wants to break up. Before that, he's been trying to get his wife to leave", "references": ["PersonX talks to PersonX's boyfriend about his anger"], "input": {"head": "PersonX wants to break up", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["person X doesn't have time to meet her.", "PersonX was adopted and doesn't know who their real mom is.", "Mom won't allow person X to come over.", "PersonX's car broke down and PersonX is stuck waiting for a tow truck.", "PersonX's mom is busy at work.", "PersonX and PersonX's mom got into a huge argument and now aren't speaking to each-other."], "input": {"head": "PersonX meets PersonX's mom", "relation": "HinderedBy"}}
{"generation": "PersonX loves to surf. After, PersonX will want to know what's going on in the world", "references": ["to put on their wetsuit", "to show off their skills", "to relax afterwards", "to surf", "to go to the beach", "to grab their board", "to wear sunscreen", "to catch some waves"], "input": {"head": "PersonX loves to surf", "relation": "xWant"}}
{"generation": "PersonX changes PersonX's lives. PersonX did this to her, and she did it to her", "references": ["to improve their life", "improve themself", "to be healthier", "to be a better person", "prove themselves to others"], "input": {"head": "PersonX changes PersonX's lives", "relation": "xIntent"}}
{"generation": "PersonX runs for PersonX's lives. Before that, he was a member of the Team X team", "references": ["PersonX comes across someone in a dark alley"], "input": {"head": "PersonX runs for PersonX's lives", "relation": "isAfter"}}
{"generation": "PersonX sees PersonY alone. After, PersonX will want to talk to PersonY", "references": ["to see what PersonY is doing", "to talk to personY", "to talk to PersonY", "to ask if they want to play a game"], "input": {"head": "PersonX sees PersonY alone", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY's husband won't allow it.", "They don't want to betray Y.", "PersonX doesn't know the name", "PersonX has to work", "PersonY's boyfriend won't allow it.", "They don't want to hurt Y."], "input": {"head": "PersonX sees PersonY's crush", "relation": "HinderedBy"}}
{"generation": "PersonX falls in line. As a result, others feel that the game is too complex and too difficult", "references": ["controlling", "powerful", "happy", "none"], "input": {"head": "PersonX falls in line", "relation": "oReact"}}
{"generation": "PersonX eats ___ for days. After, PersonX will want to eat ___ for days", "references": ["to fast", "to loose weight", "to get healthy", "to goto GYM as he ate for 100days", "lose weight", "to no longer be sick"], "input": {"head": "PersonX eats ___ for days", "relation": "xWant"}}
{"generation": "PersonX scores two goals. The effect on PersonX will be the same as the effect on PersonX", "references": ["PersonX screams in excitement", "gets jumped on", "congratulated", "Celebrates", "kicks ball into goal twice.", "PersonX smiles"], "input": {"head": "PersonX scores two goals", "relation": "xEffect"}}
{"generation": "PersonX opposes every ___ is filled by a ___", "references": ["Person", "Bill"], "input": {"head": "PersonX opposes every ___", "relation": "isFilledBy"}}
{"generation": "audiophile can't help but feel that the game is a bit", "references": ["listen to music"], "input": {"head": "audiophile", "relation": "CapableOf"}}
{"generation": "PersonX changes PersonX's way. After that, you can use the same PersonX to change the", "references": ["PersonX comes out reformed"], "input": {"head": "PersonX changes PersonX's way", "relation": "isBefore"}}
{"generation": "PersonX treats ___ in children. The effect on PersonX will be the same as the effect on PersonX", "references": ["gets promoted", "none", "quits their job"], "input": {"head": "PersonX treats ___ in children", "relation": "xEffect"}}
{"generation": "PersonX consolidates PersonX's position. As a result, others feel that PersonX is a better fit for the company", "references": ["none", "enlightened"], "input": {"head": "PersonX consolidates PersonX's position", "relation": "oReact"}}
{"generation": "PersonX skateboards with PersonY's friends. Before that, they were all just friends", "references": ["PersonX goes to the park"], "input": {"head": "PersonX skateboards with PersonY's friends", "relation": "isAfter"}}
{"generation": "PersonX wants to play. After, others will want to play", "references": ["to win", "none", "have fun"], "input": {"head": "PersonX wants to play", "relation": "oWant"}}
{"generation": "good fictional detective can be a bit of a stretch", "references": ["trip up cunning adversary"], "input": {"head": "good fictional detective", "relation": "CapableOf"}}
{"generation": "PersonX slips under the radar. PersonX will be the one who gets the most attention", "references": ["guilty", "sneaky", "relieved", "intelligent", "invisible"], "input": {"head": "PersonX slips under the radar", "relation": "xReact"}}
{"generation": "PersonX gets it for PersonY. PersonX is the only one who can get it for PersonY", "references": ["brings", "generous", "helpful", "friendly", "gifts", "considerate"], "input": {"head": "PersonX gets it for PersonY", "relation": "xAttr"}}
{"generation": "PersonX decides to adopt the cat. After that, he is seen in the hospital with his mother", "references": ["PersonX buys a new litter box"], "input": {"head": "PersonX decides to adopt the cat", "relation": "isBefore"}}
{"generation": "PersonX calls PersonY's son. The effect on others will be similar to that of a normal person", "references": ["PersonY's son smiles", "PersonY is grateful towards personX"], "input": {"head": "PersonX calls PersonY's son", "relation": "oEffect"}}
{"generation": "PersonX is at PersonX's grandmother's house. The effect on PersonX will be similar to that of a normal person", "references": ["Boss called back to job", "got ready for an immediate travel"], "input": {"head": "PersonX is at PersonX's grandmother 's house", "relation": "xEffect"}}
{"generation": "PersonX comes see PersonY. PersonX did this to me, and I'm not sure if it's", "references": ["to talk"], "input": {"head": "PersonX comes see PersonY", "relation": "xIntent"}}
{"generation": "PersonX wants to learn how to cook. After, others will want to learn how to cook", "references": ["none"], "input": {"head": "PersonX wants to learn how to cook", "relation": "oWant"}}
{"generation": "PersonX drives ___ to the beach. The effect on others will be similar to that of a car accident", "references": ["none"], "input": {"head": "PersonX drives ___ to the beach", "relation": "oEffect"}}
{"generation": "PersonX really pisses PersonY off. The effect on others will be different", "references": ["Smack them", "none", "Punches them"], "input": {"head": "PersonX really pisses PersonY off", "relation": "oEffect"}}
{"generation": "PersonX breaks PersonX's toe. PersonX is then thrown into the air", "references": ["competitive", "talented", "mad", "careless", "reckless"], "input": {"head": "PersonX breaks PersonX's toe", "relation": "xAttr"}}
{"generation": "PersonX not knows which end is up. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX not knows which end is up", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX keeps getting sick and depressed.", "PersonX's brain doesn't make enough neurotransmitters for happiness.", "PersonX has a chronic disease", "PersonX lost his wife", "PersonX is happy being miserable.", "PersonX has a broken ankle."], "input": {"head": "PersonX becomes happy", "relation": "HinderedBy"}}
{"generation": "PersonX fees the cat. After that, the cat will be given a new name", "references": ["PersonX pets the cat"], "input": {"head": "PersonX fees the cat", "relation": "isBefore"}}
{"generation": "PersonX gets so frustrated. Before that, he's just a normal guy", "references": ["PersonX is turned down by person"], "input": {"head": "PersonX gets so frustrated", "relation": "isAfter"}}
{"generation": "PersonX starts to swell. After, PersonX will want to know what's going on", "references": ["to get medicine", "To become normal", "to drink some water", "go to the hospital", "to take a break", "To go back to normal"], "input": {"head": "PersonX starts to swell", "relation": "xWant"}}
{"generation": "PersonX catches some rays. After, others will want to see what they can see", "references": ["none"], "input": {"head": "PersonX catches some rays", "relation": "oWant"}}
{"generation": "PersonX puts ___ in PersonX's purse. The effect on PersonX will be the same as the effect on PersonX", "references": ["Fumbles for item", "Carries purse"], "input": {"head": "PersonX puts ___ in PersonX's purse", "relation": "xEffect"}}
{"generation": "PersonX notices a strange smell. After, PersonX will want to know what it is", "references": ["to spray air freshner", "to light a candle", "look for the smell", "clean up the mess", "Got gloves", "use air freshener", "Spot treated", "seek out the source of the smell"], "input": {"head": "PersonX notices a strange smell", "relation": "xWant"}}
{"generation": "PersonX wants to learn how to play the guitar. After that, he'll be able to play the guitar in a", "references": ["PersonX signs up for some music lessons"], "input": {"head": "PersonX wants to learn how to play the guitar", "relation": "isBefore"}}
{"generation": "PersonX strikes a blow. After that, he's able to get a hold of the other", "references": ["PersonX gets beat up", "PersonX sees the other person fall down", "PersonX knocks bully out then kicks his balls in"], "input": {"head": "PersonX strikes a blow", "relation": "isBefore"}}
{"generation": "PersonX visits PersonX's daughter. The effect on PersonX will be similar to that of the effect of the effect of", "references": ["gets greeted", "talking each other", "share words", "giving hug", "gets hugged", "give some money", "gets excited"], "input": {"head": "PersonX visits PersonX's daughter", "relation": "xEffect"}}
{"generation": "PersonX finds another job. PersonX will be a part of the team that will be responsible for", "references": ["relieved, proud", "happy that he can afford more things."], "input": {"head": "PersonX finds another job", "relation": "xReact"}}
{"generation": "PersonX learns a new skill. Before that, he learns a new skill", "references": ["PersonX took a computer class"], "input": {"head": "PersonX learns a new skill", "relation": "isAfter"}}
{"generation": "PersonX really pisses PersonY off. PersonX will be the one who gets the most attention", "references": ["powerful", "upset", "useless"], "input": {"head": "PersonX really pisses PersonY off", "relation": "xReact"}}
{"generation": "PersonX puts PersonX's ___ into execution. Before, PersonX needs to know that PersonX is a person, and that", "references": ["design it", "think new ideas", "explain ides", "to discuss the plan with someone experienced", "to make a plan", "analyze it"], "input": {"head": "PersonX puts PersonX's ___ into execution", "relation": "xNeed"}}
{"generation": "PersonX puts PersonX's head in the sand. As a result, others feel the same way", "references": ["none", "bonded."], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have the text book.", "PersonX's parents did not help them study for the test.", "PersonX missed the final.", "The class was cancelled.", "The teacher surprised them with a test about subjects they haven't learned yet.", "PersonX didn't study", "PersonX's teacher did not teach the material properly.", "The test contains a trick question."], "input": {"head": "PersonX does well on the test", "relation": "HinderedBy"}}
{"generation": "PersonX decides to enter. Before, PersonX needs to find a way to get to the other side of", "references": ["Arrive at the building", "Approach the entrance of the building"], "input": {"head": "PersonX decides to enter", "relation": "xNeed"}}
{"generation": "stand up. Before, PersonX needs to be able to do something like this:\n\n", "references": ["use body", "rise from set", "rise from seat", "straighten legs", "sit down first", "have enough room to stand up", "put legs underneath", "not sitting down", "get off butt", "stand up and counted", "use leg muscles", "put feet on floor", "lean forward", "flex leg muscles", "brave", "sitting or lying down", "arise", "get off couch", "rise up", "use muscles", "put both feet on ground", "put feet on ground", "use arms for support", "seated", "alter center of gravity", "use legs", "not sit down", "stop sitting", "get out of chair"], "input": {"head": "stand up", "relation": "xNeed"}}
{"generation": "wait on line. Before, PersonX needs to be able to see the user's name and password", "references": ["buy slow modem", "have slow modem", "go to dmv", "make sure it's right line", "decide if it's worth", "call public service", "take ticket", "get slow isp", "determine what line for", "patient", "come early", "find line"], "input": {"head": "wait on line", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Grandma doesn't want to see them.", "PersonX's grandma has the flu.", "PersonX's grandma currently does not like PersonX and does not want to see them.", "PersonX is blind.", "PersonX's grandmother moved out of the country.", "They are too far away."], "input": {"head": "PersonX sees PersonX's grandma", "relation": "HinderedBy"}}
{"generation": "PersonX gets a balloon. Before that, he gets a balloon", "references": ["PersonX visits the circus"], "input": {"head": "PersonX gets a balloon", "relation": "isAfter"}}
{"generation": "PersonX fills PersonY's lungs. The effect on PersonX will be similar to the effect on PersonY", "references": ["is thanked", "pray for Person Y's safety"], "input": {"head": "PersonX fills PersonY's lungs", "relation": "xEffect"}}
{"generation": "PersonX cheats on PersonY. The effect on PersonX will be applied to PersonY", "references": ["Gets screamed at.", "none", "Gets hit."], "input": {"head": "PersonX cheats on PersonY", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["There are missing pieces.", "Their mother keeps moving things.", "The cat won't get out of the suitcase.", "PersonX got held up in traffic on the way to the store.", "PersonX has to work overtime.", "PersonX is lazy.", "The task is too great.", "PersonX couldn't find any clothing that sparked joy."], "input": {"head": "PersonX gets everything together", "relation": "HinderedBy"}}
{"generation": "PersonX spills coffee. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX spills coffee", "relation": "oWant"}}
{"generation": "PersonX wipes PersonX's forehead. After, others will want to kill PersonX", "references": ["none"], "input": {"head": "PersonX wipes PersonX's forehead", "relation": "oWant"}}
{"generation": "You are likely to find an amphitheatre in a park or a museum, or a museum of art", "references": ["movie house", "outside", "park", "greece"], "input": {"head": "amphitheatre", "relation": "AtLocation"}}
{"generation": "PersonX runs laps. The effect on others will be similar to that of a car's brakes", "references": ["none"], "input": {"head": "PersonX runs laps", "relation": "oEffect"}}
{"generation": "PersonX becomes PersonY member. As a result, others feel that PersonX is more important than PersonY", "references": ["sociable"], "input": {"head": "PersonX becomes PersonY member", "relation": "oReact"}}
{"generation": "PersonX finds it anywhere. Before that, he's been in the same place for a while", "references": ["PersonX goes to look for a four leaf clover", "PersonX looks for it"], "input": {"head": "PersonX finds it anywhere", "relation": "isAfter"}}
{"generation": "PersonX sells ___ on craigslist. The effect on others will be similar", "references": ["none", "opens a package", "mails a check"], "input": {"head": "PersonX sells ___ on craigslist", "relation": "oEffect"}}
{"generation": "PersonX looks on PersonY's face. Before that, she looks at the other two", "references": ["PersonX asks PersonY for a kiss"], "input": {"head": "PersonX looks on PersonY's face", "relation": "isAfter"}}
{"generation": "PersonX looks PersonY in the face. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX looks PersonY in the face", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is not in the same country.", "PersonX is too weak.", "PersonY has restraints on their legs.", "PersonX isn't strong enough.", "PersonX is not in the same state.", "PersonX is not in the same room.", "PersonY's legs are already open.", "PersonX is scarred what people will think."], "input": {"head": "PersonX opens PersonY's legs", "relation": "HinderedBy"}}
{"generation": "PersonX receives ___ based. As a result, others feel that they are being treated unfairly", "references": ["needed", "none", "influential"], "input": {"head": "PersonX receives ___ based", "relation": "oReact"}}
{"generation": "PersonX sees all the animals. PersonX will be able to see all the animals", "references": ["thrilled about it", "connected", "alert", "amazed at them all"], "input": {"head": "PersonX sees all the animals", "relation": "xReact"}}
{"generation": "PersonX gains confidence. PersonX is a good person", "references": ["positive", "brave", "pleased", "prideful", "confident", "proud", "open", "determined"], "input": {"head": "PersonX gains confidence", "relation": "xAttr"}}
{"generation": "PersonX takes a new job. After that, he's a regular at the office", "references": ["PersonX starts the first day of work"], "input": {"head": "PersonX takes a new job", "relation": "isBefore"}}
{"generation": "PersonX buys a new video game. Before that, he's been playing video games for a while", "references": ["PersonX went to the store", "PersonX saved their allowance for several weeks", "PersonX buys a new gaming console"], "input": {"head": "PersonX buys a new video game", "relation": "isAfter"}}
{"generation": "PersonX spits nails. PersonX did this to me", "references": ["to be a rebel", "to look like a tough guy", "to be clean", "to clear x's mouth"], "input": {"head": "PersonX spits nails", "relation": "xIntent"}}
{"generation": "PersonX gives a small smile. PersonX did this to me", "references": ["to look nice person", "to be happy", "to have fun", "to be friendly", "to show her joy"], "input": {"head": "PersonX gives a small smile", "relation": "xIntent"}}
{"generation": "PersonX wants some ice cream. Before that, he's got a bunch of ice cream", "references": ["PersonX sees a commercial on tv"], "input": {"head": "PersonX wants some ice cream", "relation": "isAfter"}}
{"generation": "PersonX loves reading books. PersonX did this to me when I was a kid", "references": ["none", "to be a good reader"], "input": {"head": "PersonX loves reading books", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["He has to go to work.", "They're afraid it might break off.", "X has no money to buy products at the store.", "He doesnt have any bleach.", "Persony wont let him.", "They've never done it before and are afraid of the results.", "PersonY doesnt have hair", "X's mother forbade it."], "input": {"head": "PersonX bleaches PersonY's hair", "relation": "HinderedBy"}}
{"generation": "PersonX sends document to parliament. Before that, he sends it to the president", "references": ["PersonX drafts a document"], "input": {"head": "PersonX sends document to parliament", "relation": "isAfter"}}
{"generation": "PersonX busts a nut. Before, PersonX needs to be able to get a job, but now he", "references": ["have sexual intercourse", "to pleasure themselves", "to arouse himself", "think about hot things", "none"], "input": {"head": "PersonX busts a nut", "relation": "xNeed"}}
{"generation": "PersonX presents the ___ in a manner. After, others will want to know what the ___ is", "references": ["to understand what PersonX is saying", "none", "to ask PersonX questions"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "oWant"}}
{"generation": "PersonX watches PersonX's mouth. PersonX did this to her", "references": ["to make sure no one is offended."], "input": {"head": "PersonX watches PersonX's mouth", "relation": "xIntent"}}
{"generation": "PersonX studies for PersonX's exam. After, others will want to know if you are a good student", "references": ["none"], "input": {"head": "PersonX studies for PersonX's exam", "relation": "oWant"}}
{"generation": "PersonX washes ___ today. The effect on PersonX will be minimal", "references": ["going to shop", "repair damaged", "gets reported for illegal activities", "runs out of detergent", "gets asked for favor", "clean dirty", "going party", "stains his clothes"], "input": {"head": "PersonX washes ___ today", "relation": "xEffect"}}
{"generation": "PersonX earns PersonX's own money. After that, PersonX can earn a lot of money by selling", "references": ["PersonX spends PersonX's money"], "input": {"head": "PersonX earns PersonX's own money", "relation": "isBefore"}}
{"generation": "PersonX leaves it be. After, others will want to know what's going on", "references": ["to do something else", "none", "to keep things in mind"], "input": {"head": "PersonX leaves it be", "relation": "oWant"}}
{"generation": "PersonX wants to give it a try. After that, he'll be able to get a few more hours", "references": ["PersonX buys ice skates"], "input": {"head": "PersonX wants to give it a try", "relation": "isBefore"}}
{"generation": "PersonX stops dead in PersonY's tracks. Before, PersonX needs to be able to move around in PersonY's tracks", "references": ["to walk towards them", "to find PersonY", "none"], "input": {"head": "PersonX stops dead in PersonY's tracks", "relation": "xNeed"}}
{"generation": "PersonX reduces ___ to levels. PersonX is the same as PersonX, but it's not", "references": ["effective", "persistant", "prepared", "intelligent", "skilled", "satisfied"], "input": {"head": "PersonX reduces ___ to levels", "relation": "xAttr"}}
{"generation": "PersonX tells PersonY to tell. After that, PersonX tells PersonY to tell", "references": ["PersonX is known as a snitch for the rest of their school career", "PersonX tells on PersonY since PersonY wouldn't confess"], "input": {"head": "PersonX tells PersonY to tell", "relation": "isBefore"}}
{"generation": "PersonX does not have a lot of money. As a result, others feel that they are not getting the same level of value", "references": ["none"], "input": {"head": "PersonX does not have a lot of money", "relation": "oReact"}}
{"generation": "PersonX goes in PersonX ear and out the other. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX goes in PersonX ear and out the other", "relation": "oWant"}}
{"generation": "PersonX gives you PersonY account. After, PersonX will want to create a new account", "references": ["to split the money", "to hide the evidence"], "input": {"head": "PersonX gives you PersonY account", "relation": "xWant"}}
{"generation": "PersonX makes PersonX's exit. PersonX will be able to exit the game", "references": ["thankful,finds the way happily", "indifferent", "excited"], "input": {"head": "PersonX makes PersonX's exit", "relation": "xReact"}}
{"generation": "PersonX gets a shot. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX gets a shot", "relation": "oWant"}}
{"generation": "PersonX teaches ___ in schools. After, PersonX will want to know what you're doing", "references": ["to pick up a paycheck", "to cash a paychck"], "input": {"head": "PersonX teaches ___ in schools", "relation": "xWant"}}
{"generation": "PersonX has a test tomorrow. PersonX is going to be the one who gets the most votes", "references": ["eager", "scared", "nervous", "confident", "silent", "anxious"], "input": {"head": "PersonX has a test tomorrow", "relation": "xAttr"}}
{"generation": "PersonX teaches ___ in the schools. PersonX is a student at the University of California, Berkeley", "references": ["informative", "knowledgeable", "educated", "smart"], "input": {"head": "PersonX teaches ___ in the schools", "relation": "xAttr"}}
{"generation": "PersonX grows upon PersonY. Before that, you can't use PersonX to create a new", "references": ["PersonX follows PersonY around"], "input": {"head": "PersonX grows upon PersonY", "relation": "isAfter"}}
{"generation": "PersonX takes ___ to the er. After, PersonX will want to know what the fuck you're doing", "references": ["for them to heal", "to admit someone to the er", "to make sure they see a doctor", "to stay at the ER", "to explain to the doctor", "to find out what is wrong", "to fill out forms"], "input": {"head": "PersonX takes ___ to the er", "relation": "xWant"}}
{"generation": "PersonX convinces PersonX's parents. PersonX did this to her, and she was able to convince her parents", "references": ["to hang out with friends", "to gain their parents' approval", "them to give in", "to go to an event", "to go", "a puppy", "to go abroad for his studies"], "input": {"head": "PersonX convinces PersonX's parents", "relation": "xIntent"}}
{"generation": "PersonX increases women's ___. PersonX did this to me", "references": ["to be helpful", "proactive", "reformative", "to help women be more equal"], "input": {"head": "PersonX increases women 's ___", "relation": "xIntent"}}
{"generation": "PersonX plays many sports. PersonX is a former NFL player who has been a member of", "references": ["athletic", "adventurous", "strong"], "input": {"head": "PersonX plays many sports", "relation": "xAttr"}}
{"generation": "PersonX brings ___ to the people. After, others will want to know what you're doing", "references": ["to work hard", "to be thankful", "to get new jobs", "to put the things away which they received", "none"], "input": {"head": "PersonX brings ___ to the people", "relation": "oWant"}}
{"generation": "PersonX pulls PersonY's car over. The effect on others will be different", "references": ["cries because personY is drunk", "screams from anger"], "input": {"head": "PersonX pulls PersonY's car over", "relation": "oEffect"}}
{"generation": "signmaker can be a great asset to your team", "references": ["letter name on door", "letter sign"], "input": {"head": "signmaker", "relation": "CapableOf"}}
{"generation": "PersonX makes PersonX's mark. PersonX will be the first person to be able to use the ability", "references": ["proud.", "powerful", "immortal", "satisfied"], "input": {"head": "PersonX makes PersonX's mark", "relation": "xReact"}}
{"generation": "PersonX faces ___ today is filled by a lot of people who are not even aware of", "references": ["the traffic", "the mirror", "the judge"], "input": {"head": "PersonX faces ___ today", "relation": "isFilledBy"}}
{"generation": "PersonX grants PersonY's request. The effect on others will be limited to the number of people who are affected by", "references": ["thanks personX", "Person Y prepares to go on vacation.", "smiles", "appreciates personX", "Person Y thanks person X", "gets something"], "input": {"head": "PersonX grants PersonY's request", "relation": "oEffect"}}
{"generation": "PersonX does a good deed. After that, he's a good guy", "references": ["PersonX hands out sandwiches to the homeless"], "input": {"head": "PersonX does a good deed", "relation": "isBefore"}}
{"generation": "PersonX faces the ___ alone. Before, PersonX needs to be able to talk to the ___ alone", "references": ["Walk towards the thing", "to eat the donut before he is seen", "to steal a donut", "Have something to confront", "none"], "input": {"head": "PersonX faces the ___ alone", "relation": "xNeed"}}
{"generation": "PersonX divorces PersonX's husband. Before, PersonX needs to be able to talk to PersonX about his or", "references": ["get a lawyer", "talk with divorce lawyer", "Write up the divorce papers", "to be cheating on husband", "to be arguing with husband everyday", "to not to eye to eye anymore", "file paperwork"], "input": {"head": "PersonX divorces PersonX's husband", "relation": "xNeed"}}
{"generation": "PersonX enjoys ___ that night. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX enjoys ___ that night", "relation": "oReact"}}
{"generation": "PersonX offer ___ to god. The effect on PersonX will be that you will be able to use the ability to", "references": ["none"], "input": {"head": "PersonX offer ___ to god", "relation": "xEffect"}}
{"generation": "PersonX throws money away. PersonX is a character in the game", "references": ["uneconomical", "spendthrift", "reckless", "careless", "indulgent", "wasteful", "irresponsible"], "input": {"head": "PersonX throws money away", "relation": "xAttr"}}
{"generation": "PersonX does not have a lot of money. PersonX is a very small company, and it's not a", "references": ["poor", "sad", "hungry", "broke"], "input": {"head": "PersonX does not have a lot of money", "relation": "xAttr"}}
{"generation": "PersonX is taking a trip. After that, he's going to be in the hospital", "references": ["PersonX sees the countryside"], "input": {"head": "PersonX is taking a trip", "relation": "isBefore"}}
{"generation": "PersonX makes PersonY uncomfortable. After that, she's not so much a person as a person", "references": ["PersonX onx apologizes to PersonY for the accident", "PersonX laughs and walks away"], "input": {"head": "PersonX makes PersonY uncomfortable", "relation": "isBefore"}}
{"generation": "PersonX broadens PersonX's ___ to include. PersonX will be able to use the PersonX keyword to describe the", "references": ["educated", "excited"], "input": {"head": "PersonX broadens PersonX's ___ to include", "relation": "xReact"}}
{"generation": "PersonX has a litter of puppies. Before that, he was a dog trainer", "references": ["PersonX makes a sign for the pet store"], "input": {"head": "PersonX has a litter of puppies", "relation": "isAfter"}}
{"generation": "PersonX pumps PersonY's gas. Before, PersonX needs to pump PersonY's gas", "references": ["to drive to the gas station", "get gas handle out of gas pump", "pay for gas", "to open the gas cap"], "input": {"head": "PersonX pumps PersonY's gas", "relation": "xNeed"}}
{"generation": "PersonX pushes the mouse forward. After that, the game will start", "references": ["PersonX types up the letter"], "input": {"head": "PersonX pushes the mouse forward", "relation": "isBefore"}}
{"generation": "PersonX would be fun. Before, PersonX needs to be able to use the same abilities as the player", "references": ["none"], "input": {"head": "PersonX would be fun", "relation": "xNeed"}}
{"generation": "You are likely to find a mineral in an area that is not covered by a mineral tax", "references": ["earth", "ore", "michigan", "multivitamin"], "input": {"head": "mineral", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is sleeping.", "PersonX is in a sound proof room.", "Person X is deaf.", "Person X has ear plugs in.", "PersonX is deaf.", "Person X is listening to music.", "PersonX has headphones on."], "input": {"head": "PersonX hears a loud noise", "relation": "HinderedBy"}}
{"generation": "PersonX cuts PersonY's leg. After, others will want to kill him", "references": ["to run away", "to hurt him", "To take revenge", "To hurt x back", "call the cops", "file a criminal lawsuit"], "input": {"head": "PersonX cuts PersonY's leg", "relation": "oWant"}}
{"generation": "PersonX peers inside. The effect on others will be similar to that of a normal peer", "references": ["none"], "input": {"head": "PersonX peers inside", "relation": "oEffect"}}
{"generation": "PersonX feels lucky. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX feels lucky", "relation": "xIntent"}}
{"generation": "PersonX finds PersonY anywhere. The effect on PersonX will be similar to that of PersonY", "references": ["get amount", "go in car", "feels surprised", "return to home", "keeps an eye out for PersonY when out."], "input": {"head": "PersonX finds PersonY anywhere", "relation": "xEffect"}}
{"generation": "PersonX gives ___ a standing ovation. After, PersonX will want to know what you're doing", "references": ["to show their gratitude and appreciation.", "to see this person perform again.", "to show appreciation", "to respect someone"], "input": {"head": "PersonX gives ___ a standing ovation", "relation": "xWant"}}
{"generation": "a nail can be used for a nail polish", "references": ["attach frame to wall", "attach the frame to", "clean under fingernails", "hang it from", "put a hole in a tin can", "drive into a wall", "pop tires", "hold the masterpiece", "hold things together", "pain person", "hang the art on wall", "hold the neccesary products", "attach image to wall", "use a a knife", "hold the picture frame", "put a picture up", "fastening two objects together", "affix the piece to", "poke the bicycle", "put in wal to get the hook to hook on it", "to  hang artwork", "scratch the paint off of a can", "hit with the hammer", "pierce ears", "hang from", "hang the frame", "cause puncture wound", "hang the picture on", "hang the frame on", "hang board", "hang the drawing on", "nail things to other things", "connect wood together", "hang the painting on", "scratching", "hang on", "hang the art on the wall", "hammer into the wall", "attach frame to surface", "hang picture on"], "input": {"head": "nail", "relation": "ObjectUse"}}
{"generation": "PersonX helps PersonY along. After that, PersonY is able to help PersonX along", "references": ["PersonX asks if PersonY needs any more help"], "input": {"head": "PersonX helps PersonY along", "relation": "isBefore"}}
{"generation": "PersonX takes ___ sitting down. PersonX is a very good person, but he's not a", "references": ["Passive", "unassuming", "angry", "Submissive", "nervous", "moody"], "input": {"head": "PersonX takes ___ sitting down", "relation": "xAttr"}}
{"generation": "PersonX acts upon PersonY. PersonX is the only person who can act upon PersonY", "references": ["powerful", "bothered", "mean", "curious", "forceful", "engaged", "malicious", "involved"], "input": {"head": "PersonX acts upon PersonY", "relation": "xAttr"}}
{"generation": "PersonX has lost PersonY's phone. After, PersonX will want to use the phone to call PersonY", "references": ["to retrace their steps", "for PersonY not to find out it's lost", "to find it", "to cover it up", "to apologize", "to remember where the phone is", "to pay PersonY some money for the phone"], "input": {"head": "PersonX has lost PersonY's phone", "relation": "xWant"}}
{"generation": "PersonX wants to play with PersonY. The effect on PersonX will be the same as the effect on PersonY", "references": ["hangs out with person y", "calls up person y", "to reduce the calories", "none", "want to good in playing"], "input": {"head": "PersonX wants to play with PersonY", "relation": "xEffect"}}
{"generation": "a piggy bank can be used for a variety of purposes", "references": ["save for a special purpose.", "keep money in", "store the currency", "hide their money from others", "put their money", "put extra cash", "put their paychecks into", "use for target practice", "store money", "break open for change", "hold coins", "add coins to", "break open to get to their savings", "hold money", "store a college fund", "hide secret stash money", "to put coinage in", "keep papers from flying away", "put coins in"], "input": {"head": "piggy bank", "relation": "ObjectUse"}}
{"generation": "PersonX hangs PersonY's head. After, PersonX will want to know who the other person is", "references": ["ask what is wrong", "to talk about healthy choices", "to punish PersonY", "to suffocate PersonY", "to discuss honesty", "talk about situation"], "input": {"head": "PersonX hangs PersonY's head", "relation": "xWant"}}
{"generation": "PersonX falls off the back of a lorry. The effect on others will be felt by the driver", "references": ["none"], "input": {"head": "PersonX falls off the back of a lorry", "relation": "oEffect"}}
{"generation": "PersonX wears gloves. As a result, others feel that he is a bit of a jerk", "references": ["none"], "input": {"head": "PersonX wears gloves", "relation": "oReact"}}
{"generation": "PersonX bosses ___ around. After, PersonX will want to talk to you", "references": ["to make people nervous", "to feel powerful", "to be avoided", "to keep doing it", "to be in charge"], "input": {"head": "PersonX bosses ___ around", "relation": "xWant"}}
{"generation": "PersonX smacks PersonY. Before, PersonX needs to be able to see PersonY's face, but", "references": ["be mad at PersonY", "to be angry with Person Y", "to feel violated.", "to be irritated with Y.", "raise their hand", "to feel extreme anger.", "to find Person Y"], "input": {"head": "PersonX smacks PersonY", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has the flu.", "Person X is lost in the school.", "The class is across campus.", "PersonX doesn't know their way across campus.", "PersonY's class is in another state.", "Person X is blind."], "input": {"head": "PersonX finds PersonY's class", "relation": "HinderedBy"}}
{"generation": "PersonX realizes something. PersonX did this to her", "references": ["to analyze a matter/issue", "none", "knowledge"], "input": {"head": "PersonX realizes something", "relation": "xIntent"}}
{"generation": "PersonX smacks PersonY. After, PersonX will want to get PersonY's attention", "references": ["to be ashamed", "to tell Person Y the reason that he did that", "to apologize to Person Y", "to apologize", "to diffuse the situation.", "to defend from further attacks.", "to make sure Y does not fight back."], "input": {"head": "PersonX smacks PersonY", "relation": "xWant"}}
{"generation": "PersonX leaves the ___ alone. After, PersonX will want to know who is the person who is the person who", "references": ["to move on to something else", "to walk away", "to start fresh", "to be less reliant"], "input": {"head": "PersonX leaves the ___ alone", "relation": "xWant"}}
{"generation": "PersonX tries to relax. The effect on PersonX will be similar to that of a normal person", "references": ["slows down heart beating", "lower down blood pressures", "breathes evenly", "breathes deeper", "mind runs fast"], "input": {"head": "PersonX tries to relax", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The TSA won't let it through security.", "Needs to stay home.", "Person X can't lift it.", "It's owner won't let PersonX take it out of the house.", "The item was confiscated by police.", "Stores do not allow it.", "There are restrictions in public areas.", "PersonY keeps it locked in t heir room."], "input": {"head": "PersonX takes it everywhere", "relation": "HinderedBy"}}
{"generation": "PersonX finds ___ to play with. The effect on others will be similar to that of a normal game", "references": ["none"], "input": {"head": "PersonX finds ___ to play with", "relation": "oEffect"}}
{"generation": "PersonX has to get it fixed. After that, he'll have to go back to the game and", "references": ["PersonX takes the flat tire to the mechanic"], "input": {"head": "PersonX has to get it fixed", "relation": "isBefore"}}
{"generation": "PersonX makes friendship bracelets. PersonX will be able to use them to make a necklace", "references": ["artisitc", "freindly", "loved", "friendly and appreciative of their friends.", "cherished"], "input": {"head": "PersonX makes friendship bracelets", "relation": "xReact"}}
{"generation": "PersonX follows PersonY's instructions. Before, PersonX needs to be able to use the \"X\" button to", "references": ["get a map", "to understand what PersonY is saying", "none", "get the instructions", "to listen to PersonY"], "input": {"head": "PersonX follows PersonY's instructions", "relation": "xNeed"}}
{"generation": "PersonX visits a farm. After, PersonX will want to talk to the farmer", "references": ["to to feed them", "start their own farm", "volunteer at farm", "to pet the animals", "learn about animals", "to check out the animals", "to buy some vegtables"], "input": {"head": "PersonX visits a farm", "relation": "xWant"}}
{"generation": "PersonX asks ___ for a raise. PersonX will be the one who gets the raise", "references": ["accomplished", "hopeful", "worried", "brave", "nervous"], "input": {"head": "PersonX asks ___ for a raise", "relation": "xReact"}}
{"generation": "PersonX squares PersonY's shoulders. The effect on PersonX will be the same as the effect on PersonY", "references": ["none", "helps Y with sports/task, etc", "uses energy"], "input": {"head": "PersonX squares PersonY's shoulders", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX still lives in the same small town they grew up in.", "PersonX has agorophobia.", "PersonX is remote", "personX doesn't have transportation to the party", "PersonX's partner won't let him go out.", "PersonX is isolated", "personX is in the hospital with a contagious disease", "PersonX's doctor has him in quarantine."], "input": {"head": "PersonX meets some new people", "relation": "HinderedBy"}}
{"generation": "PersonX has an important job interview. As a result, others feel that they are being treated unfairly", "references": ["none", "inquisitive"], "input": {"head": "PersonX has an important job interview", "relation": "oReact"}}
{"generation": "PersonX acts upon PersonY. The effect on PersonX will be the same as PersonY's effect on PersonY", "references": ["is prudent", "shakes their head", "tries to keep their balance", "is silent"], "input": {"head": "PersonX acts upon PersonY", "relation": "xEffect"}}
{"generation": "PersonX sets ___ to rights. After, PersonX will want to know what rights you have", "references": ["to tell everyone to calm down", "to make new policies", "to decide the issue", "to implement the decision"], "input": {"head": "PersonX sets ___ to rights", "relation": "xWant"}}
{"generation": "PersonX thanks ___ for comments. As a result, others feel that the game is too much of a mess", "references": ["gratified", "appreciated", "glad to have helped x"], "input": {"head": "PersonX thanks ___ for comments", "relation": "oReact"}}
{"generation": "PersonX organizes and ___ collectively is filled by the members of the group", "references": ["sorts", "files"], "input": {"head": "PersonX organizes and ___ collectively", "relation": "isFilledBy"}}
{"generation": "PersonX cuts the umbilical cord. PersonX is then placed in a chair and placed in a chair", "references": ["careful", "cautious", "helpful", "professional", "skilled", "determined"], "input": {"head": "PersonX cuts the umbilical cord", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has a name that's too long.", "A name was already picked", "The baby is not PersonX's to name.", "It is not the right gender", "The dog is not PersonX's to name.", "The boat does not belong to PersonX.", "The cat does not belong to PersonX.", "The document requires two people to be on it."], "input": {"head": "PersonX gives it PersonX's name", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have enough people around them", "PersonX's jealous boyfriend punishes them whenever they seek attention.", "PersonX isn't attractive enough for anyone to pay attention to them.", "PersonX is too shy"], "input": {"head": "PersonX attention whores", "relation": "HinderedBy"}}
{"generation": "PersonX becomes a great basketball player. Before, PersonX needs to be a great basketball player", "references": ["Purchases clothing and footwear for basketball", "Watches basketball tutorials to learn more skills", "Practices for hours.", "Joins a team", "Practises basketball everyday", "He wins lots of games."], "input": {"head": "PersonX becomes a great basketball player", "relation": "xNeed"}}
{"generation": "PersonX drives ___ in PersonY's new car. After, others will want to know what the hell is going on", "references": ["to make sure the vehicle is safe", "to talk to PersonX", "to get the keys back", "to call PersonX"], "input": {"head": "PersonX drives ___ in PersonY's new car", "relation": "oWant"}}
{"generation": "PersonX loses 100 pounds. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX loses 100 pounds", "relation": "oReact"}}
{"generation": "PersonX attends PersonX's father's ___. After, PersonX will want to know what the hell is going on", "references": ["to wish his father to go to heaven", "to pray", "to make a speech", "to make a toast", "to talk to father one last time", "to miss father", "to cry"], "input": {"head": "PersonX attends PersonX's father 's ___", "relation": "xWant"}}
{"generation": "PersonX loves the world gave. After, others will want to see him", "references": ["none"], "input": {"head": "PersonX loves the world gave", "relation": "oWant"}}
{"generation": "PersonX finds ___ anywhere. As a result, others feel that they are being punished for their actions", "references": ["good about x coming to see them", "none"], "input": {"head": "PersonX finds ___ anywhere", "relation": "oReact"}}
{"generation": "PersonX blows PersonX's wad. After that, PersonX gets a new wad", "references": ["PersonX no longer has mucus in their throat", "PersonX is appreciative", "PersonX looks for a part-time job"], "input": {"head": "PersonX blows PersonX's wad", "relation": "isBefore"}}
{"generation": "PersonX loves riding PersonY's bike. As a result, others feel that they are being treated unfairly", "references": ["joyful", "happy to help person x", "happy to be useful to person x"], "input": {"head": "PersonX loves riding PersonY's bike", "relation": "oReact"}}
{"generation": "PersonX prevents PersonY from coming. After that, PersonX will be able to use the same abilities", "references": ["PersonY flattens PersonX's tires"], "input": {"head": "PersonX prevents PersonY from coming", "relation": "isBefore"}}
{"generation": "You are likely to find a diary in a drawer somewhere", "references": ["desk", "friend's house"], "input": {"head": "diary", "relation": "AtLocation"}}
{"generation": "PersonX misses ___ at work. PersonX is not a member of the team", "references": ["Irregular", "Careless", "exhausted", "tired", "irresponsible", "unreliable"], "input": {"head": "PersonX misses ___ at work", "relation": "xAttr"}}
{"generation": "PersonX finally got home. Before, PersonX needs to be able to talk to his friends", "references": ["gas", "a car"], "input": {"head": "PersonX finally got home", "relation": "xNeed"}}
{"generation": "PersonX studies as much as PersonY could. As a result, others feel that they are more likely to be able to understand", "references": ["frustrated", "competitive", "determined as well"], "input": {"head": "PersonX studies as much as PersonY could", "relation": "oReact"}}
{"generation": "PersonX gets ___ from the library. After, others will want to know what the fuck you're doing", "references": ["to be heard", "none", "to interact further"], "input": {"head": "PersonX gets ___ from the library", "relation": "oWant"}}
{"generation": "PersonX gets the shoes. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX gets the shoes", "relation": "oReact"}}
{"generation": "PersonX hits it big. Before that, he's been a big part of the team's", "references": ["PersonX buys a lottery ticket"], "input": {"head": "PersonX hits it big", "relation": "isAfter"}}
{"generation": "PersonX refuses to move. After that, he is forced to fight the other members of the", "references": ["PersonX finally walks away"], "input": {"head": "PersonX refuses to move", "relation": "isBefore"}}
{"generation": "PersonX makes PersonY resistance. PersonX did this to me, and I'm not sure if it's", "references": ["to show his opposition to person y's policy", "persony to be rebellious"], "input": {"head": "PersonX makes PersonY resistance", "relation": "xIntent"}}
{"generation": "PersonX collects baseball cards. After that, he collects the cards and then sells them to the", "references": ["PersonX buys some new card", "PersonX shows his cards to his friends", "PersonX gives away 0 percent of them since they lost value"], "input": {"head": "PersonX collects baseball cards", "relation": "isBefore"}}
{"generation": "PersonX sees PersonX's mom. Before that, she's been a little bit of a jerk", "references": ["PersonX returns to their hometown"], "input": {"head": "PersonX sees PersonX's mom", "relation": "isAfter"}}
{"generation": "PersonX saves PersonY's ___ from PersonY's sins. PersonX is also able to save PersonY's ___ from Person", "references": ["forgiving", "martyrlike", "loving", "caring", "impressionable"], "input": {"head": "PersonX saves PersonY's ___ from PersonY's sins", "relation": "xAttr"}}
{"generation": "PersonX comes to PersonY's eyes. After that, she's going to have to deal with the fact", "references": ["PersonX stands on their tip toes"], "input": {"head": "PersonX comes to PersonY's eyes", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["It's the weekend and the vet is closed.", "The vet would cost too much.", "PersonX can't afford the vet fees.", "PersonX's car won't start.", "There isn't a vet in the area.", "PersonX doesn't have a car to get to the vet."], "input": {"head": "PersonX takes it to the vet", "relation": "HinderedBy"}}
{"generation": "PersonX obeys every ___. After, others will want to know what the ___", "references": ["praise PersonX", "hold authority", "none", "to have more people following", "to have more people listening"], "input": {"head": "PersonX obeys every ___", "relation": "oWant"}}
{"generation": "PersonX visits PersonY's mother. PersonX is a bit of a jerk, but she's a", "references": ["social", "moral", "polite", "thoughtful", "kind"], "input": {"head": "PersonX visits PersonY's mother", "relation": "xAttr"}}
{"generation": "PersonX needs a shot. PersonX will be able to use his abilities to help you", "references": ["ill", "worried", "sick", "annoyed", "nervous", "weak"], "input": {"head": "PersonX needs a shot", "relation": "xReact"}}
{"generation": "PersonX hears ___ at night is filled by the same thing as the one that makes you feel", "references": ["leaves", "an owl", "talking", "crickets"], "input": {"head": "PersonX hears ___ at night", "relation": "isFilledBy"}}
{"generation": "PersonX asks PersonY for money. After, PersonX will want to know who the person is", "references": ["To purchase food", "to go pay bills", "to sign a payback agreement", "to pocket money", "to go to someone else to ask for money", "to keep money in wallet", "to thank PersonY", "to say thanks to PersonY"], "input": {"head": "PersonX asks PersonY for money", "relation": "xWant"}}
{"generation": "a contact can be used for the following purposes:\n\n1", "references": ["find phone number", "signify acceptance of employement", "let persony  get together", "mail letter", "use as a job reference", "sign for house", "get in touch with someone on the phone", "converse with someone", "place in one's eye", "see better", "send bill", "put into the eye to improve vision", "help you move apartments"], "input": {"head": "contact", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is sick in bed at home.", "PersonX was sent home sick.", "PersonX is lazy.", "PersonX has been called for jury duty.", "PersonX was injured at work and is in the hospital.", "Their boss didn't give them the full instructions.", "PersonX is unmotivated.", "Their boss won't give them a raise."], "input": {"head": "PersonX is working hard at PersonX's job", "relation": "HinderedBy"}}
{"generation": "PersonX works PersonY's way up. After that, you can use PersonX to get the same effect", "references": ["PersonX fires PersonY"], "input": {"head": "PersonX works PersonY's way up", "relation": "isBefore"}}
{"generation": "a lemons can be used for a variety of purposes, including:\n\n\u2022", "references": ["grate zest into a vinaigrette", "add a fresh look to a room", "extract juice from", "squeeze for the juice", "add flavor to food", "stop pepper spray", "make lemonade", "freeze into ice cubes", "squeeze into a cup", "squeeze into someones eyes while attacking them", "extract juice", "ground up skin for dessert", "squeeze into the pitcher", "press for juice", "use as a projectile in a catapult"], "input": {"head": "lemons", "relation": "ObjectUse"}}
{"generation": "PersonX snatches ___ away. After, others will want to know what's going on", "references": ["to chase PersonX", "Chase PersonX", "Report crime", "to call the police", "none"], "input": {"head": "PersonX snatches ___ away", "relation": "oWant"}}
{"generation": "PersonX is no longer scared. After that, he's just a normal guy", "references": ["PersonX rides their bike without being afraid to fall"], "input": {"head": "PersonX is no longer scared", "relation": "isBefore"}}
{"generation": "PersonX feels refreshed. After that, he's still a bit of a mystery", "references": ["PersonX dries PersonX's hair", "PersonX lays down in bed", "PersonX is going to the club with their friends"], "input": {"head": "PersonX feels refreshed", "relation": "isBefore"}}
{"generation": "PersonX sits down next to PersonY. Before, PersonX needs to be able to talk to PersonY, but Person", "references": ["walk over", "to talk to PersonY", "to look for another seat", "get up", "none"], "input": {"head": "PersonX sits down next to PersonY", "relation": "xNeed"}}
{"generation": "PersonX goes elsewhere. After that, he's a bit more of a mystery", "references": ["PersonX ate dinner at a restaurant", "PersonX finds a bar that is open", "PersonX walks into a new store"], "input": {"head": "PersonX goes elsewhere", "relation": "isBefore"}}
{"generation": "PersonX thinks would become. PersonX is a very good person, but he's not a", "references": ["introspective", "hopeful", "curious", "dreamer", "reflective", "futuristic"], "input": {"head": "PersonX thinks would become", "relation": "xAttr"}}
{"generation": "PersonX draws PersonX's last breath. PersonX is a little confused", "references": ["elderly", "motionless", "unlucky", "dying", "helpless", "alive", "unwell", "pitiful, helpless"], "input": {"head": "PersonX draws PersonX's last breath", "relation": "xAttr"}}
{"generation": "PersonX moves PersonX's car. After, PersonX will want to go to the car and get the car back", "references": ["make sure they are parked correctly", "to get out of the car", "to wash the car.", "get out of car", "to place something else in its place.", "to lock the car"], "input": {"head": "PersonX moves PersonX's car", "relation": "xWant"}}
{"generation": "PersonX pisses money up the wall. After that, he's a dick", "references": ["PersonX is bankrupt"], "input": {"head": "PersonX pisses money up the wall", "relation": "isBefore"}}
{"generation": "PersonX closes that day. PersonX will be the one who will be the one who will be", "references": ["responsible", "relieved", "tired"], "input": {"head": "PersonX closes that day", "relation": "xReact"}}
{"generation": "PersonX gets the shot. After that, he's back in the game", "references": ["PersonX cooks deer"], "input": {"head": "PersonX gets the shot", "relation": "isBefore"}}
{"generation": "PersonX takes ___ daily. PersonX did this to me", "references": ["a vitamin", "also happy satisfied", "to stay healthy"], "input": {"head": "PersonX takes ___ daily", "relation": "xIntent"}}
{"generation": "PersonX watches old movies. PersonX will be watching the movies", "references": ["happy", "excited", "good", "pleased", "entertained", "satisfied"], "input": {"head": "PersonX watches old movies", "relation": "xReact"}}
{"generation": "PersonX stops being friends. Before, PersonX needs to be friends with a certain person", "references": ["none"], "input": {"head": "PersonX stops being friends", "relation": "xNeed"}}
{"generation": "PersonX keeps the peace. The effect on others will be minimal", "references": ["they do not argue", "none", "they resolve their issues"], "input": {"head": "PersonX keeps the peace", "relation": "oEffect"}}
{"generation": "PersonX waits for PersonY answer. After, others will want to know what the answer is", "references": ["to answer them", "to answer quickly", "to help them with other things", "to be helpful to person x"], "input": {"head": "PersonX waits for PersonY answer", "relation": "oWant"}}
{"generation": "PersonX shows schematically in figure. PersonX will be the first to be shown", "references": ["accomplished", "knowledgeable", "proud", "satisfied"], "input": {"head": "PersonX shows schematically in figure", "relation": "xReact"}}
{"generation": "PersonX makes PersonY's day. After, others will want to know what's going on", "references": ["They kiss", "to thank hom", "to hug him", "They go home", "enjoyment", "celebrate"], "input": {"head": "PersonX makes PersonY's day", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is not near PersonX", "PersonY told PersonX not to touch PersonY.", "PersonY is protected by armed guards.", "PersonY lives in a different state.", "PersonY ran away from PersonX.", "PersonX's hands are tied", "PersonY ducked under PersonX's hands."], "input": {"head": "PersonX shields PersonY's eyes", "relation": "HinderedBy"}}
{"generation": "PersonX reaches exiting customers. PersonX will be notified of the change and will be able to make", "references": ["helpful", "friendly", "proud", "assured", "satisfied"], "input": {"head": "PersonX reaches exiting customers", "relation": "xReact"}}
{"generation": "PersonX uses PersonY's middle finger. Before, PersonX needs to use the middle finger to move the cursor", "references": ["to make PersonY comfortable", "to reach for PersonY", "to become angry", "none", "to grab PersonY's middle finger"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "xNeed"}}
{"generation": "PersonX passes PersonX's exam. As a result, others feel that PersonX is not qualified to be a teacher", "references": ["none"], "input": {"head": "PersonX passes PersonX's exam", "relation": "oReact"}}
{"generation": "a pots can be used for a variety of purposes, including:\n\n-", "references": ["cook the dish in", "wake someone up", "heat the food", "stack up in the cabinet", "cook with", "Make food with", "put ingredients in", "hold the plants", "plant seeds", "boil the water", "make other items", "store change", "make music", "cook food in", "boil water", "create meal", "prepare the food", "cook in", "cook the food", "hang on a rack", "to cook meal", "boil the vegetables", "carry water", "boil things in", "play drums with", "cook the food in", "combine ingredients in", "heat food up", "hold the food", "cook PersonY", "make diner"], "input": {"head": "pots", "relation": "ObjectUse"}}
{"generation": "PersonX doesn't know what to expect. Before, PersonX needs to know what to expect", "references": ["He gets worried.", "none", "He hears of war."], "input": {"head": "PersonX does n't know what to expect", "relation": "xNeed"}}
{"generation": "PersonX begs PersonY's parents. The effect on others will be different", "references": ["ignores PersonX", "get yelled at", "rejects PersonX", "none", "smile"], "input": {"head": "PersonX begs PersonY's parents", "relation": "oEffect"}}
{"generation": "PersonX decides to enter. PersonX did this to get the game to work", "references": ["to go in the room"], "input": {"head": "PersonX decides to enter", "relation": "xIntent"}}
{"generation": "PersonX has a bad dream. After that, he's a little bit more of a jerk", "references": ["PersonX wakes up at 3 and cannot get back to sleep"], "input": {"head": "PersonX has a bad dream", "relation": "isBefore"}}
{"generation": "PersonX cuts a swath. After, PersonX will want to know who you are, and who you are not", "references": ["to collect the crop", "wash it", "to sew it", "to get rid of it", "to burn it", "to get past it"], "input": {"head": "PersonX cuts a swath", "relation": "xWant"}}
{"generation": "an ergonomic chair can be used for a variety of tasks, including:\n\nWorking", "references": ["protect your posture", "humans comfort", "provide a comfortable seat", "work long hours", "give as a christmas present", "be healthier", "comfortable", "impress someone you like", "sit at desk", "sitting in", "comfort", "work at computer", "look like you're all modern and cool", "cure muscle soreness", "avoid back pain", "sitting comfortably", "sit comfortable", "sit comfortably"], "input": {"head": "ergonomic chair", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The stove won't turn on", "PersonX's mother won't give them the spaghetti recipe.", "The stove is broken", "PersonX forgot to buy spaghetti at the grocery store.", "PersonX can't boil water", "PersonX does not have a stove.", "The pot is already dirty", "PersonX's roommate is hogging the kitchen.", "PersonX's partner didn't buy the noodles they asked for."], "input": {"head": "PersonX cooks spaghetti", "relation": "HinderedBy"}}
{"generation": "PersonX looks a ___ in the face. PersonX did this to me", "references": ["i like this fact in this face"], "input": {"head": "PersonX looks a ___ in the face", "relation": "xIntent"}}
{"generation": "PersonX plays the gender card. PersonX will be the one who is the most important person in the", "references": ["sad", "like they got away with something", "ashamed", "relieved", "satisfied"], "input": {"head": "PersonX plays the gender card", "relation": "xReact"}}
{"generation": "PersonX sees PersonY every day. Before that, he was a kid who was a little bit of", "references": ["PersonX attends a private school", "PersonX moves to the dorm", "PersonX lives next door to PersonY"], "input": {"head": "PersonX sees PersonY every day", "relation": "isAfter"}}
{"generation": "PersonX pays PersonY taxes. Before that, PersonX pays PersonY taxes", "references": ["PersonX earns an accounting degree", "PersonX gets a big paycheck"], "input": {"head": "PersonX pays PersonY taxes", "relation": "isAfter"}}
{"generation": "PersonX spends a lot of time together. PersonX is a very good friend and a very good person", "references": ["Sociable", "clingy", "needy", "Friendly", "loving", "affectionate"], "input": {"head": "PersonX spends a lot of time together", "relation": "xAttr"}}
{"generation": "PersonX learns new things. PersonX is a very smart person, and she's also a", "references": ["motivated", "understanding", "educated", "thoughtful", "knowledgeable", "intelligent"], "input": {"head": "PersonX learns new things", "relation": "xAttr"}}
{"generation": "PersonX knows PersonY's opinion. Before, PersonX needs to know PersonY's opinion", "references": ["to converse with PersonY", "to form an opinion", "to ask PersonY", "to reject other opinions", "to gather information about PersonY", "to listen carefully to PersonY"], "input": {"head": "PersonX knows PersonY's opinion", "relation": "xNeed"}}
{"generation": "PersonX renews PersonX's driver's license. As a result, others feel that the license is not valid", "references": ["none"], "input": {"head": "PersonX renews PersonX's driver 's license", "relation": "oReact"}}
{"generation": "PersonX puts PersonX's head in the sand. The effect on PersonX will be similar to the effect of a normal person's head", "references": ["\"Can't see", "irritates their eyes", "He says \"\"Now you're an ostrich.\"\".", "Person Y hits him.", "cant hear", "head gets filled with sand", "cant see\""], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "xEffect"}}
{"generation": "PersonX changes ___ frequently. PersonX did this to make it easier to understand the user's behavior", "references": ["to find a job they enjoy"], "input": {"head": "PersonX changes ___ frequently", "relation": "xIntent"}}
{"generation": "PersonX knows by PersonY's name. After, others will want to know who you are", "references": ["none"], "input": {"head": "PersonX knows by PersonY's name", "relation": "oWant"}}
{"generation": "PersonX thinks would happen. After that, he's going to have to figure out how to", "references": ["PersonX reads the end"], "input": {"head": "PersonX thinks would happen", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The court allows only Person Y to get the ticket.", "PersonX can't find PersonY.", "Person X has no documentation to get the ticket.", "PersonX can't find the ticket.", "Persony keeps their ticket on them at all times.", "personx is too clumsy to take it away from them."], "input": {"head": "PersonX gets PersonY's ticket", "relation": "HinderedBy"}}
{"generation": "PersonX always makes ___. After, PersonX will want to use the ___", "references": ["to be appreciated.", "to make something else", "a lucrative career", "to get money.", "to go to a good college", "to continue making soething"], "input": {"head": "PersonX always makes ___", "relation": "xWant"}}
{"generation": "PersonX goes down the tubes. After, PersonX will want to know what the hell is going on", "references": ["to have fun", "to relax", "to be miserable", "to drown their sorrows"], "input": {"head": "PersonX goes down the tubes", "relation": "xWant"}}
{"generation": "PersonX dates a girl. As a result, others feel that they are being treated unfairly", "references": ["happy"], "input": {"head": "PersonX dates a girl", "relation": "oReact"}}
{"generation": "PersonX finds treasure yet. Before that, he's been working on his own", "references": ["PersonX goes on a voyage alone"], "input": {"head": "PersonX finds treasure yet", "relation": "isAfter"}}
{"generation": "PersonX gives a small smile. Before that, he says, \"I'm sorry, but I", "references": ["PersonX receives a compliment from a stranger"], "input": {"head": "PersonX gives a small smile", "relation": "isAfter"}}
{"generation": "PersonX studies as much. PersonX did this to me, and I'm glad I did", "references": ["to graduate."], "input": {"head": "PersonX studies as much", "relation": "xIntent"}}
{"generation": "PersonX loves ___ than anything. PersonX is a very good person, and he's a very", "references": ["invested", "admiring", "excited", "thrilled", "caring", "affectionate"], "input": {"head": "PersonX loves ___ than anything", "relation": "xAttr"}}
{"generation": "PersonX finds a gold ring. Before that, he finds a gold ring", "references": ["PersonX digs in the dirt"], "input": {"head": "PersonX finds a gold ring", "relation": "isAfter"}}
{"generation": "PersonX commits ___ with PersonY in PersonX's heart. The effect on others will be the same", "references": ["becomes angry", "none", "becomes sad"], "input": {"head": "PersonX commits ___ with PersonY in PersonX's heart", "relation": "oEffect"}}
{"generation": "PersonX finds PersonX's daughter. After, others will want to know who she is", "references": ["go home safe", "run away", "to hug PesonX", "to cry"], "input": {"head": "PersonX finds PersonX's daughter", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can't reach PersonY in the king-sized bed", "PersonX does not want to force PersonY to do something they don't want to do", "They have frozen shoulder.", "personY is too far away from personX."], "input": {"head": "PersonX wraps PersonY's arm around PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX gets a second job. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX gets a second job", "relation": "oReact"}}
{"generation": "PersonX hits by lightning. Before that, he's a little bit more of a character", "references": ["PersonX is walking in the rain"], "input": {"head": "PersonX hits by lightning", "relation": "isAfter"}}
{"generation": "PersonX kisses PersonY's way. Before, PersonX needs to be able to talk to PersonY, but Person", "references": ["to make PersonY comfortable", "brush their teeth", "find person y", "to move their face towards PersonY", "none"], "input": {"head": "PersonX kisses PersonY's way", "relation": "xNeed"}}
{"generation": "PersonX buys PersonY one. The effect on PersonX will be the same as PersonY's effect on PersonX", "references": ["Ask for a favor in return", "Give the gift to Y", "person x brings it home", "they are thanked", "person x eats it", "they have less money"], "input": {"head": "PersonX buys PersonY one", "relation": "xEffect"}}
{"generation": "PersonX teaches ___ to use. PersonX did this to me", "references": ["to educate people", "to educate the poor."], "input": {"head": "PersonX teaches ___ to use", "relation": "xIntent"}}
{"generation": "PersonX forgives ___ PersonY's trespasses. After, PersonX will want to know who is the person who is trespassing on", "references": ["to build good relationship with people", "make friends with Person Y", "to enforce more rules for Person Y", "forget the incident", "it to not happen again", "to take people into confidence"], "input": {"head": "PersonX forgives ___ PersonY's trespasses", "relation": "xWant"}}
{"generation": "PersonX meets the band. PersonX is a member of the band, and is a member", "references": ["motivated", "curious", "brave", "interested", "adventerous", "fun to be around", "lively"], "input": {"head": "PersonX meets the band", "relation": "xAttr"}}
{"generation": "PersonX meets friends. After, others will want to know what you're up to", "references": ["none"], "input": {"head": "PersonX meets friends", "relation": "oWant"}}
{"generation": "PersonX misses class. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX misses class", "relation": "xIntent"}}
{"generation": "PersonX buys a laptop. PersonX is a hacker", "references": ["rich", "happy", "workaholic", "excited", "interested", "pleased", "determined"], "input": {"head": "PersonX buys a laptop", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no manners.", "PersonX was sentenced to life-long solitary confinement by the judge", "A kidnapper dropped PersonX off on a deserted island", "PersonX doesn't like people.", "PersonX is contagious.", "PersonX has social anxiety.", "PersonX is a rat.", "PersonX is a recluse."], "input": {"head": "PersonX lives among people", "relation": "HinderedBy"}}
{"generation": "PersonX adds ___ to the fire is filled by the fire", "references": ["fuel", "twigs", "kettles", "kindling", "charcoal", "paper", "wood", "gasoline", "leaves", "water"], "input": {"head": "PersonX adds ___ to the fire", "relation": "isFilledBy"}}
{"generation": "attorney can be found at:\n\nhttp://www", "references": ["represent in lawsuit", "state case", "right wrong", "prove case", "put clients mind at ease"], "input": {"head": "attorney", "relation": "CapableOf"}}
{"generation": "PersonX loves the dog. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX loves the dog", "relation": "oEffect"}}
{"generation": "a stockings can be used for the following purposes:\n\n1", "references": ["wear on hands", "make a scarf out of", "add another element to a Halloween costume", "keep from getting cold", "put gifts in", "keep warm in cooler weather", "look sexy", "rob a bank", "tie to other stockings as a rope", "pull on his feet", "wear on his feet", "wear for later time"], "input": {"head": "stockings", "relation": "ObjectUse"}}
{"generation": "PersonX runs straight. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX runs straight", "relation": "oWant"}}
{"generation": "PersonX buys the computer. Before that, he buys the computer", "references": ["PersonX narrows down a few computer options to one"], "input": {"head": "PersonX buys the computer", "relation": "isAfter"}}
{"generation": "PersonX dresses in PersonY's clothes. Before that, she wears a dress that looks like a dress", "references": ["PersonX borrows clothes for the concert"], "input": {"head": "PersonX dresses in PersonY's clothes", "relation": "isAfter"}}
{"generation": "PersonX practices together. PersonX did this to me, and I'm not sure if it's", "references": ["to get good", "to be the best", "to improve skills"], "input": {"head": "PersonX practices together", "relation": "xIntent"}}
{"generation": "PersonX smells something foul. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX smells something foul", "relation": "oReact"}}
{"generation": "PersonX kisses PersonY passionately. After that, they kiss PersonX again", "references": ["PersonX and PersonY go inside"], "input": {"head": "PersonX kisses PersonY passionately", "relation": "isBefore"}}
{"generation": "PersonX throws the ball. After that, he throws the ball to the other team's quarterback", "references": ["PersonX tells his dog to fetch the ball"], "input": {"head": "PersonX throws the ball", "relation": "isBefore"}}
{"generation": "PersonX is happy for PersonY. PersonX is happy for PersonY", "references": ["compassionate", "kind", "thoughtful", "delighted", "joyful"], "input": {"head": "PersonX is happy for PersonY", "relation": "xAttr"}}
{"generation": "PersonX smells terrible. PersonX will be a bit more aggressive and aggressive", "references": ["unsanitary", "gross", "dirty", "ashamed", "disgusting"], "input": {"head": "PersonX smells terrible", "relation": "xReact"}}
{"generation": "PersonX turns PersonY's life around. PersonX did this to her, and she's done it to everyone else", "references": ["to be helpful", "to give a good future"], "input": {"head": "PersonX turns PersonY's life around", "relation": "xIntent"}}
{"generation": "PersonX makes PersonY's day. Before that, he was a very good player", "references": ["PersonX buys flowers for PersonY"], "input": {"head": "PersonX makes PersonY's day", "relation": "isAfter"}}
{"generation": "PersonX goes to PersonY's place. The effect on others will be different", "references": ["hears a knock", "none", "walks to the door"], "input": {"head": "PersonX goes to PersonY's place", "relation": "oEffect"}}
{"generation": "PersonX plays many sports. After, PersonX will want to play basketball, soccer, and baseball", "references": ["improve skills", "meet people", "to demonstrate athleticism", "to train for the olympics", "to be in shape", "compete", "to try out for a professional soccer team", "get exercise"], "input": {"head": "PersonX plays many sports", "relation": "xWant"}}
{"generation": "PersonX calls PersonX's work. Before that, PersonX had been working on a project called \"", "references": ["PersonX feels very sick in the morning"], "input": {"head": "PersonX calls PersonX's work", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is racked with indecision.", "Person X wants to bring both kittens home.", "It isn't PersonX's turn yet", "They like them all", "They all cost the same", "PersonX isn't allowed to have one"], "input": {"head": "PersonX chooses one", "relation": "HinderedBy"}}
{"generation": "PersonX preaches god's ___. PersonX will be the only one who can do it", "references": ["good"], "input": {"head": "PersonX preaches god 's ___", "relation": "xReact"}}
{"generation": "PersonX wants to clean PersonY's room. Before that, he's going to have to clean PersonZ's", "references": ["PersonY lives in filth"], "input": {"head": "PersonX wants to clean PersonY's room", "relation": "isAfter"}}
{"generation": "PersonX finds ___ at home. PersonX did this to her, and she's not happy", "references": ["less commute."], "input": {"head": "PersonX finds ___ at home", "relation": "xIntent"}}
{"generation": "PersonX is able to fix it. As a result, others feel that the game is too complex and too difficult", "references": ["none"], "input": {"head": "PersonX is able to fix it", "relation": "oReact"}}
{"generation": "PersonX books a ticket. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX books a ticket", "relation": "oEffect"}}
{"generation": "PersonX gets tangled. After that, he's a little more of a jerk", "references": ["PersonX is stuck and waits for help"], "input": {"head": "PersonX gets tangled", "relation": "isBefore"}}
{"generation": "PersonX cann't believe PersonY's luck. After that, he's going to have to figure out how to", "references": ["PersonX congratulates PersonY on their winnings"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The food is not ready yet.", "The food came out spoiled.", "PersonX had oral surgery and cant eat", "PersonX is on a liquid diet.", "PersonX is sick and can not eat off me or they would get me sick", "PersonY stole the sandwich.", "PersonX has allergies to the food.", "PersonY knocked PersonX's teeth out."], "input": {"head": "PersonX takes my first bite", "relation": "HinderedBy"}}
{"generation": "PersonX smells something bad. PersonX is a very good person", "references": ["aware", "finicky", "alert", "scared", "sensitive", "observant", "in the moment", "nervous"], "input": {"head": "PersonX smells something bad", "relation": "xAttr"}}
{"generation": "PersonX employs another ___. The effect on others will be the same as the effect on themselves", "references": ["none"], "input": {"head": "PersonX employs another ___", "relation": "oEffect"}}
{"generation": "a side mirrors can be used for this purpose", "references": ["see on either side of the car", "see cars behind you", "turn into a vanity mirror", "affix to a window to see new angles", "parallel park", "install next to your computer so you can see what's behind you", "glue in multiples as a collage", "see while hauling objects", "apply lipstick", "comb your hair", "adjust to their preferred setting", "view vehicles behind you"], "input": {"head": "side mirrors", "relation": "ObjectUse"}}
{"generation": "PersonX fails to even go platinum. After that, he's a total loser", "references": ["PersonX quits the music industry", "PersonX cries after reading the news of their failure"], "input": {"head": "PersonX fails to even go platinum", "relation": "isBefore"}}
{"generation": "PersonX convinces PersonX's parents. The effect on PersonX will be similar to that of a normal person", "references": ["none", "personX can do what they want", "personX gains freedom"], "input": {"head": "PersonX convinces PersonX's parents", "relation": "xEffect"}}
{"generation": "PersonX keeps PersonX's fingers crossed. PersonX is a very good player, and I'm sure he", "references": ["hopefull", "hopeful", "sneaky", "faithful", "nervous"], "input": {"head": "PersonX keeps PersonX's fingers crossed", "relation": "xAttr"}}
{"generation": "PersonX asks PersonY's sister. The effect on others will be different", "references": ["Person Y's sister goes home.", "none", "Person Y's sister explains in detail"], "input": {"head": "PersonX asks PersonY's sister", "relation": "oEffect"}}
{"generation": "PersonX finishes ___ last night. PersonX will be back in the studio tomorrow", "references": ["satisfied", "relieved and pleased to be finished"], "input": {"head": "PersonX finishes ___ last night", "relation": "xReact"}}
{"generation": "PersonX feels helpless. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX feels helpless", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY's dad is not at home.", "PersonY's dad is deaf and PersonX doesn't know sign", "PersonY's dad doesn't help people", "PersonY's dad is too busy", "PersonY's dad speaks a language PersonX doesn't know.", "PersonY's dad won't answer the phone."], "input": {"head": "PersonX asks PersonY's dad for help", "relation": "HinderedBy"}}
{"generation": "PersonX wears makeup. After that, she wears a black dress with a black skirt and", "references": ["PersonX takes pictures with their date"], "input": {"head": "PersonX wears makeup", "relation": "isBefore"}}
{"generation": "PersonX loves reading. PersonX did this to me when I was a kid", "references": ["to learn about new things", "none"], "input": {"head": "PersonX loves reading", "relation": "xIntent"}}
{"generation": "PersonX cleans PersonY. PersonX did this to PersonY", "references": ["to be helpful", "helpful", "to handle a problem"], "input": {"head": "PersonX cleans PersonY", "relation": "xIntent"}}
{"generation": "PersonX eventually moved. After that, he was a regular at the club, and was", "references": ["PersonX opens up an business store, one that they can llive in upstairs"], "input": {"head": "PersonX eventually moved", "relation": "isBefore"}}
{"generation": "PersonX asks PersonY to try. Before that, PersonY asks PersonX to try", "references": ["PersonX pushes a car with a stranger who doesn't really help much", "PersonX is struggling to open the jar"], "input": {"head": "PersonX asks PersonY to try", "relation": "isAfter"}}
{"generation": "PersonX has a laugh. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX has a laugh", "relation": "oEffect"}}
{"generation": "PersonX finds the ring. The effect on PersonX will be similar to that of a normal ring", "references": ["feels relieved", "becomes surprised", "stores it safely", "smiles", "PersonX feels the stress disappear after finding the ring and locating it", "wears ring", "keeps ring safe", "PersonX is relieved to have found the ring"], "input": {"head": "PersonX finds the ring", "relation": "xEffect"}}
{"generation": "PersonX cleans PersonY. As a result, others feel that PersonX is a better fit for PersonY", "references": ["good", "embarassed", "better", "cared for"], "input": {"head": "PersonX cleans PersonY", "relation": "oReact"}}
{"generation": "PersonX gets everything. PersonX will be the one who gets everything", "references": ["favored"], "input": {"head": "PersonX gets everything", "relation": "xReact"}}
{"generation": "PersonX stops at a store. As a result, others feel the same way", "references": ["none", "glad to have bread"], "input": {"head": "PersonX stops at a store", "relation": "oReact"}}
{"generation": "PersonX puts ___ in a box. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX puts ___ in a box", "relation": "oReact"}}
{"generation": "PersonX finds a good spot. After, PersonX will want to know what the other person is doing", "references": ["to lie down", "take a nap", "to park the car", "to enter the event", "to sit down"], "input": {"head": "PersonX finds a good spot", "relation": "xWant"}}
{"generation": "PersonX demands PersonY's attention. As a result, others feel the need to intervene", "references": ["annoyed at personx", "annoyed", "scared"], "input": {"head": "PersonX demands PersonY's attention", "relation": "oReact"}}
{"generation": "PersonX has anger problems. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX has anger problems", "relation": "xIntent"}}
{"generation": "stay in bed. PersonX did this because he was afraid of being seen by his wife", "references": ["back hurts", "you're sick", "feel ill", "were sick", "have sore throat", "don't feel well", "you're still tired", "of cold"], "input": {"head": "stay in bed", "relation": "xReason"}}
{"generation": "PersonX looks better. After, others will want to see the same", "references": ["none"], "input": {"head": "PersonX looks better", "relation": "oWant"}}
{"generation": "PersonX takes a new job. As a result, others feel that they are being treated unfairly", "references": ["happy", "none", "relieved"], "input": {"head": "PersonX takes a new job", "relation": "oReact"}}
{"generation": "PersonX feels a ___ better. After, PersonX will want to be able to see the world and the people around", "references": ["sleep", "to establish healthy habits", "get some food", "to go back to work or school", "breath deeply", "to follow up with the doctor", "get a drink"], "input": {"head": "PersonX feels a ___ better", "relation": "xWant"}}
{"generation": "PersonX gets ___, though. PersonX did this to me", "references": ["to better something", "something", "to replace the radio."], "input": {"head": "PersonX gets ___ , though", "relation": "xIntent"}}
{"generation": "PersonX buys the computer. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX buys the computer", "relation": "oEffect"}}
{"generation": "PersonX gives the ___ PersonY's name. Before, PersonX needs to know the name of the person who is the person", "references": ["to be familiar", "to be socializing", "to know Y's name", "pay for the hotel", "make a hotel resrvation", "to go there"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "xNeed"}}
{"generation": "PersonX feels very lucky. PersonX is a very talented person, and I'm very happy", "references": ["Successful", "successful", "happy", "excited", "charmed", "Fortunate", "fortuitous"], "input": {"head": "PersonX feels very lucky", "relation": "xAttr"}}
{"generation": "You are likely to find a vaccum in a lot of places", "references": ["space"], "input": {"head": "vaccum", "relation": "AtLocation"}}
{"generation": "PersonX wants to learn karate. Before, PersonX needs to learn karate", "references": ["none"], "input": {"head": "PersonX wants to learn karate", "relation": "xNeed"}}
{"generation": "PersonX is twenty minutes late. PersonX did this to me", "references": ["be a perfectionist", "none"], "input": {"head": "PersonX is twenty minutes late", "relation": "xIntent"}}
{"generation": "PersonX is a web developer. Before that, he was a programmer at Microsoft", "references": ["PersonX went to college"], "input": {"head": "PersonX is a web developer", "relation": "isAfter"}}
{"generation": "PersonX loses PersonX's sense. Before, PersonX needs to be able to see the world around him, but", "references": ["none"], "input": {"head": "PersonX loses PersonX's sense", "relation": "xNeed"}}
{"generation": "PersonX gives PersonY impression. Before, PersonX needs to be able to talk to PersonY", "references": ["to have a discussion with Persony", "to meet PersonY", "to have been interviewed by PersonY", "to find PersonY", "to talk to  PersonY", "none", "to get PersonY's attention"], "input": {"head": "PersonX gives PersonY impression", "relation": "xNeed"}}
{"generation": "PersonX loves reading books. PersonX is a fan of the Harry Potter series and has been", "references": ["curious", "investigative", "normal", "bookworm", "nerdy", "learned"], "input": {"head": "PersonX loves reading books", "relation": "xAttr"}}
{"generation": "PersonX saves PersonY's ___ from PersonY's sins. PersonX did this to PersonY's sins, and PersonY's sins", "references": ["them to be saved spiritually", "to help"], "input": {"head": "PersonX saves PersonY's ___ from PersonY's sins", "relation": "xIntent"}}
{"generation": "PersonX looks at PersonY like that. Before, PersonX needs to be able to see PersonY's face", "references": ["to look at PersonY", "to be near PersonY", "to walk up to PersonY", "to see PersonY", "none"], "input": {"head": "PersonX looks at PersonY like that", "relation": "xNeed"}}
{"generation": "PersonX places ___ to end. PersonX is not a member of the group", "references": ["careful", "smart", "crafty", "helpful", "thoughtful", "responsible"], "input": {"head": "PersonX places ___ to end", "relation": "xAttr"}}
{"generation": "PersonX throws the food. PersonX will be able to pick up the food and return it to", "references": ["powerful", "mischievous", "angry", "disgusted"], "input": {"head": "PersonX throws the food", "relation": "xReact"}}
{"generation": "PersonX takes a towel to the beach. After that, he goes to the beach and takes a shower", "references": ["PersonX lays on the beach"], "input": {"head": "PersonX takes a towel to the beach", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X suffers from a disorder, and is not in control of themselves.", "PersonX has brain damage and lost the part that deals with self control.", "a doctor put person x on psychological drugs", "person x's wife keeps making them angry on purpose", "Person X is a addictited, and cannot stop themselves.", "PersonX is lazy.", "PersonX is a slave whose actions are forced by another person.", "PersonX is unmotivated."], "input": {"head": "PersonX changes PersonX's behavior", "relation": "HinderedBy"}}
{"generation": "PersonX arrives soon. PersonX is a very nice guy, but he's not a", "references": ["on time", "consciensious", "curious", "relieved", "punctual"], "input": {"head": "PersonX arrives soon", "relation": "xAttr"}}
{"generation": "PersonX replaces the tire. After, PersonX will want to remove the tire", "references": ["to drive home", "to keep driving", "to be paid", "drive the vehicle", "to buy another spare", "to get in the car", "to get a move on", "to put the other tire away"], "input": {"head": "PersonX replaces the tire", "relation": "xWant"}}
{"generation": "PersonX takes PersonY place. After, others will want to know who is the person who is the person who", "references": ["to thank PersonX", "to support PersonX", "to go away and never talk to PersonX", "to teach PersonX everything", "to push PersonX away"], "input": {"head": "PersonX takes PersonY place", "relation": "oWant"}}
{"generation": "PersonX looks like fun. PersonX did this to me", "references": ["to be friendly and optimistic."], "input": {"head": "PersonX looks like fun", "relation": "xIntent"}}
{"generation": "PersonX starts walking. The effect on PersonX will be similar to that of a normal person", "references": ["gets sweaty", "loses weight", "get's some exercise", "get's where they are going"], "input": {"head": "PersonX starts walking", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["he has no car right now", "PersonX doesn't want to get into trouble.", "The doctor has PersonX locked in a room", "PersonX does not own a car.", "PersonX doesn't want to risk it.", "his car has too many safety features", "PersonX does not have a license.", "PersonXs wife took the car keys"], "input": {"head": "PersonX gets into a car accident", "relation": "HinderedBy"}}
{"generation": "an invitation cards can be used for the following purposes:\n\nTo obtain a card", "references": ["provide details of gathering", "use to write a note", "invite people", "save the date", "tie to a bycycle to create an engine noise", "build a card tower with", "shred when the wedding is canceled", "send in the mail", "send for a wedding"], "input": {"head": "invitation cards", "relation": "ObjectUse"}}
{"generation": "PersonX buys anything. After that, he buys anything", "references": ["PersonX says that PersonX should not have wasted PersonX's money"], "input": {"head": "PersonX buys anything", "relation": "isBefore"}}
{"generation": "PersonX joins the swim team. PersonX did this to help her get to the top of the pool", "references": ["to win.", "to be a member of the team.", "to learn swimming", "to prove himself.", "to be in the team"], "input": {"head": "PersonX joins the swim team", "relation": "xIntent"}}
{"generation": "PersonX gives the time of day. After that, he will give you a list of all the items", "references": ["PersonX puts it on his calendar"], "input": {"head": "PersonX gives the time of day", "relation": "isBefore"}}
{"generation": "mouse is not a good idea", "references": ["whiskers", "short lifespan"], "input": {"head": "mouse", "relation": "HasProperty"}}
{"generation": "a cauldron can be used for a variety of purposes", "references": ["cook stew in", "put ingredients into to make the spell work", "put Halloween candy in", "Keep craft items together", "prepare a large meal", "pot a plant in", "make potions in", "make spells in", "Store change", "make soup in", "boil stuff"], "input": {"head": "cauldron", "relation": "ObjectUse"}}
{"generation": "PersonX helps the ___ along. After, others will want to know what the ___ is doing", "references": ["to party", "to thank person x"], "input": {"head": "PersonX helps the ___ along", "relation": "oWant"}}
{"generation": "PersonX leans back against the wall. PersonX is a little more relaxed, but still a little nervous", "references": ["relaxed", "unsure", "sick", "weak", "tired", "feeble"], "input": {"head": "PersonX leans back against the wall", "relation": "xAttr"}}
{"generation": "PersonX gets PersonX's feet wet. Before that, he's got to get PersonX's feet wet", "references": ["PersonX goes to the public pool"], "input": {"head": "PersonX gets PersonX's feet wet", "relation": "isAfter"}}
{"generation": "PersonX becomes a doctor. As a result, others feel that they are being treated unfairly", "references": ["none", "they feel grateful, thankful"], "input": {"head": "PersonX becomes a doctor", "relation": "oReact"}}
{"generation": "PersonX gets the shot. After, others will want to know what's going on", "references": ["none", "to move on to the next shot", "to help PersonX through"], "input": {"head": "PersonX gets the shot", "relation": "oWant"}}
{"generation": "PersonX starts crying. After that, she starts crying again", "references": ["PersonX dries their eyes"], "input": {"head": "PersonX starts crying", "relation": "isBefore"}}
{"generation": "PersonX covers PersonX's nakedness. PersonX is a character in the series who is a member of", "references": ["shy", "modest", "embarrassed", "ashamed", "embarassed"], "input": {"head": "PersonX covers PersonX's nakedness", "relation": "xAttr"}}
{"generation": "PersonX diagnoses with diabetes. Before that, he was a doctor in the United States", "references": ["PersonX looks over the charts"], "input": {"head": "PersonX diagnoses with diabetes", "relation": "isAfter"}}
{"generation": "get out of debt. Before, PersonX needs to be able to pay off its debt", "references": ["pay creditors"], "input": {"head": "get out of debt", "relation": "xNeed"}}
{"generation": "PersonX makes every ___ is filled by a single, unique, and unique, and unique", "references": ["pillowcase", "piece", "blanket", "blouse", "dress", "shirt", "dinner", "quilt", "cake", "check"], "input": {"head": "PersonX makes every ___", "relation": "isFilledBy"}}
{"generation": "PersonX opens PersonX's ___ to speak. PersonX did this to her, and she said, \"I'm sorry", "references": ["to be heard", "to make noise", "to ask a question", "to express an opinion", "to make a statement"], "input": {"head": "PersonX opens PersonX's ___ to speak", "relation": "xIntent"}}
{"generation": "PersonX sends a letter. PersonX is a member of the \"X\" group", "references": ["dutiful", "chatty", "friendly", "responsible", "literate"], "input": {"head": "PersonX sends a letter", "relation": "xAttr"}}
{"generation": "PersonX reproduces this ___ regardless. Before, PersonX needs to be able to reproduce the same thing over and over", "references": ["To develop a theme for the book", "a copy machine", "paper", "to read the book", "to read the piracy warning", "To assess potential interest"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "xNeed"}}
{"generation": "PersonX tells PersonY had a surprise. Before that, she had a surprise", "references": ["PersonX buys something from a store"], "input": {"head": "PersonX tells PersonY had a surprise", "relation": "isAfter"}}
{"generation": "PersonX hurts anyone's ___. PersonX did this to me", "references": ["to be arrogant", "to use his power as a minister"], "input": {"head": "PersonX hurts anyone 's ___", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The post office is closed today.", "They lost the note", "The cell phone died.", "The internet went out.", "PersonY won't allow PersonX to speak or write.", "PersonX's boss won't let them leave their desk.", "The systems are down", "PersonX needs to buy stamps first."], "input": {"head": "PersonX delivers PersonX's message", "relation": "HinderedBy"}}
{"generation": "PersonX gets the ___ right. After, PersonX will want to know what the ___ is", "references": ["to have fun with their significant other", "to share their findings", "to do better with coworkers", "to test it out"], "input": {"head": "PersonX gets the ___ right", "relation": "xWant"}}
{"generation": "PersonX wants to hurt PersonY. PersonX did this to PersonY", "references": ["to be violent", "to cause harm to person"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X has maxed out all credit cards.", "It is not for sale", "Person X does not have enough money.", "The online store is sold out.", "PersonX's credit card is missing.", "PersonX does not have any money"], "input": {"head": "PersonX decides to purchase it", "relation": "HinderedBy"}}
{"generation": "PersonX finds PersonX's ring. PersonX did this to her, and she's been doing it for years", "references": ["none", "wear it"], "input": {"head": "PersonX finds PersonX's ring", "relation": "xIntent"}}
{"generation": "PersonX finds ___ at home. PersonX is a little confused as to why he's there", "references": ["happy", "comfortable", "introvert", "stressed", "tired", "homebody"], "input": {"head": "PersonX finds ___ at home", "relation": "xAttr"}}
{"generation": "PersonX purchases a lottery ticket. PersonX is a member of the \"Poker Club\" and", "references": ["hopeful", "curious", "wasteful", "wishful"], "input": {"head": "PersonX purchases a lottery ticket", "relation": "xAttr"}}
{"generation": "PersonX makes PersonY alliance. After, others will want to join", "references": ["go with person x somwhere", "help person x", "to sign a deal", "to have a meal", "none"], "input": {"head": "PersonX makes PersonY alliance", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's brother is on life support.", "They have too much homework", "PersonX is out of town.", "PersonX's brother is out of state.", "PersonX has to work.", "They don't understand it"], "input": {"head": "PersonX helps PersonX's brother", "relation": "HinderedBy"}}
{"generation": "a cookie sheet can be used for a variety of purposes", "references": ["fan smoke out of the kitchen", "put the dough on", "put over a pan as a lid", "bake clay crafts", "make a rectangular pizza", "bake bread", "place dough on", "make a square pizza"], "input": {"head": "cookie sheet", "relation": "ObjectUse"}}
{"generation": "PersonX uses ___ as a means. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX uses ___ as a means", "relation": "oWant"}}
{"generation": "PersonX makes that mistake again. Before, PersonX needs to be able to use his own abilities to get to", "references": ["none"], "input": {"head": "PersonX makes that mistake again", "relation": "xNeed"}}
{"generation": "PersonX visits my friend. PersonX will be the one who gets the most attention", "references": ["companionship", "friendly", "good about themselves"], "input": {"head": "PersonX visits my friend", "relation": "xReact"}}
{"generation": "PersonX justifies PersonY's existence. After, PersonX will want to kill PersonY, but PersonY will not", "references": ["to have a purpose.", "To help Y", "to help PersonY", "to make PersonY feel better about themself", "to  see a reason for life.", "To assist Y"], "input": {"head": "PersonX justifies PersonY's existence", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX was drugged by his mom", "person x is on medication", "PersonX took anxiety medicine already.", "PersonX took medicine.", "person x is drunk", "PersonX was talked up by Dave", "PersonX was given a pep talk by his Dad", "PersonX found a friend in the crowd.", "PersonX knows there's nothing to worry about."], "input": {"head": "PersonX is still nervous", "relation": "HinderedBy"}}
{"generation": "PersonX gets a call from PersonX's boss. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets a call from PersonX's boss", "relation": "oEffect"}}
{"generation": "PersonX sits patiently. Before that, he's just a little bit more of a jerk", "references": ["PersonX goes to the doctor", "PersonX goes to an appointment", "PersonX checks in for a doctor's appointment"], "input": {"head": "PersonX sits patiently", "relation": "isAfter"}}
{"generation": "PersonX beats everyone. After that, he's a total asshole", "references": ["PersonX chastises everyone for losing"], "input": {"head": "PersonX beats everyone", "relation": "isBefore"}}
{"generation": "PersonX goes back to PersonY's room. Before that, he goes to the bathroom", "references": ["PersonX goes to PersonY's house"], "input": {"head": "PersonX goes back to PersonY's room", "relation": "isAfter"}}
{"generation": "PersonX looks like an idiot. PersonX is a guy who is a bit of a dick", "references": ["Idiotic", "clumsy", "Stupid", "Clumsy", "irresponsible", "Air head"], "input": {"head": "PersonX looks like an idiot", "relation": "xAttr"}}
{"generation": "PersonX gives PersonY the name. Before, PersonX needs to know PersonY's name", "references": ["open mouth", "to go to PersonY's house", "to call PersonY", "to communicate with PersonY", "learn information"], "input": {"head": "PersonX gives PersonY the name", "relation": "xNeed"}}
{"generation": "PersonX measures ___ directly. After, others will want to know what you're doing", "references": ["not to become an engineer", "to become an engineer", "none"], "input": {"head": "PersonX measures ___ directly", "relation": "oWant"}}
{"generation": "a place where doctor can be used for a medical procedure", "references": ["work surgery"], "input": {"head": "place where doctor", "relation": "ObjectUse"}}
{"generation": "PersonX meets PersonY for lunch. As a result, others feel that they are being treated unfairly", "references": ["happy", "connected", "engaged", "full", "satisfied"], "input": {"head": "PersonX meets PersonY for lunch", "relation": "oReact"}}
{"generation": "PersonX dances all night. PersonX did this to me", "references": ["to enjoy the music", "to party", "to have fun"], "input": {"head": "PersonX dances all night", "relation": "xIntent"}}
{"generation": "a space suit can be used for a variety of purposes, including:\n\n\u2022", "references": ["dress for space", "breathe in space", "design a newer style", "provide oxygen and protection", "wear in the space craft", "wear for halloween", "breathe on the moon", "hide from the sun", "scare someone with", "wear in space", "protect PersonX from gravitational changes"], "input": {"head": "space suit", "relation": "ObjectUse"}}
{"generation": "a sugar cube can be used for a variety of purposes", "references": ["bribe the child to do your homeowork", "sweeten coffee", "pretend play tea", "put in tea", "sweeten tea", "eat as food.", "use as part of an art project", "put LSD on it.", "treat the animal", "place on head"], "input": {"head": "sugar cube", "relation": "ObjectUse"}}
{"generation": "PersonX costs the earth. The effect on others will be limited to those who are not affected by the effect", "references": ["none"], "input": {"head": "PersonX costs the earth", "relation": "oEffect"}}
{"generation": "PersonX has a nice dinner. The effect on PersonX will be similar to that of a normal dinner", "references": ["drink water", "cleans the dishes", "person x goes home", "person x sleeps", "pays the check", "wash hands", "wipe hands"], "input": {"head": "PersonX has a nice dinner", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is wearing noise cancelling headphones.", "PersonY already left for work.", "PersonY ran away.", "PersonX is being held hostage", "PersonX cannot speak.", "PersonY isn't near by to warn"], "input": {"head": "PersonX gives PersonY a warning", "relation": "HinderedBy"}}
{"generation": "PersonX makes that mistake again. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX makes that mistake again", "relation": "oReact"}}
{"generation": "PersonX comes ___ that night is filled by a lot of people", "references": ["to town"], "input": {"head": "PersonX comes ___ that night", "relation": "isFilledBy"}}
{"generation": "PersonX tells my mother. The effect on others will be different", "references": ["becomes closer to PersonX", "becomes grateful to personX", "gains information", "learns new information"], "input": {"head": "PersonX tells my mother", "relation": "oEffect"}}
{"generation": "PersonX surprises PersonX's family. After, PersonX will want to know who the other person is", "references": ["to keep his family happy", "to smile", "to hug everyone", "to enjoy the holidays with his family"], "input": {"head": "PersonX surprises PersonX's family", "relation": "xWant"}}
{"generation": "PersonX appoints a ___ to investigate. Before, PersonX needs to know who the ___ is", "references": ["to have the responsibility", "gather members to appoint", "to understand the situation", "become aware of a situation that needs to be investigated", "to think it needs one", "to observe the scene"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "xNeed"}}
{"generation": "PersonX bows PersonX's heads. After that, the two of them head to the main room", "references": ["PersonX kisses the pope's ring"], "input": {"head": "PersonX bows PersonX's heads", "relation": "isBefore"}}
{"generation": "PersonX wants to learn how to cook. After that, he'll be able to cook for himself", "references": ["PersonX finds a cooking class"], "input": {"head": "PersonX wants to learn how to cook", "relation": "isBefore"}}
{"generation": "PersonX kisses PersonY gently. PersonX did this to PersonY", "references": ["to show he cares for person", "to show love and affection.", "to be loving"], "input": {"head": "PersonX kisses PersonY gently", "relation": "xIntent"}}
{"generation": "PersonX feels sad. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX feels sad", "relation": "oEffect"}}
{"generation": "PersonX visits a friend. After, others will want to know what happened to him", "references": ["to talk", "Person X to sleep over.", "to converse", "to make other plans", "to play a video game", "to invite Person X over again."], "input": {"head": "PersonX visits a friend", "relation": "oWant"}}
{"generation": "PersonX finds another ___. PersonX is a member of the group", "references": ["capable", "aware", "able", "talented", "Lost", "Worried", "determined"], "input": {"head": "PersonX finds another ___", "relation": "xAttr"}}
{"generation": "PersonX has never been on one before. Before, PersonX needs to be able to talk to people", "references": ["none"], "input": {"head": "PersonX has never been on one before", "relation": "xNeed"}}
{"generation": "lexicon is a new feature that allows you to create a new", "references": ["very useful to openmind", "useful to openmind"], "input": {"head": "lexicon", "relation": "HasProperty"}}
{"generation": "PersonX gets published. PersonX will be the first person to be published", "references": ["joyful", "happy", "proud"], "input": {"head": "PersonX gets published", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX tripped on the court.", "PersonY ran away.", "PersonX is bad at this.", "PERSON Y BALL ROLLED UNDERNEATH A CAR", "PersonX was too far away from the ball.", "PERSON Y BALL ROLLED INTO THE STREET"], "input": {"head": "PersonX gets PersonY's ball", "relation": "HinderedBy"}}
{"generation": "PersonX tickles the dragons tail. PersonX is a dragon", "references": ["fun", "fun loving", "silly", "playful"], "input": {"head": "PersonX tickles the dragons tail", "relation": "xAttr"}}
{"generation": "PersonX passionately rucked PersonY. The effect on PersonX will be felt by PersonY", "references": ["take rest", "get some medicine"], "input": {"head": "PersonX passionately rucked PersonY", "relation": "xEffect"}}
{"generation": "PersonX puts PersonY to death. The effect on others will be similar to that of PersonX", "references": ["PersonY body slumps.", "gets eulogy held", "cremated", "PersonY dies.", "none"], "input": {"head": "PersonX puts PersonY to death", "relation": "oEffect"}}
{"generation": "PersonX takes PersonY outside. PersonX will be able to see PersonY's face and will be", "references": ["sad.", "warm", "satisfied"], "input": {"head": "PersonX takes PersonY outside", "relation": "xReact"}}
{"generation": "PersonX enjoys ___ together. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX enjoys ___ together", "relation": "oEffect"}}
{"generation": "PersonX steps up PersonX's game. The effect on others will be different", "references": ["loses", "focus more", "none"], "input": {"head": "PersonX steps up PersonX's game", "relation": "oEffect"}}
{"generation": "a gum can be used for a variety of purposes, including:\n\n\u2022", "references": ["put on head", "to quit smoking", "hold poster on a wall", "chewing", "chew instead of smoking", "plug a hole in a wall.", "hold up a poster.", "help with cravings", "to deal with anxiety", "chew for distraction", "chew and blow bubbles", "freshen breath before moving in", "chew on", "stick to walls", "keep busy when they crave a drink", "clean teeth", "chew", "chew on during cravngs"], "input": {"head": "gum", "relation": "ObjectUse"}}
{"generation": "PersonX borrows this thesis for use. PersonX did this to me, and I'm glad I did", "references": ["to read", "to learn something"], "input": {"head": "PersonX borrows this thesis for use", "relation": "xIntent"}}
{"generation": "PersonX loses sight of PersonY. Before that, he's just a normal person", "references": ["PersonX falls behind perony on the trail"], "input": {"head": "PersonX loses sight of PersonY", "relation": "isAfter"}}
{"generation": "PersonX becomes PersonY member. The effect on PersonX will be the same as PersonY's effect on PersonY", "references": ["receive benefit", "receives acceptance", "receives support", "none", "go to meeting"], "input": {"head": "PersonX becomes PersonY member", "relation": "xEffect"}}
{"generation": "PersonX french kisses. After, others will want to know what you're doing", "references": ["Pull away", "to make out", "to be intimate", "to interact", "to smile", "Kiss back"], "input": {"head": "PersonX french kisses", "relation": "oWant"}}
{"generation": "PersonX compares ___ with another. The effect on PersonX will be the same as the effect on PersonX", "references": ["Has easier time choosing", "none", "Smarter"], "input": {"head": "PersonX compares ___ with another", "relation": "xEffect"}}
{"generation": "PersonX helps ___ with problems. After, PersonX will want to help you with problems", "references": ["to stay humble", "to ensure that problems do not occur in the future", "to thank the people for coming to him", "to be rewarded"], "input": {"head": "PersonX helps ___ with problems", "relation": "xWant"}}
{"generation": "PersonX helps PersonY along. The effect on others will be similar to that of PersonY", "references": ["is grateful to personX", "Things are easier", "asked for help", "asked for compensation"], "input": {"head": "PersonX helps PersonY along", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's wife will slap him if he stays silent.", "PersonX just can't stop talking.", "PersonX is being held captive by a criminal.", "PersonX urgently needs to communicate something.", "PersonX's must speak because the judge told him to."], "input": {"head": "PersonX saves PersonX's breath", "relation": "HinderedBy"}}
{"generation": "PersonX enters PersonY's office. Before, PersonX needs to talk to PersonY about the situation", "references": ["make an appointment", "to walk in the building", "knock on door", "find out where the office is"], "input": {"head": "PersonX enters PersonY's office", "relation": "xNeed"}}
{"generation": "PersonX drives PersonX's new car. After, others will want to know what the hell is going on", "references": ["PersonX to relax", "yelp in glee", "PersonX to get a car", "none", "put on seatbelt"], "input": {"head": "PersonX drives PersonX's new car", "relation": "oWant"}}
{"generation": "PersonX drives on the highway. After, PersonX will want to drive on the highway", "references": ["arrive at destination", "go back home"], "input": {"head": "PersonX drives on the highway", "relation": "xWant"}}
{"generation": "PersonX speaks PersonY's name. Before that, you can use the same name to refer to the", "references": ["PersonX sees her friend across the hall"], "input": {"head": "PersonX speaks PersonY's name", "relation": "isAfter"}}
{"generation": "a barbecue restaurant can be used for a variety of purposes, including cooking, serving,", "references": ["cooking pigs", "eat food", "eating barbecue meals out", "dining", "feed family", "meeting with people", "getting messy fingers", "eating out", "fullfilling hunger", "ribs", "eating ribs", "have dinner", "getting barbecue food", "good grilled food"], "input": {"head": "barbecue restaurant", "relation": "ObjectUse"}}
{"generation": "PersonX puts together a ___. PersonX is a subclass of PersonX", "references": ["methodical", "social", "organized", "creative"], "input": {"head": "PersonX puts together a ___", "relation": "xAttr"}}
{"generation": "PersonX cranes PersonY's neck. As a result, others feel the same way", "references": ["satisfied because they saw what they were curious about"], "input": {"head": "PersonX cranes PersonY's neck", "relation": "oReact"}}
{"generation": "PersonX drives all the way back. As a result, others feel that the game is too much of a distraction", "references": ["none"], "input": {"head": "PersonX drives all the way back", "relation": "oReact"}}
{"generation": "a mistake can be used for a lot of things", "references": ["cost money", "learning", "anger person", "result in catastrophy"], "input": {"head": "mistake", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's apartment does not allow get-togethers", "not enough resources", "PersonX does not know anyone's address", "PersonX's phone is broken", "no room", "PersonX does not have anyone's phone number"], "input": {"head": "PersonX invites people", "relation": "HinderedBy"}}
{"generation": "PersonX calls PersonX's son. As a result, others feel that PersonX is a \"bad person\" and", "references": ["adored", "none", "loved"], "input": {"head": "PersonX calls PersonX's son", "relation": "oReact"}}
{"generation": "PersonX takes the stage. PersonX will be joined by the other members of the group", "references": ["like a star.", "beloved.", "apprehensive", "good for showing what he can do"], "input": {"head": "PersonX takes the stage", "relation": "xReact"}}
{"generation": "PersonX shares PersonY experience. The effect on PersonX will be similar to that of PersonY", "references": ["none"], "input": {"head": "PersonX shares PersonY experience", "relation": "xEffect"}}
{"generation": "PersonX barely missed ___. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX barely missed ___", "relation": "xIntent"}}
{"generation": "PersonX finds every ___. PersonX did this to me", "references": ["provide the estimate"], "input": {"head": "PersonX finds every ___", "relation": "xIntent"}}
{"generation": "PersonX gets more exercise. Before, PersonX needs to be able to do a lot of things", "references": ["to join a gym", "to buy workout gear", "change into workout clothes", "go to the gym", "none"], "input": {"head": "PersonX gets more exercise", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know where they are going.", "PersonY is too far away to hear", "PersonY has a hearing impairment.", "PersonX has no authority over PersonY", "PersonX lost his/her voice.", "PersonY doesn't have a car."], "input": {"head": "PersonX tells PersonY to follow", "relation": "HinderedBy"}}
{"generation": "PersonX replaces PersonX's tire. After, PersonX will want to use the tire to get to the next checkpoint", "references": ["fix the old tire", "drive", "to wash their hands", "rest"], "input": {"head": "PersonX replaces PersonX's tire", "relation": "xWant"}}
{"generation": "PersonX disposes of PersonX's property. PersonX is not responsible for any damage caused by PersonX's", "references": ["sneaky", "careless", "rude", "Independent", "Kind", "quick"], "input": {"head": "PersonX disposes of PersonX's property", "relation": "xAttr"}}
{"generation": "PersonX becomes a lawyer. After, PersonX will want to be a lawyer", "references": ["to win in court", "client", "to get clients", "practice", "celebrate with family", "get a job at a law firm"], "input": {"head": "PersonX becomes a lawyer", "relation": "xWant"}}
{"generation": "close friend can be found in the following places:\n\nThe", "references": ["call by nickname"], "input": {"head": "close friend", "relation": "CapableOf"}}
{"generation": "PersonX wins the bet. Before, PersonX needs to win the bet", "references": ["to wager a bet", "to enter the game", "to decide what to bet on", "to place the bet", "none", "to put up money"], "input": {"head": "PersonX wins the bet", "relation": "xNeed"}}
{"generation": "PersonX is feeling sick. Before, PersonX needs to be able to talk to her", "references": ["none"], "input": {"head": "PersonX is feeling sick", "relation": "xNeed"}}
{"generation": "You are likely to find a roast dinner in an Italian restaurant, or a roast dinner in a restaurant", "references": ["oven"], "input": {"head": "roast dinner", "relation": "AtLocation"}}
{"generation": "PersonX runs some errands. Before, PersonX needs to run a command to get the data from the server", "references": ["take a bag", "to leave the house", "to put on his shoes", "to get in the car", "none"], "input": {"head": "PersonX runs some errands", "relation": "xNeed"}}
{"generation": "PersonX would like. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX would like", "relation": "oEffect"}}
{"generation": "PersonX becomes smarter. After, PersonX will want to know what the other person is doing", "references": ["to show off", "to get smarter", "She graduates College.", "Becomes the doctor.", "To further her academics", "To pass a test"], "input": {"head": "PersonX becomes smarter", "relation": "xWant"}}
{"generation": "PersonX opens PersonY's doors. After that, he asks PersonY to join him in the elevator", "references": ["PersonX lets PersonY inside the house"], "input": {"head": "PersonX opens PersonY's doors", "relation": "isBefore"}}
{"generation": "PersonX is at PersonX's grandmother's house. Before that, she was a waitress at a restaurant", "references": ["PersonX drives to a different town"], "input": {"head": "PersonX is at PersonX's grandmother 's house", "relation": "isAfter"}}
{"generation": "PersonX tells PersonY a little. The effect on others will be different", "references": ["know more", "listen", "understand", "are informed"], "input": {"head": "PersonX tells PersonY a little", "relation": "oEffect"}}
{"generation": "PersonX wants to kiss PersonY. After, PersonX will want to kiss PersonY", "references": ["to be loved", "kiss them again", "to kiss PersonY", "to make love", "to grab PersonY", "ask them on a date"], "input": {"head": "PersonX wants to kiss PersonY", "relation": "xWant"}}
{"generation": "PersonX plays many games. The effect on others will be different", "references": ["none", "Avoid X when possible", "Catch on to X's manipulation"], "input": {"head": "PersonX plays many games", "relation": "oEffect"}}
{"generation": "PersonX loses PersonX's sight. After, others will want to kill PersonX", "references": ["none"], "input": {"head": "PersonX loses PersonX's sight", "relation": "oWant"}}
{"generation": "PersonX grinds gears for a month. After that, he's back to his normal life", "references": ["PersonX makes a wooden sculpture"], "input": {"head": "PersonX grinds gears for a month", "relation": "isBefore"}}
{"generation": "PersonX finally meet PersonY. As a result, others feel that PersonY is a better person than PersonX", "references": ["curious", "none"], "input": {"head": "PersonX finally meet PersonY", "relation": "oReact"}}
{"generation": "PersonX gets a call. After, others will want to know what's going on", "references": ["to have the discussion they called PersonX for", "none", "to end the call"], "input": {"head": "PersonX gets a call", "relation": "oWant"}}
{"generation": "PersonX romps home. The effect on others will be different", "references": ["cakewalk", "none", "antic"], "input": {"head": "PersonX romps home", "relation": "oEffect"}}
{"generation": "PersonX has tons of fun. After, PersonX will want to know what you're doing", "references": ["take pictures", "to eat something", "to perform in front of others", "invite friends", "to go home", "to rest a bit", "has to impress"], "input": {"head": "PersonX has tons of fun", "relation": "xWant"}}
{"generation": "PersonX spends the summer. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX spends the summer", "relation": "oReact"}}
{"generation": "an application forms can be used for the following purposes:\n\nTo provide a list", "references": ["help make fire", "put in for a new car", "get an answer", "get a job", "submit for entry", "apply for a credit card", "communicate information", "apply for job", "submit to clerk", "apply for a puppy", "fan"], "input": {"head": "application forms", "relation": "ObjectUse"}}
{"generation": "PersonX runs some errands. The effect on PersonX will be the same as the effect on PersonX", "references": ["inpuru nalage", "feel bad", "PersonX checks off their to-do list", "PersonX accomplishes everything required"], "input": {"head": "PersonX runs some errands", "relation": "xEffect"}}
{"generation": "PersonX gets hurt. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX gets hurt", "relation": "oReact"}}
{"generation": "PersonX draws PersonY conclusion. PersonX is the one who is the most likely to be the", "references": ["Astute", "educated", "Intelligent", "convinced"], "input": {"head": "PersonX draws PersonY conclusion", "relation": "xAttr"}}
{"generation": "PersonX finds gold. Before that, he's been working on a new game, and", "references": ["PersonX was digging on the beach"], "input": {"head": "PersonX finds gold", "relation": "isAfter"}}
{"generation": "PersonX smiles happily. PersonX did this to her", "references": ["to show they are happy", "to have positive attitude.", "to show how content he is"], "input": {"head": "PersonX smiles happily", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY never met PersonX.", "PersonX is sworn to secrecy by PersonY."], "input": {"head": "PersonX provides PersonY description", "relation": "HinderedBy"}}
{"generation": "PersonX prevents ___ from voting is filled by the user", "references": ["children", "women", "horses", "law makers", "people", "animals"], "input": {"head": "PersonX prevents ___ from voting", "relation": "isFilledBy"}}
{"generation": "PersonX hands PersonY a glass. After, PersonX will want to see PersonY's hand", "references": ["offer PersonY some cheese and crackers", "to sit down and talk to PersonY", "pour themselves a drink", "to wash the glass", "to put it away", "close cabinet"], "input": {"head": "PersonX hands PersonY a glass", "relation": "xWant"}}
{"generation": "PersonX wants to come back. PersonX will be the one who gets the most votes", "references": ["hopeful", "happy that person took him back", "satisfied"], "input": {"head": "PersonX wants to come back", "relation": "xReact"}}
{"generation": "PersonX checks PersonY's watch. After that, PersonX checks PersonX's watch", "references": ["PersonX hurries up"], "input": {"head": "PersonX checks PersonY's watch", "relation": "isBefore"}}
{"generation": "PersonX goes work. After, others will want to know what he's doing", "references": ["to earn money", "to get work done", "none"], "input": {"head": "PersonX goes work", "relation": "oWant"}}
{"generation": "PersonX pierces PersonY's ears. The effect on PersonX will be reversed", "references": ["needs stitches", "cuts finger"], "input": {"head": "PersonX pierces PersonY's ears", "relation": "xEffect"}}
{"generation": "PersonX studies for an exam. PersonX did this to help me understand the process of applying for a job", "references": ["to do well", "to score good marks", "to be successful"], "input": {"head": "PersonX studies for an exam", "relation": "xIntent"}}
{"generation": "PersonX notices an ad. Before, PersonX needs to find a way to get a new job", "references": ["to read the newspaper", "none", "to buy a newspaper"], "input": {"head": "PersonX notices an ad", "relation": "xNeed"}}
{"generation": "PersonX holds PersonY in place. After that, PersonX will be able to use the same abilities", "references": ["PersonX waits for the police"], "input": {"head": "PersonX holds PersonY in place", "relation": "isBefore"}}
{"generation": "PersonX takes PersonY outside. After, PersonX will want to talk to PersonY", "references": ["to impress", "to propose to her", "to love", "to talk things out", "to look at trees", "to go for a walk"], "input": {"head": "PersonX takes PersonY outside", "relation": "xWant"}}
{"generation": "a red wine can be used for a variety of purposes, including:\n\n\u2022", "references": ["get drunk with", "as a solvent", "get drunk off of", "add to spaghetti sauce", "drink from a glass", "drink with lunch", "cook with", "to start fire", "disinfect a wound"], "input": {"head": "red wine", "relation": "ObjectUse"}}
{"generation": "PersonX leaves the table. PersonX will be replaced by the new person", "references": ["good", "frustrated", "fine", "normal"], "input": {"head": "PersonX leaves the table", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Has a broken neck.", "Personx's head is stuck secured into a vice.", "person x is too much a part of the situation", "person x is enthralled"], "input": {"head": "PersonX looks the other way", "relation": "HinderedBy"}}
{"generation": "PersonX gives PersonY this opportunity. Before that, you can use the same method to get PersonX", "references": ["PersonX wins a vacation"], "input": {"head": "PersonX gives PersonY this opportunity", "relation": "isAfter"}}
{"generation": "PersonX puts ___ all together. PersonX did this to me", "references": ["to complete a task", "to make something"], "input": {"head": "PersonX puts ___ all together", "relation": "xIntent"}}
{"generation": "PersonX gives the children ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["none", "they smile", "they get yelled at"], "input": {"head": "PersonX gives the children ___", "relation": "xEffect"}}
{"generation": "PersonX helps PersonX's son. After that, PersonX is able to help PersonX's son", "references": ["PersonX helps their son understand the material"], "input": {"head": "PersonX helps PersonX's son", "relation": "isBefore"}}
{"generation": "PersonX commits ___ by jumping. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX commits ___ by jumping", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X's spouse took the car that he was going to use to get to work.", "Today is a snow day.", "Person X has a broken toe.", "It is raining.", "PersonX has a doctor appointment today.", "PersonX is coming off a flu.", "PersonX's boss called and told them not to come in.", "Today is a federal holiday day off."], "input": {"head": "PersonX goes to work today", "relation": "HinderedBy"}}
{"generation": "PersonX gets dressed for work. PersonX is a little bit of a jerk, but he's", "references": ["dutiful", "hard working", "mature", "dependable", "responsible"], "input": {"head": "PersonX gets dressed for work", "relation": "xAttr"}}
{"generation": "PersonX starts with a clean sheet. PersonX did this to make sure that the game was not too cluttered", "references": ["none", "to be respectful"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xIntent"}}
{"generation": "PersonX wants another one. PersonX will be the one to get the other one", "references": ["happy", "fulflled"], "input": {"head": "PersonX wants another one", "relation": "xReact"}}
{"generation": "PersonX gives PersonY room. PersonX will be able to use the same abilities as PersonY", "references": ["generous"], "input": {"head": "PersonX gives PersonY room", "relation": "xReact"}}
{"generation": "PersonX loses PersonX's ___ as a result is filled by the same person", "references": ["wallet", "papers", "keyboard", "gift", "purse", "Wallet", "Car", "jacket", "money", "debit card", "keys", "shoe", "sock"], "input": {"head": "PersonX loses PersonX's ___ as a result", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's kids are there which make her happy", "PersonX is very peaceful", "PersonX is very tranquil by nature", "PersonX's mom is calming her down by singing", "Everyone is being nice.", "PersonX's husband bought her a ring", "PersonX sees the other person's point", "It\u2019s not a bad day.", "PersonX went to anger management."], "input": {"head": "PersonX gets angry", "relation": "HinderedBy"}}
{"generation": "PersonX looks like new. PersonX will be the first person to be able to play with the", "references": ["satisfied."], "input": {"head": "PersonX looks like new", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know how to read.", "PersonX has no authority.", "PersonY made an account separate from personX.", "PersonX does not have enough votes", "PersonX is not the boss.", "PersonY has more people on their side", "PersonX is in love with Person Y.", "PersonX does not have a pen", "PersonX's boss told him to stay away from PersonY.", "PersonX does not have enough money to pay"], "input": {"head": "PersonX resigns PersonY's commission", "relation": "HinderedBy"}}
{"generation": "PersonX forgets my wallet. PersonX will be able to use my wallet", "references": ["remorsful", "guilty", "ashamed"], "input": {"head": "PersonX forgets my wallet", "relation": "xReact"}}
{"generation": "PersonX gives PersonY a dinner. PersonX will be the one who gets the dinner", "references": ["happy", "excited"], "input": {"head": "PersonX gives PersonY a dinner", "relation": "xReact"}}
{"generation": "PersonX takes ___ outside. The effect on others will be different", "references": ["none", "talks to Person X", "walks with Person X"], "input": {"head": "PersonX takes ___ outside", "relation": "oEffect"}}
{"generation": "PersonX visits the city. After, others will want to know what happened to the other members of the group", "references": ["none"], "input": {"head": "PersonX visits the city", "relation": "oWant"}}
{"generation": "PersonX takes selfies. PersonX did this to me", "references": ["to show off", "share the selfies on social media", "to show love for themselves", "to look good online", "to remember how they look now"], "input": {"head": "PersonX takes selfies", "relation": "xIntent"}}
{"generation": "PersonX increases PersonX's ___ at the expense. PersonX did this to make PersonX's ___ more powerful", "references": ["a higher status", "to earn more because he financially committed"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "xIntent"}}
{"generation": "PersonX finally got ___. After, PersonX will want to know what the user is doing", "references": ["set new goal", "Use the thing", "to prepare for her first day on the job", "to attend orientation", "celebrate", "tell other people about it.", "to go to the office building"], "input": {"head": "PersonX finally got ___", "relation": "xWant"}}
{"generation": "PersonX feels very sad. After, others will want to kill him", "references": ["none"], "input": {"head": "PersonX feels very sad", "relation": "oWant"}}
{"generation": "PersonX throws ___ into the air is filled by the power of the ____", "references": ["ball", "pens", "rice", "balls", "papers", "rocks", "frisbies", "birdseed", "cards", "toys", "confetti", "money", "candy", "flowers", "sports drink", "coins", "feathers", "fireballs"], "input": {"head": "PersonX throws ___ into the air", "relation": "isFilledBy"}}
{"generation": "PersonX nurses it back to health. PersonX will be able to use the same abilities as the other nurses", "references": ["happy.", "happy", "accomplished", "tired"], "input": {"head": "PersonX nurses it back to health", "relation": "xReact"}}
{"generation": "PersonX grants PersonY's request. After, others will want to know who you are", "references": ["make another request", "celebrate", "say thank you", "to say thank you"], "input": {"head": "PersonX grants PersonY's request", "relation": "oWant"}}
{"generation": "PersonX comes home this ___ is filled by the same people who are the same people who are", "references": ["house", "trailer"], "input": {"head": "PersonX comes home this ___", "relation": "isFilledBy"}}
{"generation": "PersonX plays for PersonX. After, PersonX will want to play for PersonX", "references": ["to win", "get applause", "receive positive feedback", "to practice more", "to have fun", "to take a rest"], "input": {"head": "PersonX plays for PersonX", "relation": "xWant"}}
{"generation": "PersonX makes that mistake again. PersonX is a very good player, but he's not a", "references": ["clumsy", "stubborn", "simple minded", "unfocused", "careless"], "input": {"head": "PersonX makes that mistake again", "relation": "xAttr"}}
{"generation": "PersonX uses ___ effectively. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX uses ___ effectively", "relation": "oWant"}}
{"generation": "PersonX leaves PersonX's husband. After, others will want to kill him", "references": ["to talk to PersonX on the phone", "to go to a counselor"], "input": {"head": "PersonX leaves PersonX's husband", "relation": "oWant"}}
{"generation": "PersonX arrives ___ from work. PersonX will be in the office, and PersonX will be in", "references": ["relaxed and refreshed.", "diead so relax our mind"], "input": {"head": "PersonX arrives ___ from work", "relation": "xReact"}}
{"generation": "PersonX gets some exercise. After, PersonX will want to know if you're a good person", "references": ["drink water", "to make abs", "make something to eat", "to drink water", "have some rest", "relax", "to eat healthy"], "input": {"head": "PersonX gets some exercise", "relation": "xWant"}}
{"generation": "PersonX pries open ___. PersonX is the number of people who have been invited to the", "references": ["strong", "forceful", "mighty", "devious"], "input": {"head": "PersonX pries open ___", "relation": "xAttr"}}
{"generation": "PersonX wants ___ very badly is filled by the fact that he's a very good guy", "references": ["pizza", "food", "shoes", "candy", "coat", "book"], "input": {"head": "PersonX wants ___ very badly", "relation": "isFilledBy"}}
{"generation": "PersonX french kisses. The effect on PersonX will be similar to that of a kiss", "references": ["gets closer", "smells her", "learns a new skill", "sighs", "yelled at by religious fanatics", "gets saliva all over face"], "input": {"head": "PersonX french kisses", "relation": "xEffect"}}
{"generation": "PersonX confronts PersonX's roommate. Before, PersonX needs to talk to PersonX about his feelings for PersonX", "references": ["record actions", "catch roommates action", "none"], "input": {"head": "PersonX confronts PersonX's roommate", "relation": "xNeed"}}
{"generation": "PersonX is walking to the store. Before that, he's talking to a man who's been talking", "references": ["PersonX gets dressed and leaves the house", "PersonX doesn't have a car", "PersonX wants some potato chips"], "input": {"head": "PersonX is walking to the store", "relation": "isAfter"}}
{"generation": "PersonX calls god's ___. PersonX did this to me", "references": ["positive", "to do everything in the name of god"], "input": {"head": "PersonX calls god 's ___", "relation": "xIntent"}}
{"generation": "PersonX loves riding PersonX's bike. After, PersonX will want to ride PersonX's bike", "references": ["buy helmet", "to spend the whole day riding their bike", "go on a bike ride", "to race with others"], "input": {"head": "PersonX loves riding PersonX's bike", "relation": "xWant"}}
{"generation": "PersonX finds another road. Before that, he finds a place to live", "references": ["PersonX drives down a dead-end road"], "input": {"head": "PersonX finds another road", "relation": "isAfter"}}
{"generation": "PersonX pierces PersonY's ears. PersonX will be able to hear PersonY's voice", "references": ["accomplished", "happy", "generous", "helpful", "proud"], "input": {"head": "PersonX pierces PersonY's ears", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["personX has no finances to pay for their part of the deal", "PersonX is too busy with family.", "personX feels the offer is too good to be true", "PersonX works with PersonY."], "input": {"head": "PersonX takes PersonY up on the offer", "relation": "HinderedBy"}}
{"generation": "PersonX works last night. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX works last night", "relation": "oEffect"}}
{"generation": "PersonX pays PersonY taxes. Before, PersonX needs to pay PersonY taxes", "references": ["to have taxes due", "to related to Y", "to keep the money", "to have money", "to be employeed", "to acquire some money"], "input": {"head": "PersonX pays PersonY taxes", "relation": "xNeed"}}
{"generation": "PersonX takes a towel to the beach. Before that, he takes a towel to the beach", "references": ["PersonX packs for a getaway"], "input": {"head": "PersonX takes a towel to the beach", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has Huntington's Disease and will die before the age most people develop cancer.", "PersonX lives somewhere with no access to carcinogens."], "input": {"head": "PersonX gets cancer", "relation": "HinderedBy"}}
{"generation": "knight can be found in the following locations:\n\nThe", "references": ["charging into battle", "free damsel in distress", "company lord", "fence during duel", "ride horse", "storm castle"], "input": {"head": "knight", "relation": "CapableOf"}}
{"generation": "PersonX looks both ways. PersonX is a very good player, but he's not a", "references": ["careful", "cautious", "smart", "safe", "responsible"], "input": {"head": "PersonX looks both ways", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is in a relationship with someone else.", "PersonX doesn't know how it unbuckles", "PersonX hands are in a cast.", "Person Y does not like Person X.", "PersonX can't reach it", "PersonY did not get consent to this."], "input": {"head": "PersonX unbuckles PersonY's belt", "relation": "HinderedBy"}}
{"generation": "PersonX continues PersonY's journey. After, others will want to know what's going on", "references": ["to slow down", "to catch breath", "to see how they do", "to pass baton to PersonX", "to thank personX", "none"], "input": {"head": "PersonX continues PersonY's journey", "relation": "oWant"}}
{"generation": "PersonX is happy for PersonY. The effect on PersonX will be the same as the effect on PersonY", "references": ["chest swells", "smiled", "they smile", "energetic", "none"], "input": {"head": "PersonX is happy for PersonY", "relation": "xEffect"}}
{"generation": "PersonX draws PersonY conclusion. The effect on others will be different", "references": ["Person Y stops talking", "Person Y got appreciation from his manager for that drawing.", "Person Y got appraisal in office.", "Person Y starts to interrupt"], "input": {"head": "PersonX draws PersonY conclusion", "relation": "oEffect"}}
{"generation": "PersonX gets detention. Before that, he's in the middle of a fight with a", "references": ["PersonX onx throws a paper airplane at the teacher"], "input": {"head": "PersonX gets detention", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person Y has a broken arm.", "PersonY is bigger than them.", "PersonX can't find PersonY.", "Person X is afraid of Person Y.", "PersonY is moving too fast.", "PersonX has no free hands."], "input": {"head": "PersonX seizes PersonY by the arm", "relation": "HinderedBy"}}
{"generation": "PersonX leaves the scene. PersonX did this to her, and she was killed", "references": ["to escape getting arrested", "to not get blamed", "to avoid being caught", "to runaway", "to get away"], "input": {"head": "PersonX leaves the scene", "relation": "xIntent"}}
{"generation": "PersonX eventually moved. Before, PersonX needs to be able to use the same abilities as the player", "references": ["pack up", "none", "find a house"], "input": {"head": "PersonX eventually moved", "relation": "xNeed"}}
{"generation": "PersonX takes PersonY to the er. Before, PersonX needs to be able to use PersonY's abilities to get", "references": ["To check for a pulse.", "to prepare persony for transport", "to ask them if they need to go to the ER.", "shoes", "get persony around to leave", "a car"], "input": {"head": "PersonX takes PersonY to the er", "relation": "xNeed"}}
{"generation": "PersonX puts fish in the tank. After that, he takes the fish and puts it in the tank", "references": ["PersonX feeds the fish"], "input": {"head": "PersonX puts fish in the tank", "relation": "isBefore"}}
{"generation": "PersonX discerns the lord's ___. PersonX did this to me", "references": ["to be a good citizen"], "input": {"head": "PersonX discerns the lord 's ___", "relation": "xIntent"}}
{"generation": "a transcript copies can be used for this purpose", "references": ["submit for admission"], "input": {"head": "transcript copies", "relation": "ObjectUse"}}
{"generation": "PersonX opens the oven. Before that, he takes a deep breath and exhales deeply", "references": ["PersonX makes the dough"], "input": {"head": "PersonX opens the oven", "relation": "isAfter"}}
{"generation": "PersonX cuts a swath. The effect on others will be felt by those who are not in the same boat", "references": ["none"], "input": {"head": "PersonX cuts a swath", "relation": "oEffect"}}
{"generation": "PersonX impresses with PersonX's work. Before, PersonX needs to be able to talk to people", "references": ["to of learned a lot", "to be working", "to have opned exhibition of his work", "none", "to of worked hard"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xNeed"}}
{"generation": "PersonX breaks wind. After that, he's back in the air", "references": ["PersonX blames it on PersonY"], "input": {"head": "PersonX breaks wind", "relation": "isBefore"}}
{"generation": "PersonX leaves the table. As a result, others feel that the game is too complex and too difficult", "references": ["confused", "none", "frustrated"], "input": {"head": "PersonX leaves the table", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The place is permanently closed.", "PersonX was banned.", "The store owner banned personX.", "PersonX's wife kicked him out of the house.", "Person X is busy later.", "PersonX is on a tight schedule.", "PersonX fell asleep at the wheel.", "Person X has prior engagments with his work."], "input": {"head": "PersonX comes back later", "relation": "HinderedBy"}}
{"generation": "PersonX drives deep inside PersonY. Before that, you can see the difference between the two", "references": ["PersonX talks to PersonY for a long time"], "input": {"head": "PersonX drives deep inside PersonY", "relation": "isAfter"}}
{"generation": "PersonX would like PersonY. PersonX will be the one who will be the one who gets the", "references": ["happy about getting a new friend", "socialable"], "input": {"head": "PersonX would like PersonY", "relation": "xReact"}}
{"generation": "PersonX links together the ___. Before, PersonX needs to know the name of the person who is the target", "references": ["knowledge", "view a map", "to gather things", "to make a plan", "to complete a task", "do research"], "input": {"head": "PersonX links together the ___", "relation": "xNeed"}}
{"generation": "a color kit can be used for a variety of purposes", "references": ["accessorize halloween costume", "avoid recognition on the run", "keep the theme of the room", "do a craft project", "create a painting", "create tie dye shirt", "paint eggs", "make a picture", "cover up grey hair", "change her hair"], "input": {"head": "color kit", "relation": "ObjectUse"}}
{"generation": "PersonX increases the ___ at the expense. PersonX is the same as PersonX + 1", "references": ["strong", "successful", "Arrogant", "generous", "giving", "Calculating"], "input": {"head": "PersonX increases the ___ at the expense", "relation": "xAttr"}}
{"generation": "PersonX creates PersonY structure. PersonX is a subclass of PersonY", "references": ["Talented", "Solid", "helpful", "creative"], "input": {"head": "PersonX creates PersonY structure", "relation": "xAttr"}}
{"generation": "PersonX puts PersonX's head in the sand. The effect on others will be similar to that of a normal person", "references": ["He has sand in his mouth.", "none", "He hits X."], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "oEffect"}}
{"generation": "PersonX is a good soccer player. The effect on others will be different", "references": ["no effect", "none", "gets rejected by personx"], "input": {"head": "PersonX is a good soccer player", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Someone is forcing PersonX to help PersonY.", "PersonY needs PersonX.", "PersonX really need PersonY's help with something.", "PersonX and PersonY are related.", "PersonX loves PersonY.", "PersonX has a debt to repay to PersonY"], "input": {"head": "PersonX not does PersonY any favours", "relation": "HinderedBy"}}
{"generation": "PersonX stops at the store. PersonX did this to me", "references": ["to buy something", "to grab some bread", "to pick up some broccoli"], "input": {"head": "PersonX stops at the store", "relation": "xIntent"}}
{"generation": "PersonX rides PersonY's bikes. After, others will want to know what's going on", "references": ["to exercise", "to have fun", "to put the bike in the garage", "none", "to lock the bike up"], "input": {"head": "PersonX rides PersonY's bikes", "relation": "oWant"}}
{"generation": "PersonX sees ___ every day is filled by the same people", "references": ["birds", "pet", "clouds", "their child", "flowers", "their desk", "the sunrise", "their spouse"], "input": {"head": "PersonX sees ___ every day", "relation": "isFilledBy"}}
{"generation": "a gravestone can be used for a memorial to the deceased", "references": ["curse people who come across it", "use for grave etchings", "write on", "hold a cellar door down.", "show respect to dead person", "remember someone", "make a spooky landscape", "use as a flat surface for crafts.", "deface a dead person", "show year of birth", "put flowers on"], "input": {"head": "gravestone", "relation": "ObjectUse"}}
{"generation": "PersonX pays PersonY taxes. PersonX did this to avoid paying PersonY taxes", "references": ["to help persony", "to be helpful", "person y to be current", "to do something good", "to be nice"], "input": {"head": "PersonX pays PersonY taxes", "relation": "xIntent"}}
{"generation": "PersonX pulls ___ out of the water. PersonX will be able to use the water to heal the player", "references": ["like a hero", "surprised", "tired"], "input": {"head": "PersonX pulls ___ out of the water", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["persony hired someone else already.", "personx doesn't have the right qualifications", "PErsonX needs a degree.", "They are not hiring."], "input": {"head": "PersonX becomes PersonY engineer", "relation": "HinderedBy"}}
{"generation": "PersonX immediately started. After that, he started to talk about how he was going to", "references": ["PersonX onx worked the cash register"], "input": {"head": "PersonX immediately started", "relation": "isBefore"}}
{"generation": "PersonX starts with a clean sheet. Before, PersonX needs to be able to read the text of a text message", "references": ["to have tried and tested something else", "to decide to make a change", "none", "to have failed at something"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xNeed"}}
{"generation": "PersonX throws a frisbee. PersonX did this to me", "references": ["to play disc golf", "to play with his dog", "to have fun."], "input": {"head": "PersonX throws a frisbee", "relation": "xIntent"}}
{"generation": "PersonX covers PersonY's eyes. Before that, she's covered PersonY's eyes", "references": ["PersonX sees a naked man running around"], "input": {"head": "PersonX covers PersonY's eyes", "relation": "isAfter"}}
{"generation": "PersonX knocks ___ out cold is filled by the power of the power of the power of the", "references": ["the bully", "the dog", "horses", "dogs", "men", "babies", "the robber"], "input": {"head": "PersonX knocks ___ out cold", "relation": "isFilledBy"}}
{"generation": "PersonX takes PersonX's stand. The effect on others will be different", "references": ["respects personX", "none", "hears what they say"], "input": {"head": "PersonX takes PersonX's stand", "relation": "oEffect"}}
{"generation": "PersonX takes a ride to tyburn. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX takes a ride to tyburn", "relation": "oReact"}}
{"generation": "PersonX gives PersonY courage. After, PersonX will want to kill PersonY", "references": ["help person y keep having courage", "to watch them try", "To be helpful", "give them ways to stay brave", "to see them succeed", "To encourage Y"], "input": {"head": "PersonX gives PersonY courage", "relation": "xWant"}}
{"generation": "PersonX sits at the bar. After that, he's sitting at the bar", "references": ["PersonX orders a cold beer"], "input": {"head": "PersonX sits at the bar", "relation": "isBefore"}}
{"generation": "PersonX wants to learn how to swim. PersonX did this to help him get into the water", "references": ["to be swimmer", "to learn new things"], "input": {"head": "PersonX wants to learn how to swim", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can't access a shave.", "PersonX can't access a shower.", "PersonY stole PersonX's makeup", "PersonX can't buy new clothes.", "PersonX is too ugly to be improved.", "PersonY cut Personx's face", "PersonX can't afford beauty products.", "PersonX doesn't know how to dress fashionably", "PersonX can't afford to pay the barber.", "PersonX doesn't know how to lose weight"], "input": {"head": "PersonX improves PersonX's appearance", "relation": "HinderedBy"}}
{"generation": "a doors can be used for a variety of purposes, including:\n\n\u2022", "references": ["lock up", "stand in while there is a earthquake", "design a picnic table", "nail against window during a hurricane", "walk throug", "gain access to space", "wear over their nose and mouth", "walk through", "ride like a surfboard", "decorate their house", "make a yard sale table"], "input": {"head": "doors", "relation": "ObjectUse"}}
{"generation": "PersonX inflicts ___ on others. As a result, others feel that they are being punished for their actions", "references": ["hurt, fearful & disquieted.", "awful"], "input": {"head": "PersonX inflicts ___ on others", "relation": "oReact"}}
{"generation": "PersonX posts ___ on fb. After, PersonX will want to know if you're a good person", "references": ["check for comments", "attention", "to store memorable pictures", "to share with friends", "to show pictures to facebook friends", "logout facebook"], "input": {"head": "PersonX posts ___ on fb", "relation": "xWant"}}
{"generation": "PersonX has a wonderful time on PersonX's trip. After that, he's a little bit more of a jerk", "references": ["PersonX plans another vacation"], "input": {"head": "PersonX has a wonderful time on PersonX's trip", "relation": "isBefore"}}
{"generation": "PersonX desperately needed. PersonX is a very good player, but he's not a", "references": ["weepy", "clingy", "in need", "helpless", "unwell", "anxious"], "input": {"head": "PersonX desperately needed", "relation": "xAttr"}}
{"generation": "PersonX gets a part time job. Before, PersonX needs to be able to do a lot of things", "references": ["to interview for the job", "to apply for jobs", "to apply for a job", "to go to interviews", "to find a job", "to decide they need a job"], "input": {"head": "PersonX gets a part time job", "relation": "xNeed"}}
{"generation": "PersonX feels sluggish. Before that, it was a bit of a mess", "references": ["PersonX stays up too late"], "input": {"head": "PersonX feels sluggish", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is sick.", "PersonX's stove is not working.", "The gas to PersonX's house has been turned off.", "It is a cloudy day to sunbathe."], "input": {"head": "PersonX gets burned", "relation": "HinderedBy"}}
{"generation": "PersonX is getting dark. After that, he's going to be a little bit more aggressive", "references": ["PersonX leaves the beach"], "input": {"head": "PersonX is getting dark", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is resistant.", "PersonY is uncomfortable.", "PersonX is in a wheel chair.", "PersonY is tense.", "PersonY won't allow it.", "PersonX can't find PersonY"], "input": {"head": "PersonX arches PersonY's back", "relation": "HinderedBy"}}
{"generation": "PersonX puts PersonY together. After that, we'll have to figure out how to get Person", "references": ["PersonX helps y turn life around"], "input": {"head": "PersonX puts PersonY together", "relation": "isBefore"}}
{"generation": "PersonX kisses PersonY cheek. Before, PersonX needs to be able to talk to PersonY", "references": ["to pucker their lips", "none", "to be near person y"], "input": {"head": "PersonX kisses PersonY cheek", "relation": "xNeed"}}
{"generation": "PersonX takes PersonX's stand. PersonX will be the first person to be able to use the ability", "references": ["empowered"], "input": {"head": "PersonX takes PersonX's stand", "relation": "xReact"}}
{"generation": "PersonX obtains a ___ as possible. PersonX did this to me, and I'm not going to lie to", "references": ["help from someone because want to go tour"], "input": {"head": "PersonX obtains a ___ as possible", "relation": "xIntent"}}
{"generation": "PersonX does better in school. PersonX will be able to do better in school", "references": ["dedicated", "happy", "proud", "determined"], "input": {"head": "PersonX does better in school", "relation": "xReact"}}
{"generation": "an address label can be used for the following:\n\nThe address label can be", "references": ["return the wrongly delivered goods", "get the package to the correct place", "rewrite something on", "use as a post it note", "Make sure a parcel reaches its destination", "post into an art collage", "tell Post Office where to send", "put on letter"], "input": {"head": "address label", "relation": "ObjectUse"}}
{"generation": "a dollar bill can be used for a loan", "references": ["roll joint", "tipping taxi driver", "use at a strip club", "paying for things", "money", "buy food", "spending", "roll a cigarette", "tipping bellboy", "buying", "paying debts", "buying stuff", "cash", "tipping waitress", "paying for goods", "tipping maid", "payment", "tip waiter", "stick into a stripper's clothing", "pay for candy", "start fire", "betting", "snort drugs", "loosing tooth", "tipping skycap", "buy coke", "light on fire", "pay", "paying with cash"], "input": {"head": "dollar bill", "relation": "ObjectUse"}}
{"generation": "PersonX cuts open ___. After, PersonX will want to know what the user is doing", "references": ["to place the knife on a table", "to take what's in the box", "to see what inside the box", "to start cutting", "to use the item found inside the box right away", "to close blade"], "input": {"head": "PersonX cuts open ___", "relation": "xWant"}}
{"generation": "PersonX tries to save PersonY. After that, he tries to save PersonZ", "references": ["PersonX feels happy to help"], "input": {"head": "PersonX tries to save PersonY", "relation": "isBefore"}}
{"generation": "PersonX makes a turn. PersonX did this to me", "references": ["to go home", "to go to a parking lot.", "to take other route"], "input": {"head": "PersonX makes a turn", "relation": "xIntent"}}
{"generation": "PersonX finally got back. PersonX will be the first person to win the game", "references": ["like everyone thinks he is late"], "input": {"head": "PersonX finally got back", "relation": "xReact"}}
{"generation": "PersonX buys ___ for my wife. PersonX did this to me", "references": ["to be nice.", "to show affection", "her to have it", "to be a good spouse"], "input": {"head": "PersonX buys ___ for my wife", "relation": "xIntent"}}
{"generation": "PersonX makes good friends. Before that, he was a member of the team that won the", "references": ["PersonX joins a social club"], "input": {"head": "PersonX makes good friends", "relation": "isAfter"}}
{"generation": "PersonX catches a big fish. After that, he's a little bit more of a jerk", "references": ["PersonX takes a photo with the fish"], "input": {"head": "PersonX catches a big fish", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can only walk backwards", "The buzzer hasn't rang yet", "PersonX is being held down by Jack", "Person X 's foot is stuck to the floor.", "Person X is unable to mov.", "The property above PersonX is private", "PersonX is being held down by Julie", "PersonX's friend has his foot", "PersonX is always fumbling"], "input": {"head": "PersonX takes a step forward", "relation": "HinderedBy"}}
{"generation": "PersonX pours PersonX's heart. The effect on others will be felt", "references": ["PersonX's love interest becomes more relaxed around PersonX", "none", "PersonX's love interest mentally sees them in a non-platonic light"], "input": {"head": "PersonX pours PersonX's heart", "relation": "oEffect"}}
{"generation": "PersonX shaves every ___. As a result, others feel that the game is too complex and too complex to", "references": ["none"], "input": {"head": "PersonX shaves every ___", "relation": "oReact"}}
{"generation": "While driving to work, you would have to wait until the next shift to get to", "references": ["arrive", "crashing", "getting caught in traffic jam", "being caught in traffic jam", "getting lost", "walk home fromwork", "start car", "car may break down", "turn vehicle off", "enter garage", "put seatbelt", "getting stuck in traffic", "watch road", "get in car", "wear working clothes", "shut off engine", "steer car", "remove keys from ignition", "open car door"], "input": {"head": "drive to work", "relation": "HasSubEvent"}}
{"generation": "PersonX learns a new language. PersonX did this to her", "references": ["to be understand culture", "to learn", "accomplishment", "knowledge"], "input": {"head": "PersonX learns a new language", "relation": "xIntent"}}
{"generation": "PersonX considers carefully the ___. PersonX is a member of the class PersonX", "references": ["careful", "cautious", "thoughtful", "objective"], "input": {"head": "PersonX considers carefully the ___", "relation": "xAttr"}}
{"generation": "PersonX finds PersonY way. Before that, he's a little bit more of a jerk", "references": ["PersonX gets trained by PersonY"], "input": {"head": "PersonX finds PersonY way", "relation": "isAfter"}}
{"generation": "PersonX is walking across the street. After that, he's going to get a little bit of a", "references": ["PersonX sees a car coming towards them", "PersonX looks both ways for cars", "PersonX is going shopping for a new one"], "input": {"head": "PersonX is walking across the street", "relation": "isBefore"}}
{"generation": "a ratchet contains a small amount of the protein, which is used", "references": ["ratchet wheel", "pawl"], "input": {"head": "ratchet", "relation": "MadeUpOf"}}
{"generation": "PersonX eats a hamburger. After that, he's a regular at the restaurant", "references": ["PersonX pays for the hamburger"], "input": {"head": "PersonX eats a hamburger", "relation": "isBefore"}}
{"generation": "PersonX finds ___ at home. The effect on others will be felt by the person who is not in the same", "references": ["none"], "input": {"head": "PersonX finds ___ at home", "relation": "oEffect"}}
{"generation": "PersonX dates a girl. The effect on PersonX will be the same as the effect on PersonX", "references": ["becomes responsible", "lovers days", "surprises", "becomes a father by accident"], "input": {"head": "PersonX dates a girl", "relation": "xEffect"}}
{"generation": "PersonX finds ___ later is filled by a demon", "references": ["glasses", "a note", "shoes", "money", "truck", "trash", "a letter", "dog", "a picture"], "input": {"head": "PersonX finds ___ later", "relation": "isFilledBy"}}
{"generation": "PersonX sees PersonX's crush PersonY. Before, PersonX needs to be able to talk to PersonX", "references": ["be int he vicinity", "be looking in that direction", "none"], "input": {"head": "PersonX sees PersonX's crush PersonY", "relation": "xNeed"}}
{"generation": "PersonX replaces the old one. Before, PersonX needs to be able to use the new one", "references": ["money", "none", "a car"], "input": {"head": "PersonX replaces the old one", "relation": "xNeed"}}
{"generation": "PersonX catches a cold. Before, PersonX needs to be able to talk to the other person", "references": ["none"], "input": {"head": "PersonX catches a cold", "relation": "xNeed"}}
{"generation": "PersonX earns PersonX's own money. As a result, others feel that PersonX is a better person than he is", "references": ["none"], "input": {"head": "PersonX earns PersonX's own money", "relation": "oReact"}}
{"generation": "PersonX tells PersonY a little. Before that, she tells PersonX that she's going to be", "references": ["PersonX learns everything about windows 10"], "input": {"head": "PersonX tells PersonY a little", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know what PersonY likes.", "PersonY feels no emotional connection to PersonX.", "PersonY is a sociopath who feels nothing.", "PersonY doesn't feel the same way."], "input": {"head": "PersonX gives PersonY a feeling", "relation": "HinderedBy"}}
{"generation": "PersonX meets PersonY's friends. PersonX will be able to talk to PersonY and PersonY will", "references": ["happy to have new friends.", "happy after meeting person friends"], "input": {"head": "PersonX meets PersonY's friends", "relation": "xReact"}}
{"generation": "PersonX takes ___ in PersonX's stride. PersonX is a very good person, and he's a very", "references": ["detached", "wreckless", "stable", "confident"], "input": {"head": "PersonX takes ___ in PersonX's stride", "relation": "xAttr"}}
{"generation": "PersonX spends PersonY money. Before that, he's a very good player", "references": ["PersonX steals PersonY's money"], "input": {"head": "PersonX spends PersonY money", "relation": "isAfter"}}
{"generation": "PersonX gets ___ from work. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX gets ___ from work", "relation": "oWant"}}
{"generation": "PersonX has lost PersonX's phone. After, others will want to know who is the person who lost it", "references": ["try to find the mobile device", "get mad at them", "none"], "input": {"head": "PersonX has lost PersonX's phone", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can't grow facial hair.", "PersonX's dad's sperm created her into a woman", "PersonX has adult female sexual characteristics.", "PersonX was born a female.", "Person X has long hair and wide hips.", "PersonX is unable to obtain testosterone.", "Person X has large breasts.", "PersonX's mom's genetics effect her strongly in her facial features", "PersonX's parents never taught her how to look like the opposite sex"], "input": {"head": "PersonX looks like a man", "relation": "HinderedBy"}}
{"generation": "PersonX sits behind PersonY. After, others will want to know what's going on", "references": ["move away", "wave", "Ask for a pencil.", "to feel more free", "Try to be quiet.", "turn around"], "input": {"head": "PersonX sits behind PersonY", "relation": "oWant"}}
{"generation": "PersonX earns more money. As a result, others feel that they are being cheated", "references": ["secure", "none"], "input": {"head": "PersonX earns more money", "relation": "oReact"}}
{"generation": "PersonX rushes to school. After, others will want to know what happened to him", "references": ["none"], "input": {"head": "PersonX rushes to school", "relation": "oWant"}}
{"generation": "PersonX trails behind PersonY. After, others will want to know who is the real person", "references": ["to wait for x", "to admonish x to speed up"], "input": {"head": "PersonX trails behind PersonY", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The old ones are too pricey to buy.", "They don't have any replacements in stock.", "Their boss has not paid them yet.", "PersonX has no money.", "PersonX cannot find an adequate replacement.", "personX has other bills to pay first", "personX can't afford a new one", "Their mother likes the old one."], "input": {"head": "PersonX replaces the old one", "relation": "HinderedBy"}}
{"generation": "PersonX lays on top of PersonY. The effect on PersonX will be the same as the effect on PersonY", "references": ["they feel warm", "PersonX crushes them.", "carresses PersonY", "PersonX smothers them.", "they feel the hair on their neck rise", "has sex with PersonY"], "input": {"head": "PersonX lays on top of PersonY", "relation": "xEffect"}}
{"generation": "PersonX takes a ride. Before, PersonX needs to be able to talk to the other person", "references": ["to start the car", "to warm up the car", "to be at the amusement park", "to get dressed", "to be in a train", "take the car out of the garage", "to get in the car", "to be at the zoo"], "input": {"head": "PersonX takes a ride", "relation": "xNeed"}}
{"generation": "PersonX drops ___ on the floor. After, PersonX will want to go to the next room and pick up the item", "references": ["to apologize for the mistake", "to pick it up", "get a broom to sweep it up", "pick it up"], "input": {"head": "PersonX drops ___ on the floor", "relation": "xWant"}}
{"generation": "PersonX enjoys swimming. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX enjoys swimming", "relation": "xIntent"}}
{"generation": "PersonX sifts out ___. As a result, others feel that the code is too complex and that it is", "references": ["none"], "input": {"head": "PersonX sifts out ___", "relation": "oReact"}}
{"generation": "PersonX drags PersonY along. After, PersonX will want to know who the other person is", "references": ["to show PersonY the museum", "to take PersonY on the fair rides", "to enjoy the party", "someone to come with", "companionship on the trip", "to dance with Y"], "input": {"head": "PersonX drags PersonY along", "relation": "xWant"}}
{"generation": "PersonX seems better. PersonX is a good player, but he's not a good", "references": ["relaxed", "hopeful", "happy", "confident", "healthy", "attractive"], "input": {"head": "PersonX seems better", "relation": "xAttr"}}
{"generation": "PersonX regulates commerce with nations. PersonX is a global corporation that is headquartered in the United States", "references": ["smart", "experienced", "talkative", "dominant", "willful", "skilled"], "input": {"head": "PersonX regulates commerce with nations", "relation": "xAttr"}}
{"generation": "PersonX takes it everywhere with PersonY. After, PersonX will want to know who you are, and PersonY will want", "references": ["the item to be protected", "wants a relationship", "wants company", "the item to be safe"], "input": {"head": "PersonX takes it everywhere with PersonY", "relation": "xWant"}}
{"generation": "PersonX wins several awards. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX wins several awards", "relation": "oEffect"}}
{"generation": "PersonX meets someone. After that, he's a little more of a jerk", "references": ["PersonX has a few drinks with them", "PersonX onx takes PersonY out to dinner", "PersonX goes shopping with them"], "input": {"head": "PersonX meets someone", "relation": "isBefore"}}
{"generation": "PersonX gets a part. PersonX is a character in the game", "references": ["accomplished", "excited", "disciplined", "relieved", "competent", "responsible"], "input": {"head": "PersonX gets a part", "relation": "xAttr"}}
{"generation": "PersonX drives down the highway. PersonX will be able to see the car and the driver", "references": ["capable", "speedy", "efficient", "good", "determined"], "input": {"head": "PersonX drives down the highway", "relation": "xReact"}}
{"generation": "PersonX leaves PersonY alone. PersonX is the only person who can help PersonY", "references": ["Leaving", "attentive", "Lonely", "thoughtful", "considerate"], "input": {"head": "PersonX leaves PersonY alone", "relation": "xAttr"}}
{"generation": "PersonX asks PersonY to read. Before that, PersonY asks PersonX to read", "references": ["PersonX is teaching out of a book"], "input": {"head": "PersonX asks PersonY to read", "relation": "isAfter"}}
{"generation": "PersonX finally joined. PersonX will be the first person to be able to play the game", "references": ["good", "glad to belong"], "input": {"head": "PersonX finally joined", "relation": "xReact"}}
{"generation": "PersonX sees wood. PersonX is a member of the group of people who are called", "references": ["aware", "watchful", "alert", "perceptive", "interested"], "input": {"head": "PersonX sees wood", "relation": "xAttr"}}
{"generation": "PersonX has a fear of heights. PersonX will be able to see the top of the stairs and the", "references": ["flawed"], "input": {"head": "PersonX has a fear of heights", "relation": "xReact"}}
{"generation": "an oregano can be used for this recipe", "references": ["use because the recipe calls for it", "make the spice rack contents complete", "decorate food", "sprinkle in the dirt to deter bugs", "make some tea", "place on pizza", "make the pizza better", "Decorate Italian Christmas balls", "season lasagna", "put in a bag to sell like weed", "Cause someone to sneeze", "cut some marijuana", "add flavor"], "input": {"head": "oregano", "relation": "ObjectUse"}}
{"generation": "PersonX convinces PersonY's parents. PersonX will be the one to get the message", "references": ["accomplished", "successful", "hopeful", "happy", "excited", "thankful"], "input": {"head": "PersonX convinces PersonY's parents", "relation": "xReact"}}
{"generation": "PersonX blows this popsicle stand. PersonX will be able to use it to blow up the wall", "references": ["destructive", "relieved"], "input": {"head": "PersonX blows this popsicle stand", "relation": "xReact"}}
{"generation": "PersonX becomes frustrated. As a result, others feel that they are being punished for their actions", "references": ["frustrated", "irritated", "none", "upset"], "input": {"head": "PersonX becomes frustrated", "relation": "oReact"}}
{"generation": "a heat source can be used for heating the water", "references": ["workplace school or church", "radiate energy", "cooking food", "cooking", "cook hamburger", "providing warmth", "make home comfortable", "warm object", "providing heat", "warmth", "keeping house warm", "keeping planet warm", "energy", "providing heat to environment", "melting ice", "cook", "greenhouse", "thawing", "relaxing muscles", "keep warm", "warming up", "home"], "input": {"head": "heat source", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Always gets involved", "Is a perfectionist", "PersonX is hot headed.", "PersonX has a bad temper.", "PersonX is certain they're right.", "PersonX can't afford to lose the job.", "See potential for too much damage"], "input": {"head": "PersonX leaves it be", "relation": "HinderedBy"}}
{"generation": "PersonX broadens PersonX's ___ to include. As a result, others feel that PersonX is more important than PersonX", "references": ["none"], "input": {"head": "PersonX broadens PersonX's ___ to include", "relation": "oReact"}}
{"generation": "PersonX makes a speech. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX makes a speech", "relation": "oEffect"}}
{"generation": "PersonX demands PersonY's attention. PersonX will be able to see PersonY's face and will be", "references": ["controlling", "important", "unimportant"], "input": {"head": "PersonX demands PersonY's attention", "relation": "xReact"}}
{"generation": "PersonX practices all day. As a result, others feel the same way", "references": ["none", "astonished", "impressed"], "input": {"head": "PersonX practices all day", "relation": "oReact"}}
{"generation": "PersonX reschedules PersonY's appointment. After, others will want to know what's going on", "references": ["thank personX", "attent the rescheduled appointment"], "input": {"head": "PersonX reschedules PersonY's appointment", "relation": "oWant"}}
{"generation": "PersonX prevents ___ from accessing. The effect on PersonX will be the same as the effect on PersonX", "references": ["is cursed at", "gets pushed by an intruder", "is yelled at", "is criticized", "none"], "input": {"head": "PersonX prevents ___ from accessing", "relation": "xEffect"}}
{"generation": "PersonX packs my bags. Before that, I was a kid", "references": ["PersonX volunteers to pack my bags", "PersonX gets the suitcase from under the bed", "PersonX tells me i need to leave"], "input": {"head": "PersonX packs my bags", "relation": "isAfter"}}
{"generation": "PersonX desperately needed. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX desperately needed", "relation": "oReact"}}
{"generation": "a sockes can be used for a variety of purposes, including:\n\n-", "references": ["protect shoes"], "input": {"head": "sockes", "relation": "ObjectUse"}}
{"generation": "a course book can be used for this purpose", "references": ["resell on American Book Exchange", "teach a class", "learn the subject", "look up homework", "study before redoing the exam", "weight down a picnic blanket corner on a windy day", "highlight with a marker", "sell to students", "balance atop one's head to improve posture", "learn a new skill", "learn items in a class or course", "learn the material", "take to tutoring"], "input": {"head": "course book", "relation": "ObjectUse"}}
{"generation": "PersonX takes a step forward. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX takes a step forward", "relation": "oWant"}}
{"generation": "PersonX falls from the tree. After, PersonX will want to go to the next room and get the key", "references": ["see a doctor to check any injuries", "to cry out in pain", "to laugh at themself", "get hurt", "get up and limp back into the house", "call out for help", "tell someone the story of falling out of the tree", "scream"], "input": {"head": "PersonX falls from the tree", "relation": "xWant"}}
{"generation": "PersonX cuts PersonX's throat. Before that, he's been a very good player", "references": ["PersonX shaves with a sharp razor"], "input": {"head": "PersonX cuts PersonX's throat", "relation": "isAfter"}}
{"generation": "PersonX spends ___ making. PersonX did this to me", "references": ["to make something.", "none"], "input": {"head": "PersonX spends ___ making", "relation": "xIntent"}}
{"generation": "PersonX directs PersonY's attention. Before, PersonX needs to be able to see PersonY's face, but", "references": ["to talk to him", "Grabs Y attention", "decide where to direct their attention", "approach the person", "Locate the item", "to distract him"], "input": {"head": "PersonX directs PersonY's attention", "relation": "xNeed"}}
{"generation": "PersonX explains fully the ___. The effect on others will be similar to that of the ___", "references": ["DO GLAD", "none", "GLAD", "NONE"], "input": {"head": "PersonX explains fully the ___", "relation": "oEffect"}}
{"generation": "PersonX drives on the highway. As a result, others feel the need to drive on the highway", "references": ["none"], "input": {"head": "PersonX drives on the highway", "relation": "oReact"}}
{"generation": "PersonX splits hairs. PersonX did this to me", "references": ["to make petty distinction", "to argue", "to get in a fight"], "input": {"head": "PersonX splits hairs", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["He has to work that day.", "Person X has no ticket", "THE SHOW TICKETS ARE SOLD OUT", "It's he and his wife's anniversary and she wants to go to the beach.", "The usher refuses to let them in until after intermission", "The taxi driver arrived to pick them up too ate", "Person X has to work", "PERSON X IS BLIIND"], "input": {"head": "PersonX sees the show", "relation": "HinderedBy"}}
{"generation": "PersonX gets PersonX's juices flowing. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX gets PersonX's juices flowing", "relation": "oReact"}}
{"generation": "You are likely to find a slipper in a lot of places", "references": ["bed"], "input": {"head": "slipper", "relation": "AtLocation"}}
{"generation": "PersonX races out of the traps. The effect on PersonX will be similar to that of a normal race", "references": ["Is being fast", "Becomes free"], "input": {"head": "PersonX races out of the traps", "relation": "xEffect"}}
{"generation": "PersonX lands on PersonX's leg. After, others will want to kill him", "references": ["none"], "input": {"head": "PersonX lands on PersonX's leg", "relation": "oWant"}}
{"generation": "PersonX fills PersonY's pipe. After that, you can use the same method to fill PersonX", "references": ["PersonX asks PersonY if they like the tobacco"], "input": {"head": "PersonX fills PersonY's pipe", "relation": "isBefore"}}
{"generation": "PersonX has a nice dinner. PersonX will be there for you", "references": ["happy", "content", "cozy", "full", "satisfied"], "input": {"head": "PersonX has a nice dinner", "relation": "xReact"}}
{"generation": "PersonX cann't believe PersonY's luck. PersonX will be the one who gets the most money", "references": ["astonished", "surprised", "happy", "amazed", "jealous"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "xReact"}}
{"generation": "PersonX takes ___ as a result. PersonX did this to me, and I'm not going to lie to", "references": ["to receive payment", "to be fit", "to be fair", "to participate", "none"], "input": {"head": "PersonX takes ___ as a result", "relation": "xIntent"}}
{"generation": "PersonX enjoys swimming. After, others will want to see her swim", "references": ["none"], "input": {"head": "PersonX enjoys swimming", "relation": "oWant"}}
{"generation": "PersonX burns badly. PersonX is a very good player", "references": ["remorseful", "inattentive", "nervous", "anxious", "unskilled", "sickly"], "input": {"head": "PersonX burns badly", "relation": "xAttr"}}
{"generation": "While going on vacation, you would have to go to the airport and get a ticket", "references": ["visit paris", "go camping", "travel home", "go to hong kong", "ends", "go to berlin", "go to san francisco", "go snorkeling", "visit nice places", "pack", "foreign travel", "visit amsterdam", "go to theme parks", "enjoy entertainment", "take cruise", "coworkers envious", "play sports", "put pets in pet hotel", "do passtime", "hire travel agent", "visit europe", "visit rio", "may take train", "visit new york", "having vacation money to spend", "water ski", "pack things", "come home", "go to plays", "go to new orleans", "go to chicago", "make reservations", "go to fiji", "catch up on things", "lounge in backyard hammock", "will relax", "cessation of work", "share with", "go to copenhagen", "work on hobbies", "get out cameras", "carry luggage", "go to mountains", "put things in order", "new challenges", "make travel plans", "buy travelers checks", "visit africa", "get sun", "go to tourist sights", "use travelers checks", "return home", "play baseball", "coworkers must pick up load", "visit los angeles", "visit tokyo", "have adventures", "see yellowstone", "can spend family time", "go sailing", "work on book", "eat out more", "get outdoors", "read maps", "take pictures", "take harbor cruises", "don't go into office", "drive", "go to knotts berry farm", "refreshed attitude", "tan", "relaxation", "go to airport", "buy film", "paint house", "forgetting to pack", "sleep late", "go to park", "meet interesting people", "fishing", "unforgetable memories", "get in car to return", "go diving", "go to washington d.c", "go to sea shore", "spend money", "go to movie", "go to cabin", "pack up vehicle", "update passport", "visit russia", "go to beach", "work on side business", "see yosemite", "luggage lost", "coworkers must do extra work", "read", "visit london", "mosquito bites", "buy camera", "have travelers checks stolen", "stay at hotel", "hire house sitter", "feel relaxed", "read books", "go to hawaii", "take family somewhere", "go fishing", "use public transportation", "visit south america", "see new places", "get excited", "go to reno", "stay at motel", "visit ancient cities", "go skiing", "lose travelers checks", "watch baseball", "go to branson", "sleeping in tent", "relax", "have time to make children", "unexpected", "go to disneyland", "drinking liquor", "go to vegas", "play basetball", "rent place to stay", "have grand alaskan adventure", "vegetate", "pack car", "go on love boat", "work intrudes anyway", "go to caribbean", "visit ozarks", "going through climate changes", "have time for children", "packing too much", "go to national park", "pack bags", "go places have never been", "take camcorder", "use videocam", "visit asia", "go to lake tahoe", "go hiking", "repair house", "business falls apart", "buy travel package", "having lemonade in shade", "work on new business", "catching poison oak", "travel between different destinations", "go home", "house getting robbed", "lay around", "rejuvenate", "go to magic mountain", "say so long to coworkers", "travel to airport", "swim", "go visit relatives", "tired body", "rent motor home", "enjoy outdoors", "go to niagra falls", "pack stuff", "reserve lodging", "picnics", "visit norway sweden or finland", "office will miss", "go to seattle", "go to majorca", "visit china", "get sea sick", "sleeping in sleeping bag", "visit rome", "watch basketball", "do project", "catching poison ivy", "each day can special", "take museum tours", "visit singapore", "driving to destination", "go to favorite place", "pack luggage", "buying film", "see things for first time", "sun burn", "lock up house", "clean garage", "eat in restaurants", "stay away from office", "go visit friends", "refresh", "travel", "make plans"], "input": {"head": "go on vacation", "relation": "HasSubEvent"}}
{"generation": "a tranquilizer can be used for a few days to calm the nerves", "references": ["overdose", "kidnap someone with", "take down a charging animal", "sell on the black market", "take to fall asleep", "give to an animal", "abduct someone", "make someone sleepy", "quiet a prisoner", "shoot wild dog"], "input": {"head": "tranquilizer", "relation": "ObjectUse"}}
{"generation": "PersonX affords the trip. After that, he goes to the hospital and is treated for a", "references": ["PersonX has a pleasant time"], "input": {"head": "PersonX affords the trip", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has not scissor.", "Person X doesn't have a saw.", "The item is impenetrable.", "X does not have the tools.", "PersonX does not work outside of the house.", "PersonX's nemesis sprained PersonX's fingers in a fight", "Person X doesn't have a battery to power their saw.", "PersonX's sister hid the scissors"], "input": {"head": "PersonX cuts a hole", "relation": "HinderedBy"}}
{"generation": "PersonX applies for jobs. After that, you can apply for a job with the same name", "references": ["PersonX goes to interviews"], "input": {"head": "PersonX applies for jobs", "relation": "isBefore"}}
{"generation": "PersonX eats everything. Before that, he was a very good cook", "references": ["PersonX goes to a buffet", "PersonX orders lots of food", "PersonX visits a buffet"], "input": {"head": "PersonX eats everything", "relation": "isAfter"}}
{"generation": "PersonX leaves ___ on the table. PersonX is not a member of the group", "references": ["absent minded", "accomodating", "helpful", "kind", "careless"], "input": {"head": "PersonX leaves ___ on the table", "relation": "xAttr"}}
{"generation": "PersonX gets to PersonY's feet. Before, PersonX needs to be able to get to PersonY's feet", "references": ["none"], "input": {"head": "PersonX gets to PersonY's feet", "relation": "xNeed"}}
{"generation": "PersonX buys a new video game. After that, he buys a new video game", "references": ["PersonX regrets spending their money on the game", "PersonX plays the new video game", "PersonX plays his new video game for hours"], "input": {"head": "PersonX buys a new video game", "relation": "isBefore"}}
{"generation": "PersonX purchases ___ at a price. As a result, others feel that they are being cheated", "references": ["happy"], "input": {"head": "PersonX purchases ___ at a price", "relation": "oReact"}}
{"generation": "PersonX mixes it up. After that, he's a bit of a jerk", "references": ["PersonX pours it into a bake pan", "PersonX turns off the music", "PersonX serves the wrong drinks"], "input": {"head": "PersonX mixes it up", "relation": "isBefore"}}
{"generation": "PersonX reaches around PersonY. As a result, others feel that PersonX is too strong", "references": ["like their personal space is invaded.", "nan", "aroused"], "input": {"head": "PersonX reaches around PersonY", "relation": "oReact"}}
{"generation": "PersonX loves playing sports. Before that, he was a basketball player", "references": ["PersonX goes to a new school"], "input": {"head": "PersonX loves playing sports", "relation": "isAfter"}}
{"generation": "PersonX waits at home. The effect on PersonX will be the same as the effect on PersonX", "references": ["sighs in frustration", "falls asleep", "gets bored", "rolls eyes"], "input": {"head": "PersonX waits at home", "relation": "xEffect"}}
{"generation": "PersonX walks in the park ___. PersonX is a member of the group", "references": ["slow", "relaxed", "unsafe", "content"], "input": {"head": "PersonX walks in the park ___", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY's face is buried in a pillow.", "PersonY is wearing a mask and has a gun.", "PersonX is mad with PersonY.", "PersonX is under gunpoint.", "PersonX is blind.", "PersonY did something mean to PersonX.", "PersonX thinks PersonY is ugly."], "input": {"head": "PersonX looks PersonY in the face", "relation": "HinderedBy"}}
{"generation": "PersonX calls ___ the next day. PersonX did this to me", "references": ["to get answers"], "input": {"head": "PersonX calls ___ the next day", "relation": "xIntent"}}
{"generation": "PersonX goes down the tubes. Before that, he's got a new job", "references": ["PersonX rides a water ride"], "input": {"head": "PersonX goes down the tubes", "relation": "isAfter"}}
{"generation": "a cart can be used for this purpose", "references": ["push around the isles", "remove dvd from", "hold the clothes", "hold the groceries", "put necessities in", "put ingredients in", "keep it all in", "push out to truck", "drive on the course", "put supplies in", "carry groceries in", "follow horse", "carry it home", "put things in", "carry bucket", "place any sale items into", "put tent in", "carry the fabric to the register", "carry personY's luggage", "hold items to get", "put the items in", "push PersonY's groceries out to their car for them", "hold the food", "transport any items they want to buy", "put items from store in", "get to the hole", "drive around", "carry food to the car", "carry the bags out to the vehicle", "put the food inside", "put things into", "move boxes", "put the dresses in", "carry wood", "hold grocery items", "hold item", "put in the items", "move items", "use as a pet stroller", "put purchases in", "fill with groceries", "carry belongings", "carry television out of store", "put their items in", "hold the product", "carry the food in", "put the cake on", "have in case of finding something", "contain the items", "hold items", "store fabric in", "carry items", "bring out the groceries with", "carry sugar", "fix the arrangement", "carry them inside", "hold all the items until they're purchased", "carry the big items", "push a child around", "transport things", "put food while shopping", "hold the goods until checkout", "put purchase in", "put groceries in", "put their purchases in", "ride around course", "place food in at the store", "store their items in", "put the food in", "put the groceries in", "put stuff into", "fill with needed ingredients", "wheel items elsewhere", "collect the products", "put boxes on", "carry purchases", "store items", "hold the items", "carry their goods to checkout", "carry the item", "hold all the items", "drive on course", "move furniture", "place items", "put a baby to sleep in", "put items on", "place the groceries", "put the plants into", "easily transport things", "put away", "carry the food", "put dvd into", "push around", "put stuff in", "bring the items to the checkout", "follow the path", "carry desired things to checkout", "plant flowers in", "hold the bags", "carry food", "put items in", "Push around the store", "put the beer in", "load bags into", "carry purchases to the register"], "input": {"head": "cart", "relation": "ObjectUse"}}
{"generation": "PersonX gets a second opinion. After, others will want to know what the hell is going on", "references": ["To help X", "none", "To give X the right advice"], "input": {"head": "PersonX gets a second opinion", "relation": "oWant"}}
{"generation": "PersonX impresses with PersonX's work. The effect on PersonX will be similar to that of a \"real\" person", "references": ["receives a reward", "none", "receives praise for work"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xEffect"}}
{"generation": "PersonX visits PersonY's friend. As a result, others feel that they are being treated unfairly", "references": ["sociable", "happy and socially-active.", "liked", "happy, thankful"], "input": {"head": "PersonX visits PersonY's friend", "relation": "oReact"}}
{"generation": "PersonX lays on PersonY's bed. PersonX is sitting on the bed, and PersonY is sitting", "references": ["rude", "tired", "lazy"], "input": {"head": "PersonX lays on PersonY's bed", "relation": "xAttr"}}
{"generation": "PersonX starts running again. Before that, he's running for the presidency", "references": ["PersonX stops to pick up some change"], "input": {"head": "PersonX starts running again", "relation": "isAfter"}}
{"generation": "PersonX gets PersonX's belly button pierced. Before, PersonX needs to be able to use the button to get PersonX", "references": ["go to piercing place", "find someone to pierce belly button", "to go to the piercing store", "to get the money", "to go to the shop", "to pay for the piercing"], "input": {"head": "PersonX gets PersonX's belly button pierced", "relation": "xNeed"}}
{"generation": "PersonX swings the bat. The effect on others will be different", "references": ["get hit with the ball", "none", "follow the ball through the sky"], "input": {"head": "PersonX swings the bat", "relation": "oEffect"}}
{"generation": "PersonX takes PersonY's place. PersonX is the only character who can be killed by PersonY", "references": ["aggressive", "honest", "helpful", "pushy"], "input": {"head": "PersonX takes PersonY's place", "relation": "xAttr"}}
{"generation": "PersonX wants to learn how to sing. PersonX will be able to sing in a variety of ways, but", "references": ["accomplished", "like singing", "hopeful."], "input": {"head": "PersonX wants to learn how to sing", "relation": "xReact"}}
{"generation": "PersonX takes PersonY everywhere. As a result, others feel the same way", "references": ["social", "happy", "grateful", "accepted", "happy and excited"], "input": {"head": "PersonX takes PersonY everywhere", "relation": "oReact"}}
{"generation": "PersonX plays hardball. PersonX will be the one who gets the most points", "references": ["in control", "happy, satisfied if successful", "like they have the upper hand", "fit", "satisfied"], "input": {"head": "PersonX plays hardball", "relation": "xReact"}}
{"generation": "PersonX thinks on PersonX's feet. After that, he's a little more serious", "references": ["PersonX gets rewarded for their answer", "PersonX made up an excuse and kept going", "PersonX confronts the other driver"], "input": {"head": "PersonX thinks on PersonX's feet", "relation": "isBefore"}}
{"generation": "PersonX becomes ill. Before, PersonX needs to be healed by a healer", "references": ["none"], "input": {"head": "PersonX becomes ill", "relation": "xNeed"}}
{"generation": "PersonX buys gas. The effect on PersonX will be the same as the effect on PersonX", "references": ["pays money", "smells gas", "gets declined", "smells the fumes"], "input": {"head": "PersonX buys gas", "relation": "xEffect"}}
{"generation": "PersonX throws food. PersonX did this to me", "references": ["to express their anger", "to waste food", "to be negative", "to show their displeasure", "a food fight"], "input": {"head": "PersonX throws food", "relation": "xIntent"}}
{"generation": "PersonX leans PersonY's head. The effect on PersonX will be similar to that of PersonY's", "references": ["goes to hospital.", "feels good about helping", "holds PersonY's head", "gets smacked.", "none"], "input": {"head": "PersonX leans PersonY's head", "relation": "xEffect"}}
{"generation": "PersonX starts working again. Before, PersonX needs to be able to talk to the other person", "references": ["find a job", "to have had time off", "to travel to work", "to contact work to arrange to go back", "a job", "shoes", "get dressed for work", "stop playing video games", "drink some coffee"], "input": {"head": "PersonX starts working again", "relation": "xNeed"}}
{"generation": "PersonX grabs PersonY by the hair. After, others will want to take it", "references": ["cry or scream in pain", "to fight back", "untangle their hair", "to scream", "for personx to let go", "be angry with the person"], "input": {"head": "PersonX grabs PersonY by the hair", "relation": "oWant"}}
{"generation": "PersonX never gave PersonY a present. After that, he was forced to leave the company", "references": ["PersonX felt bad about missing PersonY's birthday"], "input": {"head": "PersonX never gave PersonY a present", "relation": "isBefore"}}
{"generation": "PersonX considers briefly the ___. The effect on others will be the same as the effect on themselves", "references": ["none"], "input": {"head": "PersonX considers briefly the ___", "relation": "oEffect"}}
{"generation": "PersonX trusts ___ anymore. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX trusts ___ anymore", "relation": "oEffect"}}
{"generation": "PersonX dyes PersonX's hair red. The effect on PersonX will be applied to the person's face", "references": ["has red on hands", "PersonX contains an adrenaline rush and sweats from nervousness", "PersonX cringes at their new hair color", "eyes burn from fumes", "none"], "input": {"head": "PersonX dyes PersonX's hair red", "relation": "xEffect"}}
{"generation": "PersonX receives a phone call. The effect on PersonX will be that PersonX will be able to see the phone", "references": ["threats someone", "Have a talk on phone", "Disconnects the call", "is surprised", "went the police station", "gets engaged in conversation"], "input": {"head": "PersonX receives a phone call", "relation": "xEffect"}}
{"generation": "PersonX asks ___ for money. After, PersonX will want to know what the money is", "references": ["to ask for more money", "to express thanks", "to get some help", "to get a loan"], "input": {"head": "PersonX asks ___ for money", "relation": "xWant"}}
{"generation": "PersonX plays it cool. After that, he's a little bit more of a jerk", "references": ["PersonX asks if their date if they would like to order an appetizer"], "input": {"head": "PersonX plays it cool", "relation": "isBefore"}}
{"generation": "You are likely to find a card swipe in a lot of places", "references": ["gym"], "input": {"head": "card swipe", "relation": "AtLocation"}}
{"generation": "PersonX watches PersonY. After, PersonX will want to see PersonY's face", "references": ["to complete an observation survey", "to catch him on the spot", "to find out Y's house", "to get close to persony", "check his activities", "to record persony's action"], "input": {"head": "PersonX watches PersonY", "relation": "xWant"}}
{"generation": "PersonX feels lucky. After, PersonX will want to be able to play with the other players", "references": ["to gamble", "to buy something", "to do something", "to be happy"], "input": {"head": "PersonX feels lucky", "relation": "xWant"}}
{"generation": "PersonX goes to the doctor for a checkup. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX goes to the doctor for a checkup", "relation": "oReact"}}
{"generation": "PersonX starts to sink. After, PersonX will want to know what the hell is going on", "references": ["save himself", "hold breath", "flail around", "swim", "choke on water", "drop some weight"], "input": {"head": "PersonX starts to sink", "relation": "xWant"}}
{"generation": "You are likely to find a danger in a situation where you are not sure what to do", "references": ["war", "roadblock"], "input": {"head": "danger", "relation": "AtLocation"}}
{"generation": "PersonX takes PersonY example. After, PersonX will want to know if PersonY is a member of PersonX", "references": ["to make use of information", "to show support", "to explain PersonY's example", "to go on with the presentation", "work", "Assignment"], "input": {"head": "PersonX takes PersonY example", "relation": "xWant"}}
{"generation": "PersonX smooths away the ___. PersonX did this to the _", "references": ["order"], "input": {"head": "PersonX smooths away the ___", "relation": "xIntent"}}
{"generation": "PersonX goes ___ with PersonX's mom. As a result, others feel like they're being treated unfairly", "references": ["happy.", "happy"], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "oReact"}}
{"generation": "PersonX is a freshman in college. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX is a freshman in college", "relation": "oEffect"}}
{"generation": "PersonX touches wood. PersonX is a very good player", "references": ["wondering", "Aware", "curious", "Alert", "afraid", "superstitious"], "input": {"head": "PersonX touches wood", "relation": "xAttr"}}
{"generation": "a music books can be used for a variety of purposes", "references": ["write down music", "write notes", "soak up a water spill", "memorize songs", "learn the music", "find a sheet", "have songs to practice", "to know what to play", "learn the chords", "practice drills", "start a fire"], "input": {"head": "music books", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY has run away.", "PersonX isn't strong enough.", "PersonX has a pair of broken hands.", "PersonY is too heavy to be pushed.", "PersonY is too big for PersonX.", "The teacher is watching them."], "input": {"head": "PersonX shoves PersonY back", "relation": "HinderedBy"}}
{"generation": "PersonX puts PersonY's phone. Before that, you can use the phone to call the person you", "references": ["PersonX asks PersonY for their phone"], "input": {"head": "PersonX puts PersonY's phone", "relation": "isAfter"}}
{"generation": "PersonX hasn't eaten all day. After that, he's got to go to the hospital", "references": ["PersonX eats some tomato soup"], "input": {"head": "PersonX has n't eaten all day", "relation": "isBefore"}}
{"generation": "PersonX calls PersonY this morning. The effect on PersonX will be similar to the one seen in the previous episode", "references": ["apologizes", "explains the situation", "invites them to breakfast", "makes their day", "goes to PersonY's house", "engages in conversation", "talks for hours"], "input": {"head": "PersonX calls PersonY this morning", "relation": "xEffect"}}
{"generation": "PersonX makes pasta that night. After that, he's going to have to go to the bathroom", "references": ["PersonX eats a big plate of spaghetti"], "input": {"head": "PersonX makes pasta that night", "relation": "isBefore"}}
{"generation": "PersonX sees what was going on. After, PersonX will want to know what's going on", "references": ["Joins in on what's going on", "make an informed conclusion on why its going on", "to investigate why its going on", "Walks away", "to say something", "to keep watching"], "input": {"head": "PersonX sees what was going on", "relation": "xWant"}}
{"generation": "PersonX wants to learn how to sew. After that, he'll be able to sew a lot of things", "references": ["PersonX buys a sewing machine"], "input": {"head": "PersonX wants to learn how to sew", "relation": "isBefore"}}
{"generation": "a punching bag can be used for a variety of purposes, including:\n\n\u2022", "references": ["hit with", "release stress", "punch an object", "strike and punch", "take out frustration", "release adrenaline", "keep your cats warm", "add weight to anything that needs weight", "dress up as a person to scare the neighbors", "use as a fishing lure weight for sharks", "put in bed under the covers so you can sneak out and no one knows", "sleep with on a lonely night", "kick at with their foot", "use for punching", "practice moves on"], "input": {"head": "punching bag", "relation": "ObjectUse"}}
{"generation": "PersonX takes a leaf out of PersonY's book. Before, PersonX needs to be able to read PersonY's book", "references": ["to understand how to use it", "to of learned from it", "to know what PersonY does", "to know how personY does things", "none"], "input": {"head": "PersonX takes a leaf out of PersonY's book", "relation": "xNeed"}}
{"generation": "PersonX interprets the ___ in ways. After, PersonX will want to know what the ___ is, and what it means", "references": ["to reach a conclusion", "Ask someone for their opinion", "Look up more information", "to make life easier", "to share it with others", "to be correct"], "input": {"head": "PersonX interprets the ___ in ways", "relation": "xWant"}}
{"generation": "PersonX gives PersonY confidence. After, others will want to know what you're doing", "references": ["to perform well", "thanks PersonX", "to make PersonX proud", "to feel their best", "to reward PersonX", "to evaluate PersonX"], "input": {"head": "PersonX gives PersonY confidence", "relation": "oWant"}}
{"generation": "PersonX makes some pasta. As a result, others feel that the pasta is too bland", "references": ["none"], "input": {"head": "PersonX makes some pasta", "relation": "oReact"}}
{"generation": "PersonX takes PersonY example. PersonX did this to me, and I'm not sure if it's", "references": ["to emulate"], "input": {"head": "PersonX takes PersonY example", "relation": "xIntent"}}
{"generation": "PersonX has an amazing time. Before, PersonX needs to be able to do things like play games, play", "references": ["invite friends", "none", "prepare for the event"], "input": {"head": "PersonX has an amazing time", "relation": "xNeed"}}
{"generation": "PersonX sits in PersonY's lap. PersonX will be the one who gets the most attention", "references": ["horny", "flirty"], "input": {"head": "PersonX sits in PersonY's lap", "relation": "xReact"}}
{"generation": "PersonX finally joined. The effect on PersonX will be similar to that of the original", "references": ["cooperates", "will attend the event", "meets new people", "learns from it", "is apart of the event", "want's to do their best"], "input": {"head": "PersonX finally joined", "relation": "xEffect"}}
{"generation": "PersonX becomes great. Before that, he was a very good player", "references": ["PersonX practices violin everyday"], "input": {"head": "PersonX becomes great", "relation": "isAfter"}}
{"generation": "PersonX quickly fell in love. PersonX is a very talented and talented person", "references": ["gullible", "emotional", "good person", "romantic", "Lucky to get good things in life."], "input": {"head": "PersonX quickly fell in love", "relation": "xAttr"}}
{"generation": "PersonX gets the call. Before, PersonX needs to get the call", "references": ["none"], "input": {"head": "PersonX gets the call", "relation": "xNeed"}}
{"generation": "PersonX has a dinner party. PersonX is a very nice guy, but he's not a", "references": ["social", "excited", "helpful", "sociable", "friendly", "interactive"], "input": {"head": "PersonX has a dinner party", "relation": "xAttr"}}
{"generation": "PersonX knows no bounds. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX knows no bounds", "relation": "oWant"}}
{"generation": "PersonX loses twenty pounds. PersonX is a very good athlete", "references": ["motivated", "proud", "hard-working", "healthy", "determined"], "input": {"head": "PersonX loses twenty pounds", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has to get the component before a set time.", "PersonY cannot receive more time than they already have.", "PersonX is too busy to ask later.", "PersonX has to run on a tight schedule.", "PersonX cannot meet PersonY at a later time.", "PersonX has too much stuff for PersonY to do."], "input": {"head": "PersonX leaves PersonY time", "relation": "HinderedBy"}}
{"generation": "PersonX makes bread. PersonX will be able to make bread with the same amount of ingredients", "references": ["happy", "chef like", "hungry"], "input": {"head": "PersonX makes bread", "relation": "xReact"}}
{"generation": "PersonX wants ___ to play with. Before, PersonX needs to know how to play with the game", "references": ["look at toys", "none", "to go to store"], "input": {"head": "PersonX wants ___ to play with", "relation": "xNeed"}}
{"generation": "PersonX loves PersonY with all my heart. After, PersonX will want to know who you are", "references": ["to propose marriage", "to feel love back.", "to get engaged", "to get married", "to help plan wedding", "to spend more time with Peterson Y."], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "xWant"}}
{"generation": "PersonX smells something terrible. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX smells something terrible", "relation": "oReact"}}
{"generation": "PersonX bites PersonX's ___ to keep. After, PersonX will want to kill PersonX", "references": ["to spit out the blood", "rinse their mouth out"], "input": {"head": "PersonX bites PersonX's ___ to keep", "relation": "xWant"}}
{"generation": "PersonX calls a taxi. Before that, he's driving a car", "references": ["PersonX wants to go home from the bar"], "input": {"head": "PersonX calls a taxi", "relation": "isAfter"}}
{"generation": "PersonX buys PersonY's phone. Before that, he buys PersonY's phone", "references": ["PersonX breaks PersonX's phone"], "input": {"head": "PersonX buys PersonY's phone", "relation": "isAfter"}}
{"generation": "PersonX sees PersonX's daughter. Before that, she's seen by PersonX's daughter", "references": ["PersonX goes to the strip club"], "input": {"head": "PersonX sees PersonX's daughter", "relation": "isAfter"}}
{"generation": "a keypad can be used for a number of different purposes", "references": ["dial the number", "type words", "trigger a bomb", "secure the safe", "dial number on", "text PersonY back", "dial the number into", "put the password in", "dial 911", "type the text with", "encrypt secret information", "entertain toddler", "call the doctor", "enter the number"], "input": {"head": "keypad", "relation": "ObjectUse"}}
{"generation": "PersonX turns over a new leaf. The effect on others will be reversed", "references": ["none"], "input": {"head": "PersonX turns over a new leaf", "relation": "oEffect"}}
{"generation": "PersonX knows which end is up. Before that, he's got to figure out how to get the", "references": ["PersonX looks at both ends of the pole"], "input": {"head": "PersonX knows which end is up", "relation": "isAfter"}}
{"generation": "PersonX always made ___. Before, PersonX needs to be able to use the ___", "references": ["buy cookie ingredients", "Watch the Cooking Channel.", "place cookie dough in the oven", "none", "Likes what he sees."], "input": {"head": "PersonX always made ___", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is unimpressive.", "PersonY won't pay attention to PersonX.", "PersonX is not interesting.", "PersonY is busy with something else.", "PersonX is painfully shy.", "PersonY has a short attention span."], "input": {"head": "PersonX holds PersonY's attention", "relation": "HinderedBy"}}
{"generation": "PersonX waits at home. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX waits at home", "relation": "oWant"}}
{"generation": "PersonX takes a shopping cart to the store. Before that, he takes a shopping cart to the store", "references": ["PersonX eats the end of their food"], "input": {"head": "PersonX takes a shopping cart to the store", "relation": "isAfter"}}
{"generation": "You are likely to find a scenic view in a park or a scenic spot in a park", "references": ["top of mountain"], "input": {"head": "scenic view", "relation": "AtLocation"}}
{"generation": "PersonX pulls the car over. PersonX did this to me, and I'm not sure if it was", "references": ["to stop driving", "to stop"], "input": {"head": "PersonX pulls the car over", "relation": "xIntent"}}
{"generation": "PersonX cuts PersonY's leg. PersonX will be able to use the same move twice, but Person", "references": ["sad", "bad about themselves", "sorry", "horrible"], "input": {"head": "PersonX cuts PersonY's leg", "relation": "xReact"}}
{"generation": "PersonX spends ___ at PersonY's house. The effect on PersonX will be the same as the effect on PersonY", "references": ["becomes closer to Person Y", "is asked to stay", "is no longer welcome", "spends times with Person Y"], "input": {"head": "PersonX spends ___ at PersonY's house", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is depressed.", "PersonX is too cynical to fall in love.", "PersonX already has a spouse.", "PersonY hates PersonX."], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "HinderedBy"}}
{"generation": "PersonX takes a picture. After that, he takes a picture of the other person", "references": ["PersonX prints out the picture"], "input": {"head": "PersonX takes a picture", "relation": "isBefore"}}
{"generation": "PersonX puts PersonY's ___ together is filled by the fact that PersonX is a person who is", "references": ["table", "documents", "Schedule", "cabinet", "books", "bookshelves", "chair", "Drawer", "desk", "Cabinet", "clothes", "kitchen", "Bike", "Puzzle", "bassinet", "dresser", "compact discs", "Homework"], "input": {"head": "PersonX puts PersonY's ___ together", "relation": "isFilledBy"}}
{"generation": "PersonX forms PersonY impression. PersonX did this to me", "references": ["to be funny", "none"], "input": {"head": "PersonX forms PersonY impression", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know the whole story", "PersonY ran off"], "input": {"head": "PersonX tans PersonY's hide", "relation": "HinderedBy"}}
{"generation": "PersonX studies ___ in college. As a result, others feel that they are being judged by their own self-", "references": ["none"], "input": {"head": "PersonX studies ___ in college", "relation": "oReact"}}
{"generation": "PersonX is ready to go. Before, PersonX needs to be able to use the \"X\" button to", "references": ["to have their stuff packed", "finish work", "to get up early", "get in car", "wear shoes", "wear new clothes"], "input": {"head": "PersonX is ready to go", "relation": "xNeed"}}
{"generation": "PersonX wastes PersonX's day. The effect on PersonX will be minimal", "references": ["loses time", "waste of day", "Stands alone", "Gets abbandoned", "falls behind on chores or work", "unlike enjoyment"], "input": {"head": "PersonX wastes PersonX's day", "relation": "xEffect"}}
{"generation": "PersonX remembers PersonY's name. After, PersonX will want to know who the person is", "references": ["to know everyone's name", "to figure out why they forgot", "to think about them", "to share past experiences", "to be polite", "to greet"], "input": {"head": "PersonX remembers PersonY's name", "relation": "xWant"}}
{"generation": "PersonX finds ___ PersonY wanted is filled by a person who is not a person", "references": ["food", "plants", "clothes", "people", "flower-pots", "flowers"], "input": {"head": "PersonX finds ___ PersonY wanted", "relation": "isFilledBy"}}
{"generation": "PersonX takes ___ for a ride. After, PersonX will want to know what the hell is going on", "references": ["To take a long drive", "to go home", "get something to eat", "to drop people off", "To go on vacation"], "input": {"head": "PersonX takes ___ for a ride", "relation": "xWant"}}
{"generation": "PersonX is selling lemonade. The effect on PersonX will be similar to that of a lemonade", "references": ["he made new friends", "he made money", "attracts attention", "earns money"], "input": {"head": "PersonX is selling lemonade", "relation": "xEffect"}}
{"generation": "PersonX walks in the park ___. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX walks in the park ___", "relation": "oEffect"}}
{"generation": "PersonX grabs a towel. After that, he grabs a towel and goes to the bathroom", "references": ["PersonX drys off and puts on the new shirt"], "input": {"head": "PersonX grabs a towel", "relation": "isBefore"}}
{"generation": "PersonX puts PersonX's mind to it. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "oReact"}}
{"generation": "PersonX enjoys PersonX's class. PersonX did this to me because I was a fan of PersonX", "references": ["learn", "none"], "input": {"head": "PersonX enjoys PersonX's class", "relation": "xIntent"}}
{"generation": "PersonX has been deferred until test results are in. Before, PersonX needs to be able to run the tests", "references": ["to be subjugated by the organization of the system", "to of taken the test", "none"], "input": {"head": "PersonX has been deferred until test results are in", "relation": "xNeed"}}
{"generation": "PersonX derives PersonY's name. PersonX will be the name of the person who created the PersonX", "references": ["happy they now know.", "proud", "excited", "satisfied"], "input": {"head": "PersonX derives PersonY's name", "relation": "xReact"}}
{"generation": "PersonX names the films PersonY is most proud of. PersonX is a character who is a character who is a character", "references": ["social", "knowing", "understanding", "attentive", "caring", "annoying"], "input": {"head": "PersonX names the films PersonY is most proud of", "relation": "xAttr"}}
{"generation": "PersonX pays taxes. PersonX is a company that makes a lot of money", "references": ["dutiful", "Responsible", "Lawful", "prepared", "responsible"], "input": {"head": "PersonX pays taxes", "relation": "xAttr"}}
{"generation": "PersonX orders the book. After that, he orders the book to be destroyed", "references": ["PersonX is enjoying the great novel"], "input": {"head": "PersonX orders the book", "relation": "isBefore"}}
{"generation": "PersonX feels the ___ keenly is filled by the ___", "references": ["steak", "curtains", "apple", "dog", "carpet"], "input": {"head": "PersonX feels the ___ keenly", "relation": "isFilledBy"}}
{"generation": "a cd holder can be used for the following purposes:\n\n1", "references": ["store cds", "make a cd case pen holder", "keep CD's in", "hold a DVD", "hold doll shoes", "turn into a decoration", "protect the disc from scratches", "make into a fish tank", "carry their purchases home", "file paperwork"], "input": {"head": "cd holder", "relation": "ObjectUse"}}
{"generation": "PersonX gives PersonY an f. The effect on PersonX will be the same as PersonY's effect on PersonY", "references": ["writes with it.", "none", "gets a writing utinsel."], "input": {"head": "PersonX gives PersonY an f", "relation": "xEffect"}}
{"generation": "PersonX plays a new instrument. As a result, others feel that the game is too simple and too complex", "references": ["appreciative", "none", "satisfied"], "input": {"head": "PersonX plays a new instrument", "relation": "oReact"}}
{"generation": "PersonX loves PersonY to death. Before that, he was a very good friend of the show's", "references": ["PersonX goes on a date with PersonY"], "input": {"head": "PersonX loves PersonY to death", "relation": "isAfter"}}
{"generation": "PersonX puts PersonY to use. After that, you can use PersonX to create a new Person", "references": ["PersonX is an effective leader"], "input": {"head": "PersonX puts PersonY to use", "relation": "isBefore"}}
{"generation": "PersonX is also nervous. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX is also nervous", "relation": "oWant"}}
{"generation": "PersonX pisses money up the wall. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX pisses money up the wall", "relation": "oReact"}}
{"generation": "PersonX watches ___ anymore. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX watches ___ anymore", "relation": "oEffect"}}
{"generation": "PersonX visits PersonY's cousin. The effect on others will be similar to that of a normal person", "references": ["opens the door", "calls the cousin", "asks to go", "smiles at X"], "input": {"head": "PersonX visits PersonY's cousin", "relation": "oEffect"}}
{"generation": "PersonX makes my day. After, PersonX will want to know what you're doing", "references": ["to say goodbye", "to cheer someone up", "to leave for work", "to be close to me", "to spend a lot of time with me", "to be seen as nice"], "input": {"head": "PersonX makes my day", "relation": "xWant"}}
{"generation": "PersonX presents the ___ in a manner. PersonX will be able to use the ___ in a way that is", "references": ["a sense of achievement"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "xReact"}}
{"generation": "PersonX gives ___ a small smile. As a result, others feel a little more comfortable with her", "references": ["happy", "none", "accepted", "acknowledged"], "input": {"head": "PersonX gives ___ a small smile", "relation": "oReact"}}
{"generation": "PersonX passes around PersonY. PersonX is the only person who can pass around PersonY", "references": ["sharing", "speedy", "Impatient", "Rude", "spirited", "quick"], "input": {"head": "PersonX passes around PersonY", "relation": "xAttr"}}
{"generation": "PersonX starves the ___ into submission. The effect on others will be felt by the ___", "references": ["Many people will fight back the punishment.", "have grumbling stomachs", "become weak in their bodies", "Mane people will try to avoid the starvation."], "input": {"head": "PersonX starves the ___ into submission", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too good at the game.", "The other player is really bad at games.", "PersonX has money on the game.", "PersonX's coach trained him too well.", "PersonX is talented.", "PersonX will get killed by his bookie if he loses.", "PersonX is not playing tonight.", "Person X is really really lucky."], "input": {"head": "PersonX loses the first game", "relation": "HinderedBy"}}
{"generation": "PersonX tries sushi before. PersonX did this to me", "references": ["to eat something"], "input": {"head": "PersonX tries sushi before", "relation": "xIntent"}}
{"generation": "PersonX is PersonY's maid of honor. After that, she is the one who is the one who gets", "references": ["PersonX driving PersonY"], "input": {"head": "PersonX is PersonY's maid of honor", "relation": "isBefore"}}
{"generation": "PersonX uses ___ anymore. The effect on PersonX will be changed to the same effect as the original", "references": ["longs for the taste", "becomes healthy", "learns from it", "gets healthier", "uses something else", "has new friends"], "input": {"head": "PersonX uses ___ anymore", "relation": "xEffect"}}
{"generation": "PersonX puts ___ together. PersonX will be the one who gets the most votes", "references": ["worthy", "accomplished", "satisfied that he was able to finish the game", "a sense of achievement"], "input": {"head": "PersonX puts ___ together", "relation": "xReact"}}
{"generation": "PersonX studies ___ in college. The effect on PersonX will be examined in the following way:\n\nPerson X", "references": ["gains knowledge", "none", "learns new skills"], "input": {"head": "PersonX studies ___ in college", "relation": "xEffect"}}
{"generation": "PersonX expects another ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX expects another ___", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is far behind of PersonY as to where they cannot catch up.", "PersonX is too nice.", "PersonY is better than them.", "PersonX depends on PersonY for their success.", "PersonY is too fast for PersonX.", "PersonY is stronger than personX.", "PersonY is already too far ahead.", "PersonY doesn't take PersonX seriously.", "PersonY is more determined than PersonX.", "PersonX cannot find personX because a stranger is protecting her."], "input": {"head": "PersonX impedes PersonY's progress", "relation": "HinderedBy"}}
{"generation": "PersonX gets ___ as a result. After, others will want to know what the fuck you're doing", "references": ["to appreciate her", "none", "to follow her"], "input": {"head": "PersonX gets ___ as a result", "relation": "oWant"}}
{"generation": "PersonX gets right back. PersonX did this to me", "references": ["to be efficent", "to continue his duty"], "input": {"head": "PersonX gets right back", "relation": "xIntent"}}
{"generation": "PersonX dyes PersonX's hair pink. PersonX is a character in the game", "references": ["daring", "Creative", "rebellious", "Energetic", "youthful"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "xAttr"}}
{"generation": "PersonX eats crackers. Before that, he was a kid who was a little bit of", "references": ["PersonX is making lunch"], "input": {"head": "PersonX eats crackers", "relation": "isAfter"}}
{"generation": "PersonX buys PersonX's wife ___. After, PersonX will want to buy PersonX's wife", "references": ["to wish her for her birthday", "to express his love", "to celebrate a milestone", "to give something to the wife", "to ask the wife if she likes it"], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "xWant"}}
{"generation": "PersonX becomes PersonY engineer. Before that, he was a programmer", "references": ["PersonX applies to be PersonY's engineer", "PersonX applies for the contract", "PersonX applies for a job"], "input": {"head": "PersonX becomes PersonY engineer", "relation": "isAfter"}}
{"generation": "PersonX leaves the table. After, PersonX will want to talk to the other person", "references": ["to go home", "go home", "to use the bathroom", "to use the restroom", "use the bathroom"], "input": {"head": "PersonX leaves the table", "relation": "xWant"}}
{"generation": "PersonX gives PersonY bread. Before that, you can use the same recipe for PersonX", "references": ["PersonX takes bread from the restaurant table basket"], "input": {"head": "PersonX gives PersonY bread", "relation": "isAfter"}}
{"generation": "PersonX expects another ___. After, PersonX will want to use the same ___", "references": ["to listen to it", "to see what happens", "to learn it", "to hope it arrives on time", "to reinforce his battlements", "to prepare for battle"], "input": {"head": "PersonX expects another ___", "relation": "xWant"}}
{"generation": "PersonX is hot and humid. As a result, others feel the need to take a shower", "references": ["none"], "input": {"head": "PersonX is hot and humid", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Their kids have done nothing wrong.", "Their mother is not in the hospital.", "PersonX has nothing to worry about.", "Person X is bipolar and is incapable of  emotions", "Person X has no reason to worry so they do not.", "PersonX is taking their anxiety medicine."], "input": {"head": "PersonX starts to worry", "relation": "HinderedBy"}}
{"generation": "PersonX protects ___ from harm. PersonX will be able to use the same abilities as the other characters", "references": ["accomplished", "glad", "helpful"], "input": {"head": "PersonX protects ___ from harm", "relation": "xReact"}}
{"generation": "PersonX gives ___ a small smile. PersonX will be happy to help you out", "references": ["happy.", "happy", "fine", "good about him/herself"], "input": {"head": "PersonX gives ___ a small smile", "relation": "xReact"}}
{"generation": "PersonX takes the ___ to read. PersonX will be able to read the ___ and the ___ will be", "references": ["good.", "satisfied"], "input": {"head": "PersonX takes the ___ to read", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY dropped PersonX's cheeseburgers on the floor.", "PersonX doesn't have any ground beef in the house.", "PersonX is a vegan.", "The cheeseburger place burned down.", "PersonX is allergic to cheese.", "PersonX has a stomach ache.", "Cheeseburgers make PersonX sick.", "PersonX's doctor told them to stop eating meat."], "input": {"head": "PersonX eats cheeseburgers", "relation": "HinderedBy"}}
{"generation": "PersonX turns PersonX's life around. After that, he's a little more of a jerk", "references": ["PersonX attends college"], "input": {"head": "PersonX turns PersonX's life around", "relation": "isBefore"}}
{"generation": "banana is a very good example of a good example of a", "references": ["peel", "yellow", "found in store", "eaten", "good to eat"], "input": {"head": "banana", "relation": "HasProperty"}}
{"generation": "PersonX improves PersonX's position. Before, PersonX needs to be able to use the same abilities as PersonX", "references": ["to work hard", "to assess where they need to get better", "to make money", "to improve themselves", "work hard", "ask for a promotion"], "input": {"head": "PersonX improves PersonX's position", "relation": "xNeed"}}
{"generation": "PersonX goes against the grain. Before that, he's been a bit of a dick", "references": ["PersonX gets rejected", "PersonX marches to the beat of a different drum"], "input": {"head": "PersonX goes against the grain", "relation": "isAfter"}}
{"generation": "PersonX takes place on the day. PersonX is a character who is a member of the team", "references": ["curious", "competitiveplayful", "alert", "awake"], "input": {"head": "PersonX takes place on the day", "relation": "xAttr"}}
{"generation": "PersonX shakes the pagoda tree. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX shakes the pagoda tree", "relation": "oEffect"}}
{"generation": "PersonX takes a hike in the woods. PersonX is a member of the group of people who are trying", "references": ["active", "outdoorsy", "fit", "athletic", "healthy"], "input": {"head": "PersonX takes a hike in the woods", "relation": "xAttr"}}
{"generation": "PersonX gets a replacement. Before that, he's a little more of a \"good guy", "references": ["PersonX drops their phone in the toilet"], "input": {"head": "PersonX gets a replacement", "relation": "isAfter"}}
{"generation": "PersonX has to cancel PersonX's plans. As a result, others feel that PersonX is not doing enough to help them", "references": ["sad", "none", "disappointed"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "oReact"}}
{"generation": "PersonX orders television from amazon. After that, he's going to be a regular on the show", "references": ["PersonX opens the box when television is delivered"], "input": {"head": "PersonX orders television from amazon", "relation": "isBefore"}}
{"generation": "PersonX graduates top of PersonX's class. After that, they are given a job in PersonX's office", "references": ["PersonX applies for a high paying job"], "input": {"head": "PersonX graduates top of PersonX's class", "relation": "isBefore"}}
{"generation": "PersonX knows much. Before, PersonX needs to know how to play the game", "references": ["to pay attention", "to study", "to learn things", "to understand a wide range of issues"], "input": {"head": "PersonX knows much", "relation": "xNeed"}}
{"generation": "PersonX measures ___ directly. Before, PersonX needs to know that the user is a member of the group", "references": ["none", "know what to do", "know what they need to meet"], "input": {"head": "PersonX measures ___ directly", "relation": "xNeed"}}
{"generation": "PersonX takes a number. After that, the number is the number of the character in the", "references": ["PersonX waits for an hour before being called up"], "input": {"head": "PersonX takes a number", "relation": "isBefore"}}
{"generation": "PersonX tips PersonY's head back. Before that, she's been trying to get the girl to stop", "references": ["PersonX buys PersonY a flaming shot", "PersonX hears PersonY choking", "PersonX gets into a fight with PersonY"], "input": {"head": "PersonX tips PersonY's head back", "relation": "isAfter"}}
{"generation": "PersonX begins to eat. After, others will want to eat her", "references": ["none", "to satisfy their hunger", "to finish their meal"], "input": {"head": "PersonX begins to eat", "relation": "oWant"}}
{"generation": "a learner's permit can be used for a variety of purposes, including:\n\n\u2022", "references": ["warn the other drivers of", "fold into a square and prop up a wobbly table", "bribe a teenager with", "fold into a paper airplane", "steal a car", "scare your parents with", "operate a vehicle", "take your siblings out for ice cream", "tattoo people as an apprentice", "have permission to practice driving"], "input": {"head": "learner's permit", "relation": "ObjectUse"}}
{"generation": "PersonX uses PersonY's middle finger. After, others will want to use PersonX's middle finger", "references": ["to argue with PersonX", "to prove their point", "to play with PersonX", "none", "to have fun with PersonX"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "oWant"}}
{"generation": "PersonX manages PersonY's ___ well. As a result, others feel that PersonY is a better person than PersonX", "references": ["good about person x's work", "loved"], "input": {"head": "PersonX manages PersonY's ___ well", "relation": "oReact"}}
{"generation": "PersonX smooths PersonY's hair. PersonX is a bit of a mess, but it's not", "references": ["affectionate", "beautiful", "confident", "caring"], "input": {"head": "PersonX smooths PersonY's hair", "relation": "xAttr"}}
{"generation": "PersonX sits at the dinning room table. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sits at the dinning room table", "relation": "oEffect"}}
{"generation": "PersonX takes a swig. Before, PersonX needs to be able to read the contents of a document", "references": ["none"], "input": {"head": "PersonX takes a swig", "relation": "xNeed"}}
{"generation": "PersonX makes PersonX's parents proud. After that, he's a little more humble", "references": ["PersonX gets offered a good job in their field"], "input": {"head": "PersonX makes PersonX's parents proud", "relation": "isBefore"}}
{"generation": "PersonX puts ___ in PersonX's backpack. After, others will want to take it", "references": ["put on backpack", "take backpack", "none"], "input": {"head": "PersonX puts ___ in PersonX's backpack", "relation": "oWant"}}
{"generation": "PersonX hurts anyone's ___. As a result, others feel that they are being treated unfairly", "references": ["ashamed and disrespected"], "input": {"head": "PersonX hurts anyone 's ___", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is in the back of a cop car.", "PersonX is stuck in the car.", "PersonX's parents keep talking to them.", "PersonX is pinned down by the police.", "PersonX legs got chopped off so they are trapped at the scene.", "PersonX is held at gunpoint by a robber.", "PersonX has been arrested.", "PersonX's friend spotted them already."], "input": {"head": "PersonX flees the scene", "relation": "HinderedBy"}}
{"generation": "PersonX chooses among alternatives. PersonX did this to make sure that the game was not too difficult to", "references": ["to choose the best option"], "input": {"head": "PersonX chooses among alternatives", "relation": "xIntent"}}
{"generation": "PersonX goes ___ for the first time. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX goes ___ for the first time", "relation": "oWant"}}
{"generation": "PersonX increases PersonX's knowledge. The effect on others will be reversed if PersonX is not in the same class", "references": ["none"], "input": {"head": "PersonX increases PersonX's knowledge", "relation": "oEffect"}}
{"generation": "PersonX accidentally kicked. After, others will want to know what happened", "references": ["to yell", "none", "to get back at PersonX"], "input": {"head": "PersonX accidentally kicked", "relation": "oWant"}}
{"generation": "PersonX makes a salad. PersonX is a very good chef", "references": ["creative", "talented", "health concious", "hungry"], "input": {"head": "PersonX makes a salad", "relation": "xAttr"}}
{"generation": "PersonX breaks free. After, PersonX will want to know who you are", "references": ["to take rest", "to be free", "to leave the place", "run", "to regain control", "to get away"], "input": {"head": "PersonX breaks free", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person Y has a hard to pronounce name", "PersonY has a terrible name.", "PersonX has a mother with the same name and he does not like his mother", "PersonX has a sister with the same name and he does not like his sister", "Person Y has an offensive name", "PersonY's name reminds PersonX of a former lover."], "input": {"head": "PersonX likes PersonY's name", "relation": "HinderedBy"}}
{"generation": "PersonX plays hardball. Before that, he's a bit of a dick", "references": ["PersonX is negotiating for a car"], "input": {"head": "PersonX plays hardball", "relation": "isAfter"}}
{"generation": "PersonX camps with PersonX's family. After that, they are given a new name, PersonX,", "references": ["PersonX scratches the mosquito bites from the night before", "PersonX makes smores at night", "PersonX catches a bunch of fish"], "input": {"head": "PersonX camps with PersonX's family", "relation": "isBefore"}}
{"generation": "PersonX wants to be an actor. As a result, others feel that he is not as good as he thinks he", "references": ["none"], "input": {"head": "PersonX wants to be an actor", "relation": "oReact"}}
{"generation": "PersonX makes contact. The effect on others will be different", "references": ["none", "has a conversation with personX", "communicates"], "input": {"head": "PersonX makes contact", "relation": "oEffect"}}
{"generation": "You are likely to find an emergency care in a hospital or nursing home", "references": ["hospital"], "input": {"head": "emergency care", "relation": "AtLocation"}}
{"generation": "PersonX calls ___ the next day. After, PersonX will want to know what the next day is", "references": ["have a conversaton", "talk to person", "to ask questions", "to talk to someone", "solidify plans", "leave a voice mail", "plan a get together", "say goodbye", "hang up"], "input": {"head": "PersonX calls ___ the next day", "relation": "xWant"}}
{"generation": "PersonX finds another. PersonX will be able to use the same abilities as the other characters", "references": ["happy", "surprised", "glad"], "input": {"head": "PersonX finds another", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY has no phone to be contacted for advice", "PersonX can't find PersonY.", "PersonY is not answering their phone.", "PersonY is missing.", "PersonX does not have the contact information for PersonY", "PersonY is asleep already."], "input": {"head": "PersonX asks PersonY advice", "relation": "HinderedBy"}}
{"generation": "PersonX shares and share alike. After, others will want to know what you're doing", "references": ["to help other people", "none", "to be on equal terms"], "input": {"head": "PersonX shares and share alike", "relation": "oWant"}}
{"generation": "PersonX plans a trip. PersonX did this to me", "references": ["to enjoy", "to go somewhere fun", "to go on vacation"], "input": {"head": "PersonX plans a trip", "relation": "xIntent"}}
{"generation": "PersonX puts PersonY's ___ together. After, PersonX will want to know what PersonY is doing", "references": ["Keep giving them advice.", "Make sure they're doing the right thing.", "to add to them", "to review them", "to take a trip", "to pack the suitcase"], "input": {"head": "PersonX puts PersonY's ___ together", "relation": "xWant"}}
{"generation": "PersonX makes perfect. PersonX will be the first person to ever be able to play the", "references": ["contented with himself"], "input": {"head": "PersonX makes perfect", "relation": "xReact"}}
{"generation": "PersonX avoids every ___. PersonX will be the same as PersonX", "references": ["safe", "relieved", "combatant"], "input": {"head": "PersonX avoids every ___", "relation": "xReact"}}
{"generation": "PersonX enjoys PersonX's class. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX enjoys PersonX's class", "relation": "oEffect"}}
{"generation": "a list of participants can be used for the purposes of this section", "references": ["suss out the opposition", "to roll call", "check them off as they enter", "tot up how much money will come in", "join the boot camp", "make sure the game can start", "take attendance", "tear up for confetti", "start the event", "start a fire"], "input": {"head": "list of participants", "relation": "ObjectUse"}}
{"generation": "PersonX makes every effort. The effect on PersonX will be similar to that of a normal person", "references": ["wins the game", "learns from trying", "gets tired", "makes progress", "none"], "input": {"head": "PersonX makes every effort", "relation": "xEffect"}}
{"generation": "PersonX pays ___ at the rate. PersonX did this to me because I was a fan of the show and", "references": ["wants his bills paid", "to be a problem", "the service of others"], "input": {"head": "PersonX pays ___ at the rate", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The store is closed for the night.", "Their mother will not take them.", "The door is jammed shut.", "PersonX lost their ID", "Their wife broke their phone.", "The bar is for adults and personX is 17."], "input": {"head": "PersonX tries to get in", "relation": "HinderedBy"}}
{"generation": "PersonX wraps PersonY's hand. Before that, she wraps PersonX's hand around her waist", "references": ["PersonY sprains PersonY's wrist"], "input": {"head": "PersonX wraps PersonY's hand", "relation": "isAfter"}}
{"generation": "PersonX sees ___ online. PersonX is a member of the group, and she is a", "references": ["curious", "friendly", "observant", "bored", "determined"], "input": {"head": "PersonX sees ___ online", "relation": "xAttr"}}
{"generation": "PersonX is ready to give up. Before that, he's already been given a chance to prove himself", "references": ["PersonX works on it all day"], "input": {"head": "PersonX is ready to give up", "relation": "isAfter"}}
{"generation": "PersonX wants to learn how to cook. PersonX will be able to cook for you", "references": ["glad", "proud of their hard work", "excited", "good about himself", "satisfied"], "input": {"head": "PersonX wants to learn how to cook", "relation": "xReact"}}
{"generation": "PersonX takes PersonY example. Before that, PersonX was a bit of a mess", "references": ["PersonX starts a hobby"], "input": {"head": "PersonX takes PersonY example", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has been barred from the premises and cannot collect anyone else's share", "PersonY is a selfish person.", "PersonY refuses to share", "PersonX is not interested in what PersonY has all the time."], "input": {"head": "PersonX gets PersonY's share", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["No one will buy their record.", "their music sucks", "PersonX can't get any attention.", "The audience doesn't like them.", "What PersonX has is not any good.", "PersonX has no special talents.", "they can't act", "No one is interested."], "input": {"head": "PersonX is a huge hit", "relation": "HinderedBy"}}
{"generation": "PersonX spends a lot of money. PersonX did this to me", "references": ["a lot of toys", "entertained", "materialistic", "a lot of gadgets."], "input": {"head": "PersonX spends a lot of money", "relation": "xIntent"}}
{"generation": "PersonX slips under the radar. As a result, others feel the same way", "references": ["surprised", "angry", "annoyed", "none"], "input": {"head": "PersonX slips under the radar", "relation": "oReact"}}
{"generation": "PersonX feels unhappy. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX feels unhappy", "relation": "oReact"}}
{"generation": "PersonX leaves the library. PersonX will be able to access the library from the console", "references": ["happy to get some food", "studious", "tired", "glad she went to the library and is ready to relax at home."], "input": {"head": "PersonX leaves the library", "relation": "xReact"}}
{"generation": "PersonX continues PersonY's journey. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX continues PersonY's journey", "relation": "oReact"}}
{"generation": "PersonX pays PersonX's ___ to the king. After, PersonX will want to know who the king is", "references": ["To stay in good standing", "tell others about the event", "To gain respect from the King", "remember the event"], "input": {"head": "PersonX pays PersonX's ___ to the king", "relation": "xWant"}}
{"generation": "PersonX sees all of the animals. Before, PersonX needs to find a way to get the animals to the right", "references": ["go where the animals are located", "to go to the zoo", "find out where the animals are", "walk towards the cage", "visits a farm", "visits a zoo"], "input": {"head": "PersonX sees all of the animals", "relation": "xNeed"}}
{"generation": "PersonX plays PersonY's game. After that, you can play the game with PersonY", "references": ["PersonX wins game"], "input": {"head": "PersonX plays PersonY's game", "relation": "isBefore"}}
{"generation": "PersonX finally meet PersonY. PersonX is a very nice guy, but he's not a", "references": ["busy", "social", "available", "welcoming", "determined"], "input": {"head": "PersonX finally meet PersonY", "relation": "xAttr"}}
{"generation": "a watch can be used for a variety of purposes, including:\n\n\u2022", "references": ["tell time", "verify the time", "see the time", "give the time of day", "use as an eyepatch", "check what time lunch is", "check the clock", "ensure they do not overstay", "see the hands", "Know the current hour", "Check the time", "keep an eye on time", "monitor length of the break taken by PersonY", "put on their wrist", "follow the time", "check the time", "keep track of time", "tell how much time they have to complete the report", "check that the store is still open", "check time", "make a determination", "hide in bag", "finish the test on time", "show the time", "play games on", "get there on time", "see the hour and minute", "see how late it is", "time how long it takes", "know what time it is", "verify what the current hour is", "cut out cookie dough", "know the exact time", "control their thermostat", "monitor the time", "make sure they're on time", "keep hearbeat", "be stylish", "see what time it is", "put the watchband on", "count the steps", "have PersonX take", "wear on their arm", "see how long it is taking", "keep eye on the time", "make sure they get there on time", "know the time", "see that it is time to go", "attach the band to", "keep the time", "see when it is"], "input": {"head": "watch", "relation": "ObjectUse"}}
{"generation": "PersonX looks PersonY ___ in the face. PersonX is a little more aggressive, but he's still a", "references": ["bold", "assertive", "angry", "confrontational", "direct"], "input": {"head": "PersonX looks PersonY ___ in the face", "relation": "xAttr"}}
{"generation": "PersonX gets something to eat. The effect on PersonX will be similar to that of a normal food", "references": ["prepares food.", "gets energy and strength", "is able to get a relief from hunger", "digests food.", "to get off hungry", "chews food.", "to taste somethings"], "input": {"head": "PersonX gets something to eat", "relation": "xEffect"}}
{"generation": "PersonX gets close to PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to touch her", "to protect person", "to show affection for person", "to talk to person"], "input": {"head": "PersonX gets close to PersonY", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The vet deemed personX unfit to watch the puppy.", "PersonX's friend took the puppy from him.", "The dog doesn't like people.", "The puppy bite them.", "A criminal took the puppy from personX.", "They are a cat person", "PersonX is allergic to dogs.", "They are afraid of dogs", "The puppy is causing a big mess.", "The puppy bit them"], "input": {"head": "PersonX loves the puppy", "relation": "HinderedBy"}}
{"generation": "PersonX feels very nervous. Before that, he was very nervous", "references": ["PersonX gets up to give a speech"], "input": {"head": "PersonX feels very nervous", "relation": "isAfter"}}
{"generation": "a dsihwasher can be used for washing dishes, but it's not recommended for washing", "references": ["washing dishes and cutlery"], "input": {"head": "dsihwasher", "relation": "ObjectUse"}}
{"generation": "PersonX is three years old. After that, he's been playing with his friends for a while", "references": ["PersonX gets lots of gifts"], "input": {"head": "PersonX is three years old", "relation": "isBefore"}}
{"generation": "PersonX provides PersonY analysis. The effect on PersonX will be determined by the following:\n\nPersonX's", "references": ["Gains money", "receives thanks", "Gives feedback", "Gains respect", "Talks about the analysis", "receives reward"], "input": {"head": "PersonX provides PersonY analysis", "relation": "xEffect"}}
{"generation": "PersonX improves PersonX's sales. The effect on others will be less", "references": ["none"], "input": {"head": "PersonX improves PersonX's sales", "relation": "oEffect"}}
{"generation": "PersonX stops dead in PersonY's tracks. After, others will want to know what happened to the other two", "references": ["to see personX's reaction", "to keep walking", "to exchange opinions with him", "to talk to them"], "input": {"head": "PersonX stops dead in PersonY's tracks", "relation": "oWant"}}
{"generation": "PersonX makes a date. The effect on PersonX will be the same as the effect on PersonX", "references": ["makes reservation", "wonders", "out of money", "smiles", "makes plans", "go to a dinner"], "input": {"head": "PersonX makes a date", "relation": "xEffect"}}
{"generation": "PersonX prevents the ___ from taking. The effect on PersonX will be the same as the effect on PersonX", "references": ["forced from stage", "becomes protective", "gets awards", "booed"], "input": {"head": "PersonX prevents the ___ from taking", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not have heavy machinery.", "PersonX doesn't think they're good enough", "The performer before PersonX already did it!", "The agent cancelled PersonXs' contract before the show", "PersonX would be sent to jail if he did so.", "PersonX isn't very talented", "PersonX lives with their mom", "PersonX does not have a house"], "input": {"head": "PersonX brings down the house", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX isnt brave enough.", "PersonY is too far away.", "PersonX doesn't want to hurt PersonY.", "PersonX is dead.", "PersonY is standing up.", "PersonX is not near PersonY.", "PersonX doesn't want to be mean.", "PersonY runs away."], "input": {"head": "PersonX falls on PersonY's neck", "relation": "HinderedBy"}}
{"generation": "PersonX turns the tables. After, PersonX will want to know who the other person is", "references": ["to apologize", "to continue dominating", "to win something", "to give it a rest"], "input": {"head": "PersonX turns the tables", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has to stay with their grandma all summer.", "PersonX's boss would not give her time off for holiday", "PersonX has to work all summer.", "The contractor is not done with PersonX's renovations"], "input": {"head": "PersonX spends the summer", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["There is a storm outside.", "Person X doesn't know the way back", "PersonX was told they have to work over.", "The roads are really icy.", "PersonXs was shot by an enemy soldier", "Person X has no means with which to make it back", "The driver in front of PersonX is blocking his way", "PersonX is lost."], "input": {"head": "PersonX makes it back", "relation": "HinderedBy"}}
{"generation": "PersonX has to cancel PersonX's plans. Before, PersonX needs to cancel PersonX's plans", "references": ["none"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xNeed"}}
{"generation": "PersonX puts PersonX's name in the hat. After that, PersonX will be able to use the hat to", "references": ["PersonX picks a name"], "input": {"head": "PersonX puts PersonX's name in the hat", "relation": "isBefore"}}
{"generation": "PersonX thinks of a solution. Before, PersonX needs to know how to use the system", "references": ["to address a problem", "to get back", "a problem", "to consider the alternatives", "to make a plan", "none", "to find a remedy for the issue"], "input": {"head": "PersonX thinks of a solution", "relation": "xNeed"}}
{"generation": "PersonX finds PersonY's shoes. PersonX is then able to use the shoes to get the other", "references": ["thorough", "amiable", "helpful", "observant", "responsible", "determined"], "input": {"head": "PersonX finds PersonY's shoes", "relation": "xAttr"}}
{"generation": "PersonX calls ___ the next day. After, others will want to know what's going on", "references": ["converse with X", "answer or ignore call", "to pick up the phone", "answer the phone", "solidify plans", "to ignore the call", "say goodbye", "listen to voice mail", "hang up"], "input": {"head": "PersonX calls ___ the next day", "relation": "oWant"}}
{"generation": "PersonX pulls PersonX's car over. PersonX will be able to see the car and the car will be", "references": ["broke", "nervous", "guilty", "watchful"], "input": {"head": "PersonX pulls PersonX's car over", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know anyone single", "No one likes PersonX's tinder profile", "PersonX has no prospect dates.", "PersonX can't find anybody he wants to date.", "PersonX is afraid to talk to people.", "PersonX is extremely ugly."], "input": {"head": "PersonX finds a date", "relation": "HinderedBy"}}
{"generation": "PersonX seems perfect. PersonX will be able to use his abilities to help you, and", "references": ["eager to prove themself", "glad others think highly of them", "overwhelmed by expectations", "good about themselves"], "input": {"head": "PersonX seems perfect", "relation": "xReact"}}
{"generation": "PersonX orders something. Before that, he's been working on a new game", "references": ["PersonX shops for an outfit online", "PersonX goes to a diner"], "input": {"head": "PersonX orders something", "relation": "isAfter"}}
{"generation": "PersonX calls PersonY tonight. After that, we'll be back to the main menu", "references": ["PersonX is rejected by y", "PersonX picks up friends and goes to the party"], "input": {"head": "PersonX calls PersonY tonight", "relation": "isBefore"}}
{"generation": "a facebook friends list can be used for this", "references": ["show pictures to", "find a number", "tell others what I had for dinner", "find old college friends", "add to a birthday invite list", "snoop on others", "keep in contact with family", "find a date", "delete", "post news", "collect friends on"], "input": {"head": "facebook friends list", "relation": "ObjectUse"}}
{"generation": "PersonX replaces PersonY's tire. As a result, others feel that the tire is too big", "references": ["happy", "helped", "thankful"], "input": {"head": "PersonX replaces PersonY's tire", "relation": "oReact"}}
{"generation": "PersonX is selling lemonade. As a result, others feel that the lemonade is a bad idea", "references": ["none"], "input": {"head": "PersonX is selling lemonade", "relation": "oReact"}}
{"generation": "PersonX paints the town red. The effect on others will be different", "references": ["town inhabitants have feelings about the red color", "none", "town inhabitants live in red town"], "input": {"head": "PersonX paints the town red", "relation": "oEffect"}}
{"generation": "You are likely to find a best man in a suit, but you will not find a best man", "references": ["friend's wedding", "wedding"], "input": {"head": "best man", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's car's heater isn't working.", "PersonX has to go to a meeting.", "PersonX has no place to go.", "PersonXs' jacket was stolen.", "PersonX's mom is washing their coat.", "PersonX had their power die, and have no heat.", "PersonX is locked outside their house in the winter."], "input": {"head": "PersonX gets warm", "relation": "HinderedBy"}}
{"generation": "PersonX stills lives. Before that, he was a member of the X-Men,", "references": ["PersonX skydives"], "input": {"head": "PersonX stills lives", "relation": "isAfter"}}
{"generation": "PersonX puts everything together. Before, PersonX needs to be able to do things like make a phone call", "references": ["to gather materials", "go to the store.", "to make a plan", "buy the furniture."], "input": {"head": "PersonX puts everything together", "relation": "xNeed"}}
{"generation": "a good resume can be used for a job", "references": ["pressure your boss into giving you a raise", "brag about their skills", "obtain a job", "wipe up a spill with", "show off feats", "get a job with", "fan themselves with", "frame for posterity", "start a fire"], "input": {"head": "good resume", "relation": "ObjectUse"}}
{"generation": "PersonX washes PersonY's car. After, PersonX will want to get rid of the car", "references": ["polish", "to dry the car", "to get paid", "to have a nap", "to wax the car", "dry off"], "input": {"head": "PersonX washes PersonY's car", "relation": "xWant"}}
{"generation": "PersonX looks at PersonY's face. After, PersonX will want to know what's going on", "references": ["to look at their skin.", "to close the album", "to tell him his conclusions", "to examinate personY's face", "to look at their eyes.", "to put the album away"], "input": {"head": "PersonX looks at PersonY's face", "relation": "xWant"}}
{"generation": "PersonX gathers all the ingredients. Before that, he has to find the right person to take over", "references": ["PersonX is ready to bake a cake"], "input": {"head": "PersonX gathers all the ingredients", "relation": "isAfter"}}
{"generation": "PersonX leaves the scene. After, PersonX will want to talk to the other person", "references": ["to go home.", "to drink and forget the scene", "to go out and have fun.", "to follow up with witnesses", "to hide", "meet the police chief to discuss their findings"], "input": {"head": "PersonX leaves the scene", "relation": "xWant"}}
{"generation": "PersonX cuts a swath. After that, he's a bit of a jerk", "references": ["PersonX makes a trail"], "input": {"head": "PersonX cuts a swath", "relation": "isBefore"}}
{"generation": "PersonX dies on the vine. PersonX will be killed by the player", "references": ["nothing"], "input": {"head": "PersonX dies on the vine", "relation": "xReact"}}
{"generation": "PersonX wants to save money. Before that, he's been working on a new game, and", "references": ["PersonX heard the economy is slipping", "PersonX decides to buy something expensive"], "input": {"head": "PersonX wants to save money", "relation": "isAfter"}}
{"generation": "PersonX skateboards with PersonY's friends. After, others will want to see what they can do with their skateboards", "references": ["to get snack", "to spend time together", "to go home", "to play video games", "to play something els", "to practice tricks"], "input": {"head": "PersonX skateboards with PersonY's friends", "relation": "oWant"}}
{"generation": "PersonX is a good person. The effect on PersonX will be the same as the effect on PersonX", "references": ["is complimented", "gets given presents", "is beloved by many", "is rewarded"], "input": {"head": "PersonX is a good person", "relation": "xEffect"}}
{"generation": "PersonX arches PersonY's back. Before that, you can see the two of them", "references": ["PersonX practices her strokes"], "input": {"head": "PersonX arches PersonY's back", "relation": "isAfter"}}
{"generation": "PersonX costs the earth. After, others will want to take advantage of it", "references": ["none"], "input": {"head": "PersonX costs the earth", "relation": "oWant"}}
{"generation": "PersonX puts ___ in PersonX's backpack. As a result, others feel like they're being punished for their actions", "references": ["grateful.", "none"], "input": {"head": "PersonX puts ___ in PersonX's backpack", "relation": "oReact"}}
{"generation": "PersonX lays ___ on the fact. PersonX will be the one who gets the most out of this", "references": ["good", "glad other see his point of view", "more certain"], "input": {"head": "PersonX lays ___ on the fact", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has two sprained wrists.", "PersonX is being dragged out of there by Joe", "The book weighs a ton.", "PersonX is being restrained by the bouncer", "PersonX lost their arms in an accident.", "The book has a value of a million dollars.", "Person X's parents took the book", "The book is too heavy.", "The book has a sentimental value."], "input": {"head": "PersonX throws the book", "relation": "HinderedBy"}}
{"generation": "PersonX reaches around PersonY. PersonX will be able to see PersonY's face and will be", "references": ["accomplished", "aroused", "nan"], "input": {"head": "PersonX reaches around PersonY", "relation": "xReact"}}
{"generation": "PersonX has a new toy. PersonX did this to me", "references": ["to play", "none"], "input": {"head": "PersonX has a new toy", "relation": "xIntent"}}
{"generation": "PersonX quickly found ___ is filled by a lot of people", "references": ["the lost watch", "the needle.", "money", "broom", "her keys", "phone", "coins", "Money", "wallet", "Clothes", "socks", "worms in the garden", "marbles", "the keys", "the car", "balls", "flashlight", "the building", "Keys", "dog", "gold", "blocks"], "input": {"head": "PersonX quickly found ___", "relation": "isFilledBy"}}
{"generation": "PersonX lies to PersonY. As a result, others feel that PersonX is a liar", "references": ["played", "none", "insecure"], "input": {"head": "PersonX lies to PersonY", "relation": "oReact"}}
{"generation": "PersonX sees PersonY frequently. PersonX did this to me when I was a kid, and I'm", "references": ["to interact with persony", "to visit", "likes them", "to maintain a friendship", "company"], "input": {"head": "PersonX sees PersonY frequently", "relation": "xIntent"}}
{"generation": "PersonX affords college. Before that, he was a student at the University of California,", "references": ["PersonX works two jobs"], "input": {"head": "PersonX affords college", "relation": "isAfter"}}
{"generation": "PersonX falls right. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX falls right", "relation": "oEffect"}}
{"generation": "PersonX practices really hard. PersonX will be the one who will be the one who will be", "references": ["fast", "accomplished", "active", "strong"], "input": {"head": "PersonX practices really hard", "relation": "xReact"}}
{"generation": "an offive chair can be used for a variety of purposes", "references": ["race", "nap in on break", "sit at a desk", "sit in front of the computer", "have a spinning contest", "sit in at meetings", "sit comfortably", "spin in circle", "be productive when working", "Conduct meetings on"], "input": {"head": "offive chair", "relation": "ObjectUse"}}
{"generation": "PersonX thanks PersonY's profusely. The effect on PersonX will be similar to the effect on PersonY", "references": ["shown out", "none", "gets hugged"], "input": {"head": "PersonX thanks PersonY's profusely", "relation": "xEffect"}}
{"generation": "PersonX takes PersonY's watch off. PersonX did this to PersonY's watch", "references": ["to help persony.", "to help person y", "to dive in the swimming pool", "to take a shower", "y cannot do it on their own so they ask x"], "input": {"head": "PersonX takes PersonY's watch off", "relation": "xIntent"}}
{"generation": "PersonX is fired from PersonX's job. The effect on PersonX will be permanent", "references": ["PersonX loses their source of income", "loses income", "makes budget cuts in the short term", "works on their resume", "PersonX is embarrassed publicly", "has to find a new job", "looks for new employment opportunities"], "input": {"head": "PersonX is fired from PersonX's job", "relation": "xEffect"}}
{"generation": "PersonX grinds ___ for a week. After, PersonX will want to grind for a week", "references": ["To finish work", "to get rewarded", "To complete the work", "to finish their work"], "input": {"head": "PersonX grinds ___ for a week", "relation": "xWant"}}
{"generation": "PersonX feels so nervous. The effect on PersonX will be felt in the game, but it will not be", "references": ["FRUSTATION", "IRRITATION"], "input": {"head": "PersonX feels so nervous", "relation": "xEffect"}}
{"generation": "adult child can be a very difficult thing to deal with", "references": ["care for elderly parents"], "input": {"head": "adult child", "relation": "CapableOf"}}
{"generation": "PersonX picks PersonY up from work. Before that, he's been working on a project for the company", "references": ["PersonX gets a phone call"], "input": {"head": "PersonX picks PersonY up from work", "relation": "isAfter"}}
{"generation": "PersonX washes jewelry by hand. Before that, he used to wear a pair of gloves", "references": ["PersonX gets cake batter all over their jewelry"], "input": {"head": "PersonX washes jewelry by hand", "relation": "isAfter"}}
{"generation": "PersonX forgets ___ one day is filled by a lot of people", "references": ["laundry", "praying"], "input": {"head": "PersonX forgets ___ one day", "relation": "isFilledBy"}}
{"generation": "PersonX sets PersonX's cap at ___. PersonX did this to prevent the player from being able to use the \"", "references": ["limit their caloric intake", "to win someone's affection"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "xIntent"}}
{"generation": "PersonX tells ___ that PersonY had cancer. As a result, others feel that PersonX is a liar", "references": ["informed of a bad situation", "sorrow", "sad", "nervous", "distraught"], "input": {"head": "PersonX tells ___ that PersonY had cancer", "relation": "oReact"}}
{"generation": "PersonX has a test tomorrow. Before, PersonX needs to test the new version of the app", "references": ["start studing", "open the book", "enroll in school", "show up for class", "none"], "input": {"head": "PersonX has a test tomorrow", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["there are no jobs available", "they have no experience", "Person isn\u2019t able to work due to mental issues.", "PersonY requires different skills", "They plant manager isn't hiring", "No one is hiring.", "PersonX does not have the right skills.", "Person is incapable of having an interview."], "input": {"head": "PersonX lands a job", "relation": "HinderedBy"}}
{"generation": "PersonX makes ___ as well. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX makes ___ as well", "relation": "oReact"}}
{"generation": "PersonX dresses in PersonY's clothes. PersonX is a character in the game who is a member of", "references": ["clever", "invasive", "open minded", "free-spirited", "curious", "silly"], "input": {"head": "PersonX dresses in PersonY's clothes", "relation": "xAttr"}}
{"generation": "PersonX watches PersonY. PersonX will be the one who watches PersonY", "references": ["neutral", "informed", "shocked", "content"], "input": {"head": "PersonX watches PersonY", "relation": "xReact"}}
{"generation": "PersonX falls off the back of a lorry. Before, PersonX needs to be able to walk on the ground", "references": ["to be trying to climb down", "to get on the lorry", "to climb onto the lorry", "to try jumping down like spiderman", "to sit in an unstable position in the back", "to stand at the back of the lorry"], "input": {"head": "PersonX falls off the back of a lorry", "relation": "xNeed"}}
{"generation": "PersonX gives ___ an f. Before, PersonX needs to be able to use the \"F\" word", "references": ["to receive their test", "to grade their test", "to be a teacher", "to be marking tests", "none"], "input": {"head": "PersonX gives ___ an f", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Personx is too ugly to impress.", "PersonY's girlfriend is madly in love with PersonY.", "PersonY's girlfriend is too much in love with PersonY.", "PersonX is extremely unlikeable.", "Persony's girlfriend hates personx", "PersonY's girlfriend is not attracted to PersonX."], "input": {"head": "PersonX gets PersonY's girlfriend", "relation": "HinderedBy"}}
{"generation": "a displayed furniture can be used for a variety of purposes, including:\n\n\u2022", "references": ["test out in a store", "look nice in your home", "choose from", "stay looking professional", "sell at a discount", "buy to get a discount over the unused furniture", "take a nap on in the store while their spouse shops", "entice people into a store", "show a sample", "make the furniture look nice"], "input": {"head": "displayed furniture", "relation": "ObjectUse"}}
{"generation": "PersonX takes PersonY step. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX takes PersonY step", "relation": "oReact"}}
{"generation": "PersonX eats a hamburger. After, others will want to eat it", "references": ["none"], "input": {"head": "PersonX eats a hamburger", "relation": "oWant"}}
{"generation": "PersonX works last night. PersonX will be on the show tonight", "references": ["accomplished", "tired.", "happy", "good.", "proud"], "input": {"head": "PersonX works last night", "relation": "xReact"}}
{"generation": "PersonX gets messy. Before, PersonX needs to be able to talk to people", "references": ["to scrawl", "none", "to drop food on himself"], "input": {"head": "PersonX gets messy", "relation": "xNeed"}}
{"generation": "PersonX sees all of the animals. PersonX will be able to see the animals in the same way that", "references": ["content", "happy", "excited"], "input": {"head": "PersonX sees all of the animals", "relation": "xReact"}}
{"generation": "PersonX gives PersonX's presentation. As a result, others feel that PersonX is not as good as he thinks", "references": ["interested.", "none"], "input": {"head": "PersonX gives PersonX's presentation", "relation": "oReact"}}
{"generation": "PersonX scars ___ away. Before, PersonX needs to be able to use the power of the Force to", "references": ["act as frightening", "get close to PersonY", "to be watch PersonY", "a animal"], "input": {"head": "PersonX scars ___ away", "relation": "xNeed"}}
{"generation": "PersonX puts ___ in the oven. PersonX will be in the oven for a few minutes", "references": ["full and happy after eating", "full", "in a state of expectation", "delighted"], "input": {"head": "PersonX puts ___ in the oven", "relation": "xReact"}}
{"generation": "PersonX looks like a woman. Before that, she was a woman", "references": ["PersonX wears a red dress"], "input": {"head": "PersonX looks like a woman", "relation": "isAfter"}}
{"generation": "PersonX makes it right. Before that, he was a very good player, but he was", "references": ["PersonX steals from someone else"], "input": {"head": "PersonX makes it right", "relation": "isAfter"}}
{"generation": "PersonX receives the king's ___ is filled by the king's ___", "references": ["wagon", "silver plates", "horses", "scepter", "hot chocolate", "crown"], "input": {"head": "PersonX receives the king 's ___", "relation": "isFilledBy"}}
{"generation": "PersonX meets PersonX's neighbors. Before that, they're just friends", "references": ["PersonX moved to a new neighborhood"], "input": {"head": "PersonX meets PersonX's neighbors", "relation": "isAfter"}}
{"generation": "PersonX sees PersonY frequently. After that, he's a bit more of a jerk", "references": ["PersonX swims with PersonY"], "input": {"head": "PersonX sees PersonY frequently", "relation": "isBefore"}}
{"generation": "PersonX works PersonY's way up. PersonX will be able to use PersonY's abilities to help you", "references": ["productive", "happy", "successful"], "input": {"head": "PersonX works PersonY's way up", "relation": "xReact"}}
{"generation": "PersonX always wears. After that, he's a bit of a jerk", "references": ["PersonX is teased for style"], "input": {"head": "PersonX always wears", "relation": "isBefore"}}
{"generation": "PersonX paces back and forth. Before that, he's just a normal guy", "references": ["PersonX can't remember his name"], "input": {"head": "PersonX paces back and forth", "relation": "isAfter"}}
{"generation": "PersonX takes a test at school. After that, he's in the middle of a fight with a", "references": ["PersonX attends the graduation ceremony"], "input": {"head": "PersonX takes a test at school", "relation": "isBefore"}}
{"generation": "PersonX grabs PersonY's gun. After that, PersonX grabs PersonY's gun", "references": ["PersonX shoots PersonY", "PersonX knows if it is an intruder they are the better shot"], "input": {"head": "PersonX grabs PersonY's gun", "relation": "isBefore"}}
{"generation": "PersonX cuts swathes. After that, he's a bit of a jerk", "references": ["PersonX onx sows the swathes together"], "input": {"head": "PersonX cuts swathes", "relation": "isBefore"}}
{"generation": "PersonX discusses the matter with PersonY. After that, PersonY asks PersonX to explain the situation", "references": ["PersonX plans their date"], "input": {"head": "PersonX discusses the matter with PersonY", "relation": "isBefore"}}
{"generation": "PersonX loves another ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["is untruthful", "compares first person to another", "thinks about the first person", "talks to them", "asks them out", "caught in lie"], "input": {"head": "PersonX loves another ___", "relation": "xEffect"}}
{"generation": "PersonX remains friends. As a result, others feel the same way", "references": ["they have someone their for them", "forgiven"], "input": {"head": "PersonX remains friends", "relation": "oReact"}}
{"generation": "PersonX reduces PersonX's dependence. The effect on PersonX will be applied to the other PersonX", "references": ["gets more sleep", "none", "exercises more"], "input": {"head": "PersonX reduces PersonX's dependence", "relation": "xEffect"}}
{"generation": "PersonX gets a call from PersonX's boss. PersonX will be able to talk to PersonX and ask him to", "references": ["sad", "worried", "happy", "chastised", "relleved", "nervous."], "input": {"head": "PersonX gets a call from PersonX's boss", "relation": "xReact"}}
{"generation": "PersonX tips PersonY's head back. PersonX will be able to see the person's face and will tell", "references": ["tired.", "accomplished", "indifferent", "satisfied"], "input": {"head": "PersonX tips PersonY's head back", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not want to have to wash their clothes afterwards.", "The toilet is broken.", "PersonX cannot fit down a toilet hole.", "PersonX is a toddler and his parents will not allow him to go down the toilet.", "PersonX's friend is watching and will not let him.", "The toilet is too small.", "PersonX psychiatrist told him he is not thin enough.", "PersonX is too large to fit down the toilet."], "input": {"head": "PersonX goes down the toilet", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["personX has no finances", "personX is in debt and has bad credit", "PersonX doesn't have enough money.", "PersonX doesn't have a job.", "PersonY was already gifted the one.", "PersonX has no savings."], "input": {"head": "PersonX buys PersonY's one", "relation": "HinderedBy"}}
{"generation": "PersonX calls PersonY ambulance. PersonX will be transported to the hospital", "references": ["worried", "great", "scared"], "input": {"head": "PersonX calls PersonY ambulance", "relation": "xReact"}}
{"generation": "PersonX watches scary movies. As a result, others feel that he is a bad person", "references": ["none"], "input": {"head": "PersonX watches scary movies", "relation": "oReact"}}
{"generation": "PersonX feels ___ inside PersonY. PersonX is a very strong person, and he's not a", "references": ["compassionate", "empathetic"], "input": {"head": "PersonX feels ___ inside PersonY", "relation": "xAttr"}}
{"generation": "PersonX misses ___ at work. As a result, others feel that they are being treated unfairly", "references": ["none", "concerned", "burdened", "overwhelmed"], "input": {"head": "PersonX misses ___ at work", "relation": "oReact"}}
{"generation": "PersonX puts the phone away. After, PersonX will want to know what the phone is doing", "references": ["to do something productive", "to let it charge", "use any information that was gained", "understand any information that was gained"], "input": {"head": "PersonX puts the phone away", "relation": "xWant"}}
{"generation": "PersonX buys dog food. The effect on PersonX will be similar to that of a normal person", "references": ["feeds dog.", "cleans up mess.", "X receives bag", "X gets receipt"], "input": {"head": "PersonX buys dog food", "relation": "xEffect"}}
{"generation": "PersonX goes wild. Before that, he's been a bit of a dick", "references": ["PersonX drinks a lot of alcohol"], "input": {"head": "PersonX goes wild", "relation": "isAfter"}}
{"generation": "PersonX leaves it at that. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX leaves it at that", "relation": "oReact"}}
{"generation": "You are likely to find a car key in a car dealer's garage", "references": ["car"], "input": {"head": "car key", "relation": "AtLocation"}}
{"generation": "You are likely to find a lunar module in a lunar module", "references": ["suface of moon"], "input": {"head": "lunar module", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["It is against the house rules", "PersonX's friends are loud and keep her up.", "PersonX is too long for the couch and doesn\u2019t fit", "the children are playing", "PersonX's mother will not let him sleep.", "The couch is too hard", "The cushions have just been steam cleaned", "The couch is uncomfortable", "PersonX can't relax", "The dog is taking up all the room"], "input": {"head": "PersonX falls asleep on the couch", "relation": "HinderedBy"}}
{"generation": "PersonX catches PersonY's attention. Before, PersonX needs to be able to talk to PersonY, but now", "references": ["talk loud", "to be seen.", "to wave at PersonY", "to walk up to PersonY", "wave hand in their face", "to do something important."], "input": {"head": "PersonX catches PersonY's attention", "relation": "xNeed"}}
{"generation": "PersonX makes the shot. Before, PersonX needs to be able to shoot a shot from a distance", "references": ["to listen to their coach", "to practice", "He has the ball.", "to have a gun", "to be good at aiming", "Practices for the game."], "input": {"head": "PersonX makes the shot", "relation": "xNeed"}}
{"generation": "PersonX has had it up to here. Before that, he was a very good player, but now he", "references": ["PersonX had a lot of bad things happen"], "input": {"head": "PersonX has had it up to here", "relation": "isAfter"}}
{"generation": "You are likely to find a basement in an apartment building, or a garage in a garage,", "references": ["office building", "building", "closet", "own house", "church", "cellar", "canada", "home"], "input": {"head": "basement", "relation": "AtLocation"}}
{"generation": "PersonX walks to PersonX's room. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX walks to PersonX's room", "relation": "oReact"}}
{"generation": "PersonX is a waste of money. As a result, others feel that they are being treated unfairly", "references": ["angered"], "input": {"head": "PersonX is a waste of money", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is sick and unable to work.", "PersonX's kids take all their time.", "PersonX cannot get hired by anyone.", "PersonX has no transportation.", "PersonX works twelve hour shifts.", "PersonX broke their leg."], "input": {"head": "PersonX does odd jobs", "relation": "HinderedBy"}}
{"generation": "PersonX visits PersonY's mother's ___. After, PersonX will want to know if PersonY is a member of the group", "references": ["to sit around and chat", "to have dinner", "to see how they are doing", "to say hello"], "input": {"head": "PersonX visits PersonY's mother 's ___", "relation": "xWant"}}
{"generation": "prep cook can be done with a small amount of water", "references": ["cut zucchini"], "input": {"head": "prep cook", "relation": "CapableOf"}}
{"generation": "PersonX gets beer. The effect on PersonX will be similar to that of a normal beer", "references": ["Has a hangover tomorrow", "Gets intoxicated"], "input": {"head": "PersonX gets beer", "relation": "xEffect"}}
{"generation": "PersonX looks the other way. PersonX will be the one who gets the most attention", "references": ["conflicted."], "input": {"head": "PersonX looks the other way", "relation": "xReact"}}
{"generation": "PersonX wouldn't work. PersonX will be the one who gets the job done", "references": ["lazy", "unconstructive"], "input": {"head": "PersonX would n't work", "relation": "xReact"}}
{"generation": "PersonX cuts the umbilical cord. PersonX will be able to see the person in person", "references": ["joy", "helpful", "anticipation"], "input": {"head": "PersonX cuts the umbilical cord", "relation": "xReact"}}
{"generation": "PersonX pushes past PersonY. After that, PersonX is able to move forward and get to", "references": ["PersonX goes to the front of the line"], "input": {"head": "PersonX pushes past PersonY", "relation": "isBefore"}}
{"generation": "PersonX starts with a clean sheet. PersonX will be able to use the same abilities as the player,", "references": ["happy", "relieved", "proud"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xReact"}}
{"generation": "reproduce. Before, PersonX needs to be able to produce a lot of content for its", "references": ["buy hooker", "find mate", "have viable partner chosen", "use scanner", "look hot", "do", "copy", "find right spouse", "take off condom", "find appropriate mate", "talk to another person", "find willing partner", "turn on copy machine", "already know what to do", "copulate", "make copy", "find girlfriend or boyfriend", "consumate relationship", "make love", "fertilize egg", "make one or more copies"], "input": {"head": "reproduce", "relation": "xNeed"}}
{"generation": "PersonX helps PersonY's brother. The effect on others will be similar to that of PersonY's brother", "references": ["their stuff get's taken care of faster", "they get back to regular life", "they get their stuff packed sooner", "they twist their back"], "input": {"head": "PersonX helps PersonY's brother", "relation": "oEffect"}}
{"generation": "PersonX likes a girl. Before, PersonX needs to be a girl", "references": ["to think she is being nice to him", "meet the girl", "none"], "input": {"head": "PersonX likes a girl", "relation": "xNeed"}}
{"generation": "PersonX rents a movie. After that, he's a regular at the bar", "references": ["PersonX watches the movie rented", "PersonX invited friends over to hang out", "PersonX watches the movie and eats popcorn"], "input": {"head": "PersonX rents a movie", "relation": "isBefore"}}
{"generation": "PersonX forgives ___ PersonY's trespasses. Before, PersonX needs to be able to talk to PersonY", "references": ["learn compassion", "none", "follow the bible"], "input": {"head": "PersonX forgives ___ PersonY's trespasses", "relation": "xNeed"}}
{"generation": "PersonX fights PersonY's battle. After that, the two of them fight each other", "references": ["PersonX helps y through"], "input": {"head": "PersonX fights PersonY's battle", "relation": "isBefore"}}
{"generation": "a gourmet shop can be used for a wide variety of purposes", "references": ["fine foods", "icky foods", "specialty cookware items", "special kitchen utensils to purchase", "specialty food items", "purchasing exotic foods", "buy weird food", "buying imported foods", "patrons with plenty of money", "customers who knowlegeable about cooking", "hard to find foods"], "input": {"head": "gourmet shop", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is grounded from going out by their parents", "PersonY has left the country", "PersonY is in the hospital in intensive care.", "PersonY is an expert diplomat who always smooths over the conflict.", "PersonY's phone and Internet have been disconnected and PersonX can't reach them.", "PersonX is not able to locate PersonY."], "input": {"head": "PersonX brings PersonY into conflict", "relation": "HinderedBy"}}
{"generation": "PersonX has to take PersonY to the hospital. As a result, others feel that they are being treated unfairly", "references": ["scared"], "input": {"head": "PersonX has to take PersonY to the hospital", "relation": "oReact"}}
{"generation": "PersonX opens the windows. Before that, he says, \"I'm sorry, but I", "references": ["PersonX fans PersonX's face"], "input": {"head": "PersonX opens the windows", "relation": "isAfter"}}
{"generation": "a toll road can be used for the same purpose", "references": ["driving on", "collecting money from drivers", "driving", "pay as go", "paying for construction", "traveling on", "getting taxes", "travel quickly", "travel on"], "input": {"head": "toll road", "relation": "ObjectUse"}}
{"generation": "PersonX sits down across from PersonY. The effect on others will be different", "references": ["looks at personx", "acknowldges personx", "none"], "input": {"head": "PersonX sits down across from PersonY", "relation": "oEffect"}}
{"generation": "PersonX works very well. After that, I'm not sure if I'll be able to", "references": ["PersonX ends up being manager"], "input": {"head": "PersonX works very well", "relation": "isBefore"}}
{"generation": "PersonX does an amazing job. PersonX will be a great addition to the team", "references": ["fulfilled", "great", "happy", "ecstatic", "good about themselves", "proud"], "input": {"head": "PersonX does an amazing job", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is at work for a few more hours.", "PersonX had their cable turned off.", "They don't own a TV.", "The TV is broken.", "The cable company discontinued his service", "Their eyes hurt.", "PersonX has to work late.", "The neighbor is blasting his radio"], "input": {"head": "PersonX is watching tv", "relation": "HinderedBy"}}
{"generation": "PersonX meets the band. After, PersonX will want to know if they're going to be able to play", "references": ["to start playing music", "to congratulate the band", "to thank the band for the performance", "to shake hands with the band members", "to say hello", "to sign a contract"], "input": {"head": "PersonX meets the band", "relation": "xWant"}}
{"generation": "PersonX tips PersonY's head. After, PersonX will want to talk to PersonY", "references": ["let go", "shave chin", "to brush their hair.", "to start a fight", "to push him over", "examine side of head", "to kiss them.", "to horseplay"], "input": {"head": "PersonX tips PersonY's head", "relation": "xWant"}}
{"generation": "PersonX gives PersonY a warning. The effect on others will be different", "references": ["PersonY is warned", "PersonY thinks about what they did wrong", "PersonY apologizes", "PersonY takes more care around PersonX", "PersonY tries to follow the warning", "PersonY changes their behavior."], "input": {"head": "PersonX gives PersonY a warning", "relation": "oEffect"}}
{"generation": "PersonX confronts PersonX's roommate. As a result, others feel that PersonX is a threat to them", "references": ["sorry", "concerned", "informed of personx's feelings", "worried", "misunderstood", "challenged", "anxious"], "input": {"head": "PersonX confronts PersonX's roommate", "relation": "oReact"}}
{"generation": "PersonX does an amazing job. The effect on PersonX will be very noticeable", "references": ["gets a raise", "earns more money", "gets a promotion", "Get good compliment form boss.", "gets praise", "Gets increment"], "input": {"head": "PersonX does an amazing job", "relation": "xEffect"}}
{"generation": "PersonX wastes PersonX's day. Before that, he was a very good player", "references": ["PersonX wakes up"], "input": {"head": "PersonX wastes PersonX's day", "relation": "isAfter"}}
{"generation": "PersonX makes PersonY stop. After that, PersonY will be able to use the same abilities", "references": ["PersonX continues working"], "input": {"head": "PersonX makes PersonY stop", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's glasses are tied with a string to his face.", "PersonY has ran away.", "PersonX lost their glasses.", "PersonX can't see without glasses.", "PersonX is blind.", "PersonY has hidden the glasses.", "PersonX can't pay for their glasses.", "PersonY has a neck chain for the eyeglasses."], "input": {"head": "PersonX takes PersonX's glasses", "relation": "HinderedBy"}}
{"generation": "PersonX keeps ___ with the growth. The effect on PersonX will be the same as the growth", "references": ["stays ahead of the game", "increased confidence", "achieves goal", "maintains his current position", "none"], "input": {"head": "PersonX keeps ___ with the growth", "relation": "xEffect"}}
{"generation": "PersonX pays PersonY taxes. After that, PersonX pays PersonY taxes", "references": ["PersonX asks for repayment", "PersonX accepts payment from PersonY"], "input": {"head": "PersonX pays PersonY taxes", "relation": "isBefore"}}
{"generation": "PersonX grinds PersonY for a week. After, others will want to grind PersonX for a week", "references": ["to brush PersonX off", "to talk to PersonX", "to get a reward", "to take a break"], "input": {"head": "PersonX grinds PersonY for a week", "relation": "oWant"}}
{"generation": "PersonX loses 100 pounds. After, PersonX will want to eat more", "references": ["buy new clothes", "celebrate"], "input": {"head": "PersonX loses 100 pounds", "relation": "xWant"}}
{"generation": "PersonX calls PersonY in. PersonX did this to me, and I'm not sure if it's", "references": ["to ask a question", "to share information", "to promote or fire the person", "to talk to them"], "input": {"head": "PersonX calls PersonY in", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They just bathed", "PersonXs  wife pours liquid soap on him", "PersonX just took a shower.", "They are indoors", "PersonXs friend sprays perfume on him", "PersonX put on cologne."], "input": {"head": "PersonX smells terrible", "relation": "HinderedBy"}}
{"generation": "PersonX uses the ___ as a means. PersonX did this to make sure that the game was not being played by", "references": ["to make the payment easier", "to show the best way to solve the problem"], "input": {"head": "PersonX uses the ___ as a means", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is in a different state.", "PersonX works in a different building.", "PersonY is holding their coffee so it cannot spill.", "PersonX cannot reach personY's coffee.", "PersonX doesn't want to be slapped by PersonY.", "PersonX can't afford to replace PersonY's coffee."], "input": {"head": "PersonX spills PersonY's coffee", "relation": "HinderedBy"}}
{"generation": "PersonX goes for a walk on the beach. Before that, he's in a car with a woman", "references": ["PersonX is at PersonX's beach house"], "input": {"head": "PersonX goes for a walk on the beach", "relation": "isAfter"}}
{"generation": "PersonX quickly went. PersonX did this to her, and she was so happy", "references": ["to go somewhere.", "to the store."], "input": {"head": "PersonX quickly went", "relation": "xIntent"}}
{"generation": "PersonX has a dinner party. After, PersonX will want to talk to you", "references": ["to celebrate", "to meet new people", "She opens the door.", "She invites them in.", "to socialize", "to have fun"], "input": {"head": "PersonX has a dinner party", "relation": "xWant"}}
{"generation": "PersonX cuts a hole. After that, he's back in the game", "references": ["PersonX pins two pieces of fabric together", "PersonX covers the hole", "PersonX onx places the bag inside"], "input": {"head": "PersonX cuts a hole", "relation": "isBefore"}}
{"generation": "PersonX grants women the ___. Before, PersonX needs to be able to use the ___", "references": ["to care about women", "to pass legislation"], "input": {"head": "PersonX grants women the ___", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have their contacts in", "PersonX is unsure how to do so", "PersonY is stronger", "PersonY doesn't trust PersonX.", "PersonX doesn't know where to go.", "Its too dark for them to see"], "input": {"head": "PersonX directs PersonY's steps", "relation": "HinderedBy"}}
{"generation": "PersonX reaches behind PersonY. After, PersonX will want to see PersonY's face", "references": ["take something", "ask person y why they were hiding it", "use the object they found", "move away from PersonY"], "input": {"head": "PersonX reaches behind PersonY", "relation": "xWant"}}
{"generation": "PersonX decorates the christmas tree. Before that, it was a simple, simple, simple Christmas tree", "references": ["PersonX buys a tall pine tree"], "input": {"head": "PersonX decorates the christmas tree", "relation": "isAfter"}}
{"generation": "PersonX includes another ___. The effect on others will be the same as the effect on themselves", "references": ["none", "shows interest in PersonX", "disagrees with PersonX"], "input": {"head": "PersonX includes another ___", "relation": "oEffect"}}
{"generation": "PersonX gets the stain. PersonX will be able to see the stain on the floor", "references": ["slightly upset"], "input": {"head": "PersonX gets the stain", "relation": "xReact"}}
{"generation": "PersonX steps right. PersonX will be able to see the current state of the game and", "references": ["relief their feet are dry", "unchanged"], "input": {"head": "PersonX steps right", "relation": "xReact"}}
{"generation": "PersonX represents PersonY increase. The effect on PersonX will be the same as the effect on PersonY", "references": ["represents Y", "PersonX succeeds over PersonY", "increases", "none", "PersonX congratulates PersonY"], "input": {"head": "PersonX represents PersonY increase", "relation": "xEffect"}}
{"generation": "PersonX takes the bag. PersonX will be able to pick up the bag and take it to", "references": ["happy.", "relieved", "less stressed in carrying something"], "input": {"head": "PersonX takes the bag", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY told PersonX their parents would do the opposite if begged.", "PersonY told PersonX not to beg their parents.", "X left his phone at home.", "PersonX is too embarrassed to beg PersonY's parents.", "PersonX can't get in touch with the parents.", "PersonY's parents are out of town.", "Y's parent's won't let X talk to them.", "PersonX is too proud."], "input": {"head": "PersonX begs PersonY's parents", "relation": "HinderedBy"}}
{"generation": "PersonX gets candy. Before that, he gets a candy bar", "references": ["PersonX goes trick-or-treating", "PersonX walks into the shop"], "input": {"head": "PersonX gets candy", "relation": "isAfter"}}
{"generation": "PersonX moves home. After that, he's back in the same room with his friends", "references": ["PersonX begins a new job"], "input": {"head": "PersonX moves home", "relation": "isBefore"}}
{"generation": "a juice contains a high concentration of the active ingredient, which is", "references": ["sugar"], "input": {"head": "juice", "relation": "MadeUpOf"}}
{"generation": "a windows app can be used for this purpose", "references": ["be able to store notes"], "input": {"head": "windows app", "relation": "ObjectUse"}}
{"generation": "PersonX gets a part time job. The effect on PersonX will be similar to that of a job that is offered to", "references": ["Gets promoted to full time", "Saves money"], "input": {"head": "PersonX gets a part time job", "relation": "xEffect"}}
{"generation": "PersonX boards a plane. After that, he's back in the same room", "references": ["PersonX lands safely in anchorage"], "input": {"head": "PersonX boards a plane", "relation": "isBefore"}}
{"generation": "PersonX wants to learn how to drive. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX wants to learn how to drive", "relation": "oEffect"}}
{"generation": "PersonX busts a nut. After that, he's a little more of a jerk", "references": ["PersonX falls down laughing"], "input": {"head": "PersonX busts a nut", "relation": "isBefore"}}
{"generation": "PersonX brings ___ to PersonY eyes. The effect on PersonX will be similar to the effect on PersonY", "references": ["Apolgizes", "Laughs", "PersonX gives a moving speech", "PersonX says something unkind", "none"], "input": {"head": "PersonX brings ___ to PersonY eyes", "relation": "xEffect"}}
{"generation": "PersonX has to get a job. After that, he's going to have to find a way to", "references": ["PersonX applies to a burger stand"], "input": {"head": "PersonX has to get a job", "relation": "isBefore"}}
{"generation": "PersonX dresses in PersonX's clothes. PersonX is wearing a pair of pants and a shirt", "references": ["Presentable", "Tidy", "trendy", "proud", "stylish", "satisfied"], "input": {"head": "PersonX dresses in PersonX's clothes", "relation": "xAttr"}}
{"generation": "PersonX pushes PersonX's luck. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX pushes PersonX's luck", "relation": "oEffect"}}
{"generation": "PersonX takes ___ out to dinner is filled by a bunch of people who are all drunk and have", "references": ["her dad", "their significant other", "their girlfriend", "his mom", "family", "a girl", "their boyfriend"], "input": {"head": "PersonX takes ___ out to dinner", "relation": "isFilledBy"}}
{"generation": "PersonX rides bikes. After, PersonX will want to know if you're a good person", "references": ["to take a trip into the country", "to have a drink", "to get a car", "to enjoy his leisure", "to relax himself", "to get in shape"], "input": {"head": "PersonX rides bikes", "relation": "xWant"}}
{"generation": "PersonX starts to worry. PersonX is a little confused", "references": ["harried", "fearful", "worried", "scared", "anxious"], "input": {"head": "PersonX starts to worry", "relation": "xAttr"}}
{"generation": "PersonX lands ___ safely. After, others will want to know what happened to him", "references": ["to sign in relief", "to celebrate their accomplishment", "none"], "input": {"head": "PersonX lands ___ safely", "relation": "oWant"}}
{"generation": "PersonX chooses one. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX chooses one", "relation": "oReact"}}
{"generation": "PersonX is at PersonX's grandmother's house. PersonX will be in the house for a few minutes", "references": ["warm inside", "happy", "excited", "loved", "full"], "input": {"head": "PersonX is at PersonX's grandmother 's house", "relation": "xReact"}}
{"generation": "PersonX directs PersonY's attention. After, others will want to know what's going on", "references": ["ask questions", "To find out more", "see something", "To ignore X", "none"], "input": {"head": "PersonX directs PersonY's attention", "relation": "oWant"}}
{"generation": "PersonX prevents ___ from voting. PersonX will be removed from the game", "references": ["empowered", "okay"], "input": {"head": "PersonX prevents ___ from voting", "relation": "xReact"}}
{"generation": "PersonX visits PersonY friend. After, others will want to know who is the person who is the person who", "references": ["to say how much fun they had with PersonX", "To Have conversation with X", "To be friends too", "interact with personx", "make more plans with personx", "to spend more time with PersonX"], "input": {"head": "PersonX visits PersonY friend", "relation": "oWant"}}
{"generation": "PersonX takes PersonY step. After, PersonX will want to know if PersonY is a member of PersonX", "references": ["to continue helping PersonY", "to follow suit", "apologize", "encourage", "to take a rest", "to be successful"], "input": {"head": "PersonX takes PersonY step", "relation": "xWant"}}
{"generation": "PersonX likes fish. Before, PersonX needs to be able to see fish", "references": ["to Get fishing gear.", "to Buy bait."], "input": {"head": "PersonX likes fish", "relation": "xNeed"}}
{"generation": "PersonX takes a hike in the woods. After that, he's back in the woods", "references": ["PersonX is attacked by animals", "PersonX enjoys the walk and returns to the car"], "input": {"head": "PersonX takes a hike in the woods", "relation": "isBefore"}}
{"generation": "PersonX slips PersonY's tongue. PersonX did this to PersonY", "references": ["none"], "input": {"head": "PersonX slips PersonY's tongue", "relation": "xIntent"}}
{"generation": "PersonX sets PersonX's cap at ___. After, PersonX will want to set PersonX's cap at ___", "references": ["to wipe their forehead", "to marry her", "to settle down in life", "to set the hat at an angle", "to sit down", "to rub their head", "to rest", "to check the look in a morror", "to raise the cap"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "xWant"}}
{"generation": "PersonX has lost PersonX's phone. The effect on others will be similar to that of a phone call", "references": ["none"], "input": {"head": "PersonX has lost PersonX's phone", "relation": "oEffect"}}
{"generation": "PersonX turns PersonX's music down. Before, PersonX needs to play a song that PersonX has played before", "references": ["to have the music too loud.", "to feel the music is too loud", "to be listening to music.", "to hear something odd", "none"], "input": {"head": "PersonX turns PersonX's music down", "relation": "xNeed"}}
{"generation": "PersonX shovels PersonX's driveway. After that, you can go to the next room and pick up", "references": ["PersonX goes inside for cocoa"], "input": {"head": "PersonX shovels PersonX's driveway", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has personal obligations.", "PersonX has to travel.", "Person X is disabled.", "PersonX's employer is closed.", "PersonX cannot find a job.", "PersonX has a lazy mindset.", "Person X can't find a job.", "PersonX's internet is down.", "PersonX has a disability and cannot work.", "PersonX is exhausted and can't stay awake."], "input": {"head": "PersonX works tirelessly", "relation": "HinderedBy"}}
{"generation": "PersonX camps with PersonY's family. PersonX will be the one who will be the one who gets the", "references": ["resourceful", "fun being out in nature", "happy", "content", "anxious", "apprehensive"], "input": {"head": "PersonX camps with PersonY's family", "relation": "xReact"}}
{"generation": "PersonX murders PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["not see them anymore", "to kill Person Y", "to hurt Person Y badly", "to end Person Y life"], "input": {"head": "PersonX murders PersonY", "relation": "xIntent"}}
{"generation": "PersonX looks like an idiot. Before, PersonX needs to be a good person", "references": ["to have their hair cut like a badly mowed lawn", "to have their makeup done like a clown", "put on funny clothes", "say something ignorant", "to have dressed weirdly", "none"], "input": {"head": "PersonX looks like an idiot", "relation": "xNeed"}}
{"generation": "PersonX has PersonX's fingers in many pies. As a result, others feel that they are being manipulated by the person who is", "references": ["cheated.", "none"], "input": {"head": "PersonX has PersonX's fingers in many pies", "relation": "oReact"}}
{"generation": "PersonX sees wood. Before, PersonX needs to find a way to get the wood", "references": ["none"], "input": {"head": "PersonX sees wood", "relation": "xNeed"}}
{"generation": "PersonX gets PersonX's feet wet. After that, PersonX gets a little bit of a kick out", "references": ["PersonX decides the water is too cold and returns home"], "input": {"head": "PersonX gets PersonX's feet wet", "relation": "isBefore"}}
{"generation": "PersonX has seen PersonX's day. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX has seen PersonX's day", "relation": "oWant"}}
{"generation": "PersonX replaces the tire. After, others will want to use the tire", "references": ["none"], "input": {"head": "PersonX replaces the tire", "relation": "oWant"}}
{"generation": "You are likely to find an orange cone in a tree, or a red cone in a tree", "references": ["roadblock"], "input": {"head": "orange cone", "relation": "AtLocation"}}
{"generation": "PersonX attention whores. The effect on PersonX will be felt by the person who is most likely to be", "references": ["Gets shamed", "is ignored", "does not get attention", "none", "receives bad attention"], "input": {"head": "PersonX attention whores", "relation": "xEffect"}}
{"generation": "PersonX has two kids. After that, he's a regular at the school", "references": ["PersonX quits their job to stay at home with the children", "PersonX gets no responses"], "input": {"head": "PersonX has two kids", "relation": "isBefore"}}
{"generation": "PersonX diagnoses with the flu. The effect on PersonX will be similar to that of the flu", "references": ["buys medicine", "feels sick", "Coughs", "rests at home", "Throws up", "gets better", "takes medicine"], "input": {"head": "PersonX diagnoses with the flu", "relation": "xEffect"}}
{"generation": "PersonX improves PersonX's position. After, PersonX will want to know if PersonX is a member of the group", "references": ["to celebrate", "to help their subordinates", "to get a promotion", "to become a boss", "to improve her career further", "to have nicer things"], "input": {"head": "PersonX improves PersonX's position", "relation": "xWant"}}
{"generation": "PersonX escorts PersonY back. As a result, others feel that PersonY is a better person than PersonX", "references": ["safe"], "input": {"head": "PersonX escorts PersonY back", "relation": "oReact"}}
{"generation": "PersonX looks angry. PersonX will be the one who gets the most attention", "references": ["sad", "angry", "stressed out", "irritated", "frusterated", "upset"], "input": {"head": "PersonX looks angry", "relation": "xReact"}}
{"generation": "PersonX asks PersonY to sit down. PersonX is not impressed", "references": ["mean", "demanding", "welcoming", "polite", "persistent", "dominant"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "xAttr"}}
{"generation": "PersonX calls the ambulance. PersonX did this to the man who was injured", "references": ["to help someone", "to save someone", "help for a person", "to get help", "medical treatment"], "input": {"head": "PersonX calls the ambulance", "relation": "xIntent"}}
{"generation": "PersonX wears PersonX's clothes. Before, PersonX needs to be able to use the same items in the same", "references": ["to pick out clothes.", "iron wrinkles", "to put them on.", "pick appropriate outfits", "decide how to dress", "To get their clothes ready"], "input": {"head": "PersonX wears PersonX's clothes", "relation": "xNeed"}}
{"generation": "PersonX sees ___ online. As a result, others feel that they are being targeted by the same people", "references": ["none"], "input": {"head": "PersonX sees ___ online", "relation": "oReact"}}
{"generation": "PersonX learns how to bake a cake. As a result, others feel that they are being treated unfairly", "references": ["none", "satiated"], "input": {"head": "PersonX learns how to bake a cake", "relation": "oReact"}}
{"generation": "PersonX asks PersonY to pray. Before that, PersonY asks PersonX to pray", "references": ["PersonX goes to church"], "input": {"head": "PersonX asks PersonY to pray", "relation": "isAfter"}}
{"generation": "PersonX gets something to drink. PersonX will be able to drink from the bottle", "references": ["not thirsty"], "input": {"head": "PersonX gets something to drink", "relation": "xReact"}}
{"generation": "PersonX wears PersonX's boots. After that, he wears the same outfit as the other characters", "references": ["PersonX walks in the snow"], "input": {"head": "PersonX wears PersonX's boots", "relation": "isBefore"}}
{"generation": "PersonX gives PersonY PersonX's opinion. After that, PersonY PersonX gives PersonX's opinion", "references": ["PersonX listens to PersonY's answer"], "input": {"head": "PersonX gives PersonY PersonX's opinion", "relation": "isBefore"}}
{"generation": "phosphorus is a potent antioxidant", "references": ["soluble in carbon disulphide"], "input": {"head": "phosphorus", "relation": "HasProperty"}}
{"generation": "PersonX tells PersonY to give. The effect on others will be similar to that of a normal person", "references": ["donates to the Red Cross", "gives something away", "keeps something", "decides to also give"], "input": {"head": "PersonX tells PersonY to give", "relation": "oEffect"}}
{"generation": "PersonX throws some bread. PersonX did this to me", "references": ["to throw away old food", "to feed the ducks"], "input": {"head": "PersonX throws some bread", "relation": "xIntent"}}
{"generation": "PersonX gets ___ right away. The effect on PersonX will be similar to the effect on Person X", "references": ["shouts", "money", "gets the job done", "punches", "love", "rests"], "input": {"head": "PersonX gets ___ right away", "relation": "xEffect"}}
{"generation": "give assistance. Before, PersonX needs to be able to access the information provided by PersonX", "references": ["donate help", "offer to help", "determine need and meet", "help old people with yard work", "willing to help", "helpful", "find in trouble", "ask if need help", "determine need", "find to help", "examine situation", "look for who needs", "help one", "find outhat needs assistance", "find needs assisting", "offer", "offer assistance", "prepared", "ask whether assistance needed", "ask if wants help", "medical person", "ask if need assistance", "help opne", "find out what needed", "do what needs to done", "medic", "clear about task", "find out what situation requires", "look for who needs help"], "input": {"head": "give assistance", "relation": "xNeed"}}
{"generation": "PersonX goes in PersonX ear and out the other. The effect on PersonX will be similar to the effect of the \"X\" in", "references": ["none"], "input": {"head": "PersonX goes in PersonX ear and out the other", "relation": "xEffect"}}
{"generation": "PersonX nurses PersonY back. After, PersonX will want to talk to PersonY", "references": ["finish getting person y better.", "tell person y what to do to keep themselves healthy.", "receive thanks", "have the favor returned", "let them rest", "periodically check on their condition", "to be paid", "peron y to stay healthy"], "input": {"head": "PersonX nurses PersonY back", "relation": "xWant"}}
{"generation": "PersonX follows PersonX's instructions. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX follows PersonX's instructions", "relation": "oEffect"}}
{"generation": "PersonX takes PersonX's outside. After, others will want to take PersonX's outside", "references": ["none"], "input": {"head": "PersonX takes PersonX's outside", "relation": "oWant"}}
{"generation": "PersonX has a bad day. After that, he's a little bit more relaxed", "references": ["PersonX goes to bed early that night"], "input": {"head": "PersonX has a bad day", "relation": "isBefore"}}
{"generation": "PersonX is losing weight. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX is losing weight", "relation": "oWant"}}
{"generation": "PersonX arrives soon. Before, PersonX needs to be able to talk to the other characters", "references": ["be invited somewhere", "none", "get into a car"], "input": {"head": "PersonX arrives soon", "relation": "xNeed"}}
{"generation": "PersonX comes into being. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX comes into being", "relation": "oEffect"}}
{"generation": "PersonX feels unhappy. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX feels unhappy", "relation": "xIntent"}}
{"generation": "PersonX spills PersonX's coffee. Before, PersonX needs to be able to talk to PersonX", "references": ["to pour it", "to make coffee", "none"], "input": {"head": "PersonX spills PersonX's coffee", "relation": "xNeed"}}
{"generation": "PersonX gets a manicure. PersonX is a very good dancer", "references": ["joyful", "Vain", "confident", "Fashionable"], "input": {"head": "PersonX gets a manicure", "relation": "xAttr"}}
{"generation": "PersonX doeth all ___ well. Before, PersonX needs to be able to do things like:\n\n-", "references": ["Has to be skilled at something", "none", "Has to act on thar skill"], "input": {"head": "PersonX doeth all ___ well", "relation": "xNeed"}}
{"generation": "PersonX wins any money. PersonX is the only person who can win any money", "references": ["clever", "lucky", "excited", "fortunate", "joyful", "overjoyed"], "input": {"head": "PersonX wins any money", "relation": "xAttr"}}
{"generation": "PersonX honors PersonY. The effect on PersonX will be the same as the effect on PersonY", "references": ["is proud", "humbled", "appreciation", "gets hugged", "none"], "input": {"head": "PersonX honors PersonY", "relation": "xEffect"}}
{"generation": "PersonX throws PersonY overboard. After that, PersonX is able to escape", "references": ["PersonX feels no remorse as he watches PersonY drown"], "input": {"head": "PersonX throws PersonY overboard", "relation": "isBefore"}}
{"generation": "PersonX believes also in PersonY. Before, PersonX needs to be able to talk to PersonX, but now", "references": ["to find out about person y", "to spend time with person y", "to think they are worth it", "to know them", "none"], "input": {"head": "PersonX believes also in PersonY", "relation": "xNeed"}}
{"generation": "PersonX saves PersonY's people. Before, PersonX needs to save PersonY's people", "references": ["to be God sent", "to be a general in the army", "to react quickly", "make a rescue plan", "provide help", "to assess the situation"], "input": {"head": "PersonX saves PersonY's people", "relation": "xNeed"}}
{"generation": "order is not available", "references": ["said to created from chaos"], "input": {"head": "order", "relation": "HasProperty"}}
{"generation": "PersonX sees a snake. PersonX will be able to see the snake", "references": ["shouting with fear", "scared.", "jumpy", "afraid"], "input": {"head": "PersonX sees a snake", "relation": "xReact"}}
{"generation": "PersonX takes place in the century. PersonX did this to make the game more accessible to the masses", "references": ["none"], "input": {"head": "PersonX takes place in the century", "relation": "xIntent"}}
{"generation": "PersonX takes care of PersonY's children. After that, they're all taken care of by the same person", "references": ["PersonX puts the kids to bed early"], "input": {"head": "PersonX takes care of PersonY's children", "relation": "isBefore"}}
{"generation": "PersonX attends college. PersonX will be a member of the team", "references": ["accomplished", "positive", "determined.", "relieved", "proud"], "input": {"head": "PersonX attends college", "relation": "xReact"}}
{"generation": "PersonX shuts the door behind PersonY. The effect on PersonX will be reversed", "references": ["none", "put the lock", "started driving"], "input": {"head": "PersonX shuts the door behind PersonY", "relation": "xEffect"}}
{"generation": "sculptor can be found in the following locations:\n\nThe", "references": ["create statues", "form piece of art", "produce statue"], "input": {"head": "sculptor", "relation": "CapableOf"}}
{"generation": "a black paint can be used for a variety of purposes", "references": ["be sneaky", "decorate a haunted house for Halloween", "use as nail polish", "camoflage metal for a night battle", "outline a cartoon", "darken the walls on a room", "write protests", "cover windows", "create a night scene", "reflect heat", "paint over the windows to keep out sunlight"], "input": {"head": "black paint", "relation": "ObjectUse"}}
{"generation": "PersonX buys ___ at the gas station. PersonX did this to me", "references": ["gas in their car", "to fill up the car", "to win the lottery"], "input": {"head": "PersonX buys ___ at the gas station", "relation": "xIntent"}}
{"generation": "PersonX takes PersonY outside. PersonX is a character who is a member of the group", "references": ["capable", "watchful", "helpful", "kind", "loving"], "input": {"head": "PersonX takes PersonY outside", "relation": "xAttr"}}
{"generation": "PersonX loves PersonY more than anything. After that, he's a bit of a jerk", "references": ["PersonX gets married to PersonY"], "input": {"head": "PersonX loves PersonY more than anything", "relation": "isBefore"}}
{"generation": "PersonX becomes a lawyer. PersonX is a lawyer who is a member of the legal team", "references": ["smart", "hard working", "educated", "knowledgeable", "intelligent", "willful", "skilled", "determined"], "input": {"head": "PersonX becomes a lawyer", "relation": "xAttr"}}
{"generation": "PersonX learns a new instrument. Before that, he learns a new way to play", "references": ["PersonX takes a music class"], "input": {"head": "PersonX learns a new instrument", "relation": "isAfter"}}
{"generation": "PersonX is walking along the beach. After, others will want to see her", "references": ["none"], "input": {"head": "PersonX is walking along the beach", "relation": "oWant"}}
{"generation": "PersonX rejects PersonY. After, PersonX will want to know who is the person who is the person who", "references": ["Apologize for hurting Y's feelings.", "Explain reasoning to Y", "Get away from Y", "Get some alone time", "To talk to PersonY", "To get away from PersonY"], "input": {"head": "PersonX rejects PersonY", "relation": "xWant"}}
{"generation": "a lessonbook can be used for a lot of things", "references": ["educate oneself", "Write good jokes in", "teach children with", "Make it look like youre writing notes in school.", "print worksheets", "pull content for today's lesson from", "read in spare time", "teach someone music", "practice instruments"], "input": {"head": "lessonbook", "relation": "ObjectUse"}}
{"generation": "PersonX leaves it be. The effect on PersonX will be the same as the effect on PersonX", "references": ["gets berated for inaction", "Person X puts the fire out with water", "is chastised", "Person X continues to monitor the fire"], "input": {"head": "PersonX leaves it be", "relation": "xEffect"}}
{"generation": "PersonX puts a ___ together is filled by a ___", "references": ["table", "chair", "puzzles", "computer", "bbq", "model", "kit", "puzzle"], "input": {"head": "PersonX puts a ___ together", "relation": "isFilledBy"}}
{"generation": "PersonX dates for years. As a result, others feel that they are being unfairly targeted", "references": ["caring", "none", "loving", "loved"], "input": {"head": "PersonX dates for years", "relation": "oReact"}}
{"generation": "PersonX manages one's ___ is filled by a's ___", "references": ["business", "expectations", "dogs", "files"], "input": {"head": "PersonX manages one 's ___", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX schedule is too hectic.", "PersonX dropped out of school.", "PersonX doesn't have any financial aid left available.", "PersonX was fired from their job."], "input": {"head": "PersonX pursues PersonX's course", "relation": "HinderedBy"}}
{"generation": "PersonX loves PersonY with all my heart. After that, I'm going to be a little more open about", "references": ["PersonX asks PersonY if they studied for the final"], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "isBefore"}}
{"generation": "PersonX meets friends. PersonX will be able to talk to you and you will be able", "references": ["having fun", "happy", "good", "sociable", "exhausted"], "input": {"head": "PersonX meets friends", "relation": "xReact"}}
{"generation": "a post office can be used for a number of reasons", "references": ["mailing packages", "buying stamps", "recieving letters", "mail letter", "mailing parcels", "receive letter", "receiving packages", "recieving packages", "process letters", "sending packages", "mailing letters", "receiving letters", "transmitting letters all over world", "post letter", "storing mail", "sending letters", "sorting of parcels for delivery", "mail letters"], "input": {"head": "post office", "relation": "ObjectUse"}}
{"generation": "PersonX sees what was going on. Before, PersonX needs to be able to see what's going on in the", "references": ["Walks to whatever is going on", "to observe something", "Looks around", "to make an analysis", "none"], "input": {"head": "PersonX sees what was going on", "relation": "xNeed"}}
{"generation": "PersonX leaves PersonY high and dry. Before that, you can use the same method to get PersonX", "references": ["PersonX doesn't show up to meet PersonY"], "input": {"head": "PersonX leaves PersonY high and dry", "relation": "isAfter"}}
{"generation": "PersonX switches PersonX's major. Before, PersonX needs to be able to use the same key twice", "references": ["declare a major", "Use computer", "to get permission", "enroll in a college", "to make up his mind", "Go to the administration office"], "input": {"head": "PersonX switches PersonX's major", "relation": "xNeed"}}
{"generation": "You are likely to find a prescription medication in a pharmacy that is not listed on the label", "references": ["sock drawer", "suitcase"], "input": {"head": "prescription medication", "relation": "AtLocation"}}
{"generation": "PersonX writes poetry. After, PersonX will want to know what the hell is going on", "references": ["to show the poetry to others", "to try to get their poetry published", "to publish the poetry", "to recite their poetry to family", "to share their poetry online"], "input": {"head": "PersonX writes poetry", "relation": "xWant"}}
{"generation": "PersonX sends ___ home. After, others will want to know what happened to him", "references": ["thank PersonX", "none", "receive item"], "input": {"head": "PersonX sends ___ home", "relation": "oWant"}}
{"generation": "PersonX wears PersonY's boots. Before, PersonX needs to be able to use the same abilities as PersonY", "references": ["be in PersonYs closet", "See if the boot is the right size.", "Ask for permission first.", "try on the boots"], "input": {"head": "PersonX wears PersonY's boots", "relation": "xNeed"}}
{"generation": "PersonX calls PersonY this morning. The effect on others will be different", "references": ["PersonY talks to PersonX", "listens intently", "hangs up the phone", "scolds the person", "eats breakfast", "has a good day", "hugs PersonX"], "input": {"head": "PersonX calls PersonY this morning", "relation": "oEffect"}}
{"generation": "a glass stick can be used for a variety of purposes", "references": ["smash it on a surface", "take temperatures", "class up a dinner party", "stir the mixture together", "stir the liquids to mix up", "prepare cocktails", "keep in the ground", "not contaminate the mixture", "murder an enemy", "dance at a club"], "input": {"head": "glass stick", "relation": "ObjectUse"}}
{"generation": "PersonX gets paint. After, others will want to see what they can do with it", "references": ["none"], "input": {"head": "PersonX gets paint", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The doctor is not answering the phone.", "The doctor is out of the office.", "The patient hasn't given permission for PersonX to hear about their medical history.", "The doctor was not in the office that day.", "PersonX's kid broke the phone", "Person X was unable to get an appointment.", "The doctor is out of town.", "The doctor is out of town for a month"], "input": {"head": "PersonX asks the doctor", "relation": "HinderedBy"}}
{"generation": "PersonX looks fabulous. Before that, she was a pretty girl", "references": ["PersonX goes shopping for an fashion make over"], "input": {"head": "PersonX looks fabulous", "relation": "isAfter"}}
{"generation": "PersonX stretches out PersonX's hand. PersonX did this to me", "references": ["to stretch."], "input": {"head": "PersonX stretches out PersonX's hand", "relation": "xIntent"}}
{"generation": "PersonX gets ___ on the paper. After, PersonX will want to know what the fuck you're doing", "references": ["to celebrate", "have a party", "go to sleep", "take a nap", "to clean up the spill", "to throw the paper away"], "input": {"head": "PersonX gets ___ on the paper", "relation": "xWant"}}
{"generation": "You are likely to find a minnie mouse in a lot of places", "references": ["disneyland"], "input": {"head": "minnie mouse", "relation": "AtLocation"}}
{"generation": "PersonX puts on PersonX's hat. As a result, others feel that PersonX is a bad person", "references": ["none"], "input": {"head": "PersonX puts on PersonX's hat", "relation": "oReact"}}
{"generation": "penis is a very good example of a good example of a", "references": ["inserted into vagina"], "input": {"head": "penis", "relation": "HasProperty"}}
{"generation": "PersonX thinks would become. After, PersonX will want to know what the hell is going on", "references": ["invests money", "to gather many supporters", "earn lots of money", "decision", "To become successful", "enjoyment", "to earn lots of money", "to set up a hospital", "ponders the future", "To be famous"], "input": {"head": "PersonX thinks would become", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's boss is too degrading to allow him to focus.", "The sales have been going down in general.", "PersonX's coworkers will not help him.", "personX has no skills in sale", "personX is not employed in sales any longer", "PersonX needs to get their own sales.", "PersonX lacks initiative.", "There are not enough consumers.", "PersonX is unmotivated."], "input": {"head": "PersonX improves PersonX's sales", "relation": "HinderedBy"}}
{"generation": "PersonX wants to learn karate. After that, he'll be able to learn karate", "references": ["PersonX signs up for classes at the local ymca"], "input": {"head": "PersonX wants to learn karate", "relation": "isBefore"}}
{"generation": "PersonX finds PersonX's ball. PersonX did this to me", "references": ["to be a nice friend.", "none", "to locate a lost item"], "input": {"head": "PersonX finds PersonX's ball", "relation": "xIntent"}}
{"generation": "PersonX sees PersonY brother. As a result, others feel that they are being treated unfairly", "references": ["happy to help someone", "none", "enjoyment after a playdate", "interested"], "input": {"head": "PersonX sees PersonY brother", "relation": "oReact"}}
{"generation": "PersonX enjoys PersonX's class. After, others will want to know what the class is", "references": ["to thank Person X.", "to be like Person X.", "to put lessons into action.", "to learn from Person X.", "none"], "input": {"head": "PersonX enjoys PersonX's class", "relation": "oWant"}}
{"generation": "PersonX catches PersonY eye. The effect on others will be different", "references": ["PersonY loses their eye", "Person Y is attracted to Person X.", "Person Y smiles at Person X.", "none", "PersonY in pain from blood loss"], "input": {"head": "PersonX catches PersonY eye", "relation": "oEffect"}}
{"generation": "PersonX finally joined ___. PersonX is a very good programmer, but he's not a", "references": ["accomplished", "motivated", "happy", "excited", "accepted", "determined"], "input": {"head": "PersonX finally joined ___", "relation": "xAttr"}}
{"generation": "PersonX feels unappreciated. Before, PersonX needs to be a good person", "references": ["none"], "input": {"head": "PersonX feels unappreciated", "relation": "xNeed"}}
{"generation": "PersonX looks better. After, PersonX will want to know what you're doing", "references": ["to go to work", "to take pictures", "to get dressed", "to go out on the town", "to take a photo", "to take a shower"], "input": {"head": "PersonX looks better", "relation": "xWant"}}
{"generation": "PersonX is pulled over for speeding. PersonX did this to a woman who was driving a car", "references": ["none", "to go really fast."], "input": {"head": "PersonX is pulled over for speeding", "relation": "xIntent"}}
{"generation": "PersonX calls ___ immediately. PersonX did this to me", "references": ["to be sure his friend is safe.", "to speak to someone", "to inform others", "to be prudent", "to help"], "input": {"head": "PersonX calls ___ immediately", "relation": "xIntent"}}
{"generation": "PersonX pulls out all the stops. After, PersonX will want to know what the hell is going on", "references": ["to impress", "for people to take notice", "works hard", "to make a toast", "let nothing interfere in their work", "to drink champagne"], "input": {"head": "PersonX pulls out all the stops", "relation": "xWant"}}
{"generation": "PersonX comes of age. Before, PersonX needs to be a part of the team", "references": ["Be born", "to grow up", "to be born", "none", "Live life"], "input": {"head": "PersonX comes of age", "relation": "xNeed"}}
{"generation": "PersonX scolds PersonY. The effect on others will be limited to the person who is the most likely to", "references": ["is talked down to.", "PersonY stops talking to PersonX", "PersonY is reprimended", "walks away sad", "is yelled at", "pouts in embarrassment"], "input": {"head": "PersonX scolds PersonY", "relation": "oEffect"}}
{"generation": "PersonX feels unhappy. Before that, he's been a very good player", "references": ["PersonX goes to a funeral"], "input": {"head": "PersonX feels unhappy", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no camera.", "PersonX can't find PersonY.", "PersonY will not pose for a picture.", "PersonX and PersonY are mad at each other", "PersonX does not have a camera.", "PersonX can't find PersonY"], "input": {"head": "PersonX gets PersonY's picture taken", "relation": "HinderedBy"}}
{"generation": "PersonX finds another shell. After that, he finds a new one", "references": ["PersonX puts it with the others in the bucket"], "input": {"head": "PersonX finds another shell", "relation": "isBefore"}}
{"generation": "a gym shoes can be used for a variety of purposes", "references": ["smash bugs", "hike a trail", "wear while working out at the gym", "prop open a door", "run track", "protect your feet", "hide money", "throw at an annoying person", "keep feet from hurting while playing sports"], "input": {"head": "gym shoes", "relation": "ObjectUse"}}
{"generation": "a sugar packets can be used for a variety of purposes, including:\n\n\u2022", "references": ["fill a vase", "sprinkle on someone's head", "add to coffee", "put into their own container", "sweeten tea", "place on the table for guests", "snort like cocaine", "contain measured amounts of sugar", "sprinkle on berries", "balance a wobbly table"], "input": {"head": "sugar packets", "relation": "ObjectUse"}}
{"generation": "PersonX loves PersonX's work. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX loves PersonX's work", "relation": "oWant"}}
{"generation": "PersonX sends PersonY's home. After, others will want to know who is the real person", "references": ["call someone", "drive home"], "input": {"head": "PersonX sends PersonY's home", "relation": "oWant"}}
{"generation": "PersonX is mother. PersonX will be the one who will be the one who will be", "references": ["maternal and loving"], "input": {"head": "PersonX is mother", "relation": "xReact"}}
{"generation": "PersonX never lost. The effect on PersonX will be similar to that of a normal person", "references": ["revels", "enjoys awards", "poses for photographs", "continues to compete and win", "none"], "input": {"head": "PersonX never lost", "relation": "xEffect"}}
{"generation": "PersonX makes PersonY ___ every time. The effect on others will be different", "references": ["they buy something nice", "none", "they save a lot of money"], "input": {"head": "PersonX makes PersonY ___ every time", "relation": "oEffect"}}
{"generation": "PersonX has a wonderful time. After that, I'm going to be a little more open about", "references": ["PersonX has to go to bed early from exhuastion"], "input": {"head": "PersonX has a wonderful time", "relation": "isBefore"}}
{"generation": "PersonX sees every ___. After, PersonX will want to know what the ___", "references": ["to write down what they see", "to go to lunch", "to use their knowledge", "to go home", "to prepare for tomorrow"], "input": {"head": "PersonX sees every ___", "relation": "xWant"}}
{"generation": "PersonX tells PersonY to say. After, PersonX will want to know what the hell is going on", "references": ["to keep PersonY going", "to be in power", "to boss more people around", "to make sure PersonY doesn't fail", "to think of something else", "to see the reaction", "for PersonY to listen"], "input": {"head": "PersonX tells PersonY to say", "relation": "xWant"}}
{"generation": "PersonX opens PersonX's legs. After, PersonX will want to touch PersonX's legs", "references": ["to flash someone", "To reach an area of the body", "to ask the doctor a ?", "To stretch"], "input": {"head": "PersonX opens PersonX's legs", "relation": "xWant"}}
{"generation": "PersonX spills coffee. As a result, others feel the same way", "references": ["mad", "none", "angry"], "input": {"head": "PersonX spills coffee", "relation": "oReact"}}
{"generation": "PersonX puts PersonY's mind at ease. PersonX will be able to see the world through PersonY's eyes", "references": ["calm", "soothed"], "input": {"head": "PersonX puts PersonY's mind at ease", "relation": "xReact"}}
{"generation": "PersonX eats a hamburger. The effect on PersonX will be similar to that of a normal hamburger", "references": ["stains clothes", "gets bloated", "belches", "none", "gets meat stuck in teeth"], "input": {"head": "PersonX eats a hamburger", "relation": "xEffect"}}
{"generation": "PersonX calls around. As a result, others feel the same way", "references": ["frustrated", "none", "angry"], "input": {"head": "PersonX calls around", "relation": "oReact"}}
{"generation": "PersonX waits at the bus stop. PersonX is waiting for the bus stop", "references": ["arrive", "calm", "independant", "curious", "adventurous", "patient", "determined"], "input": {"head": "PersonX waits at the bus stop", "relation": "xAttr"}}
{"generation": "PersonX nurses it back to health. After, others will want to take it back to health", "references": ["none"], "input": {"head": "PersonX nurses it back to health", "relation": "oWant"}}
{"generation": "PersonX sings PersonY's praises. Before that, he's just a little bit more of a goof", "references": ["PersonX sees a stage show"], "input": {"head": "PersonX sings PersonY's praises", "relation": "isAfter"}}
{"generation": "PersonX forgets PersonY's wallet. As a result, others feel that PersonX is a bad person", "references": ["angry"], "input": {"head": "PersonX forgets PersonY's wallet", "relation": "oReact"}}
{"generation": "PersonX finds PersonX's car. After, PersonX will want to get out of the car and get a ride", "references": ["unlock the car", "fuel", "drive home", "car"], "input": {"head": "PersonX finds PersonX's car", "relation": "xWant"}}
{"generation": "PersonX loves PersonY's work. PersonX will be the first person to ever be able to play the", "references": ["inspired", "happy", "content", "proud", "jealousy", "amused", "jealous", "impressed"], "input": {"head": "PersonX loves PersonY's work", "relation": "xReact"}}
{"generation": "PersonX turns PersonY's heads. After that, PersonX turns PersonY's head", "references": ["PersonX accepts a gift from PersonY", "PersonX makes new friends"], "input": {"head": "PersonX turns PersonY's heads", "relation": "isBefore"}}
{"generation": "PersonX shows a leg. PersonX is a character in the game", "references": ["punctual", "relaxed", "organized", "flirty"], "input": {"head": "PersonX shows a leg", "relation": "xAttr"}}
{"generation": "PersonX beats everyone. PersonX will be the first person to win the game", "references": ["important", "accomplished"], "input": {"head": "PersonX beats everyone", "relation": "xReact"}}
{"generation": "PersonX tells my friend. After, PersonX will want to know what you're doing", "references": ["to make them listen", "to have a relationship", "to share information", "to be informative"], "input": {"head": "PersonX tells my friend", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX dislikes PersonY very much.", "PersonY is not even fazed by the loss", "they didn't know who they were really", "they did bad things before they died", "PersonY's loss isn't very sad.", "PersonY is not acquainted with PersonX"], "input": {"head": "PersonX mourns PersonY's loss", "relation": "HinderedBy"}}
{"generation": "PersonX dies peacefully. The effect on others will be permanent", "references": ["grieve", "Gain peace from event", "cry", "Fill the void"], "input": {"head": "PersonX dies peacefully", "relation": "oEffect"}}
{"generation": "PersonX burns the food. The effect on others will be similar to that of a normal burn", "references": ["none"], "input": {"head": "PersonX burns the food", "relation": "oEffect"}}
{"generation": "PersonX sprays PersonX. As a result, others feel the same way", "references": ["none", "cold"], "input": {"head": "PersonX sprays PersonX", "relation": "oReact"}}
{"generation": "PersonX reaches PersonY's ears. As a result, others feel the same way", "references": ["haapy", "closed  to listen", "clean"], "input": {"head": "PersonX reaches PersonY's ears", "relation": "oReact"}}
{"generation": "PersonX leans back in PersonY's chair. PersonX will be the one to talk to", "references": ["very cozy", "relaxed"], "input": {"head": "PersonX leans back in PersonY's chair", "relation": "xReact"}}
{"generation": "PersonX keeps the kitten. Before that, he's a little bit of a jerk", "references": ["PersonX finds a lost kitten", "PersonX finds a kitten in the alley", "PersonX finds kitty"], "input": {"head": "PersonX keeps the kitten", "relation": "isAfter"}}
{"generation": "PersonX is a good swimmer. After, PersonX will want to swim with you", "references": ["to join the olympics team", "to learn how to swim other styles", "to keep practicing", "to compete", "To compete", "To take part in swimming competition"], "input": {"head": "PersonX is a good swimmer", "relation": "xWant"}}
{"generation": "PersonX searches PersonY. As a result, others feel that PersonX is too much of a \"friend", "references": ["invaded", "resentful", "thankful", "frightened"], "input": {"head": "PersonX searches PersonY", "relation": "oReact"}}
{"generation": "PersonX falls into the wrong hands. After that, he is forced to fight his way out of the", "references": ["PersonX ends up in a lot of trouble"], "input": {"head": "PersonX falls into the wrong hands", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person Y has closed their eyes.", "The room is filled with smoke.", "PersonY is staring at someone else.", "PersonY won't look in PersonX's direction.", "Person Y is too far away.", "PersonX is facing the opposite direction of PersonY.", "PersonY is asleep."], "input": {"head": "PersonX makes eye contact with PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX calls a taxi. After that, he goes to the hospital", "references": ["PersonX waits for the taxi to show up"], "input": {"head": "PersonX calls a taxi", "relation": "isBefore"}}
{"generation": "PersonX spends the ___ working. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX spends the ___ working", "relation": "oWant"}}
{"generation": "PersonX babysits PersonX's cousin. Before that, she's been a babysitter for PersonX's", "references": ["PersonX asks for a job"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "isAfter"}}
{"generation": "PersonX gets PersonY's hands. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to warm the person's hands.", "to play"], "input": {"head": "PersonX gets PersonY's hands", "relation": "xIntent"}}
{"generation": "PersonX learns the printer's ___. PersonX is a member of the class 'personX' and", "references": ["hard-working", "studious", "curious", "knowledgable"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xAttr"}}
{"generation": "PersonX orders ___ from the restaurant. The effect on others will be limited to the restaurant's ability to serve the food", "references": ["none"], "input": {"head": "PersonX orders ___ from the restaurant", "relation": "oEffect"}}
{"generation": "PersonX wins every ___. PersonX is the only person who can win", "references": ["clever", "competitive", "competent", "BRAVE", "intelligent", "STRONG"], "input": {"head": "PersonX wins every ___", "relation": "xAttr"}}
{"generation": "PersonX shrugs PersonY's shoulders. After that, PersonX says, \"I'm not sure I", "references": ["PersonX then asks PersonY why they aren't talking to them"], "input": {"head": "PersonX shrugs PersonY's shoulders", "relation": "isBefore"}}
{"generation": "mormon can be found at: http://www", "references": ["travel to europe"], "input": {"head": "mormon", "relation": "CapableOf"}}
{"generation": "PersonX takes a step forward. Before that, he's been a bit of a dick", "references": ["PersonX is playing a game outside"], "input": {"head": "PersonX takes a step forward", "relation": "isAfter"}}
{"generation": "PersonX prevents ___ from entering. The effect on PersonX will be removed if PersonX is not in the same room", "references": ["fights", "get shoved", "is praised", "is yelled at", "gets beat up"], "input": {"head": "PersonX prevents ___ from entering", "relation": "xEffect"}}
{"generation": "PersonX gives PersonY the name. After, others will want to know who you are", "references": ["reach out", "to ask PersonX more questions", "to tell PersonX what their reward will be", "get contact info", "to keep everything a secret", "to know everything"], "input": {"head": "PersonX gives PersonY the name", "relation": "oWant"}}
{"generation": "PersonX gets accepted. Before, PersonX needs to be a member of the team", "references": ["He applys at the store.", "to apply", "Waits for a call.", "to try their best", "to have worked hard", "to have applied"], "input": {"head": "PersonX gets accepted", "relation": "xNeed"}}
{"generation": "PersonX sees every day. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX sees every day", "relation": "oReact"}}
{"generation": "PersonX is low on gas. After that, he's a bit of a jerk", "references": ["PersonX pulls into gas station"], "input": {"head": "PersonX is low on gas", "relation": "isBefore"}}
{"generation": "a bicycle contains a small amount of carbon dioxide, which is a", "references": ["bicycle seat", "sprocket", "coaster brake", "handlebar", "metal", "kickstand", "pedal", "mudguard", "wheel", "bicycle wheel", "bicycle chain", "chain"], "input": {"head": "bicycle", "relation": "MadeUpOf"}}
{"generation": "PersonX gives PersonY children. The effect on others will be different", "references": ["Get to raise these children", "feels good", "feels great", "Get to meet these children", "none"], "input": {"head": "PersonX gives PersonY children", "relation": "oEffect"}}
{"generation": "PersonX understands fully the ___. PersonX is a member of the ___", "references": ["informed", "worldy", "knowledgeable", "educated"], "input": {"head": "PersonX understands fully the ___", "relation": "xAttr"}}
{"generation": "PersonX goes on with PersonX's work. PersonX is a very good writer, and I think he's", "references": ["Determined", "Hardworking", "Dedicated", "Busy"], "input": {"head": "PersonX goes on with PersonX's work", "relation": "xAttr"}}
{"generation": "PersonX gathers all the ingredients. After, PersonX will want to know what the ingredients are", "references": ["to bake a cake", "to cook food", "put them in the oven", "to do recipes", "to cook", "mix them up"], "input": {"head": "PersonX gathers all the ingredients", "relation": "xWant"}}
{"generation": "PersonX wants to go again. Before that, he's been in the same situation as the other", "references": ["PersonX goes on the roller coaster", "PersonX attended a music festival"], "input": {"head": "PersonX wants to go again", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's friends and family are busy and not available for talking.", "They don't know the full story.", "PersonX has lost his voice", "They're too afraid to say anything", "PersonX's boss has forbidden PersonX from telling anyone the news.", "Nobody is listening to PersonX"], "input": {"head": "PersonX breaks the news", "relation": "HinderedBy"}}
{"generation": "a cashier can be used for a fee of $10", "references": ["charge buyer", "sing and dance for customers", "gain information", "take the money for the helmet", "purchase the tent from", "help customers shoplift items", "return products to", "take the money", "sell the apple", "sell the guitar", "accept funds", "sell computer to customer", "locate a store item", "rent the boat from", "process with purchase", "check a price"], "input": {"head": "cashier", "relation": "ObjectUse"}}
{"generation": "PersonX never been on one. PersonX is a very good friend of mine, and I've", "references": ["mindful", "a loner", "to himself", "Inexperienced", "curious", "Novice", "considerate"], "input": {"head": "PersonX never been on one", "relation": "xAttr"}}
{"generation": "PersonX looks down upon PersonY. Before that, he's just a normal person", "references": ["PersonX is working on the roof"], "input": {"head": "PersonX looks down upon PersonY", "relation": "isAfter"}}
{"generation": "PersonX blows this popsicle stand. As a result, others feel the same way", "references": ["sad", "excited"], "input": {"head": "PersonX blows this popsicle stand", "relation": "oReact"}}
{"generation": "PersonX gives ___ a warning. PersonX will be able to use the \"I'm not a robot", "references": ["sad", "watchful", "caring"], "input": {"head": "PersonX gives ___ a warning", "relation": "xReact"}}
{"generation": "PersonX feels refreshed. PersonX did this to me, and I'm glad I did", "references": ["to feel recharged", "to feel replenished", "to feel relaxed", "none"], "input": {"head": "PersonX feels refreshed", "relation": "xIntent"}}
{"generation": "PersonX sifts out ___. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX sifts out ___", "relation": "oWant"}}
{"generation": "PersonX wins several awards. After, PersonX will want to know who the next person to be", "references": ["to give a speech", "celebrates with friends and family", "to put the award on the mantle", "collects the trophy's"], "input": {"head": "PersonX wins several awards", "relation": "xWant"}}
{"generation": "PersonX puts the ___ together. Before, PersonX needs to know that the ___ is a \"thing\" and", "references": ["none"], "input": {"head": "PersonX puts the ___ together", "relation": "xNeed"}}
{"generation": "PersonX plays a ___ in the movement. PersonX did this to me", "references": ["to help out", "to be apart of something"], "input": {"head": "PersonX plays a ___ in the movement", "relation": "xIntent"}}
{"generation": "PersonX has been deferred until test results are in. As a result, others feel that the project is not ready for release", "references": ["none"], "input": {"head": "PersonX has been deferred until test results are in", "relation": "oReact"}}
{"generation": "PersonX would like. PersonX did this to me", "references": ["a piece of cake"], "input": {"head": "PersonX would like", "relation": "xIntent"}}
{"generation": "PersonX makes PersonY order. Before that, you can use PersonX to order PersonY to", "references": ["PersonX decides to order take out", "PersonX takes PersonY on a date"], "input": {"head": "PersonX makes PersonY order", "relation": "isAfter"}}
{"generation": "PersonX learns new things. Before, PersonX needs to learn how to use the game's \"new\"", "references": ["get new job", "A SUBJECT", "TO HAVE SOMETHING TO LEARN ABOUT", "attend class"], "input": {"head": "PersonX learns new things", "relation": "xNeed"}}
{"generation": "PersonX catches the bus to work. After, PersonX will want to know what the hell is going on", "references": ["to travel to work/school on the bus", "to exit the bus at the right stop", "to get off at their stop", "to ride the bus to work", "to walk from the bus stop to work/school", "goes to the football game", "goes shopping"], "input": {"head": "PersonX catches the bus to work", "relation": "xWant"}}
{"generation": "PersonX puts everything together. PersonX will be the one who will be the one who gets the", "references": ["happy", "eager", "kind", "prepared", "determined"], "input": {"head": "PersonX puts everything together", "relation": "xReact"}}
{"generation": "PersonX keeps straight. Before, PersonX needs to be able to use the \"X\" key to", "references": ["none", "a path", "a plan"], "input": {"head": "PersonX keeps straight", "relation": "xNeed"}}
{"generation": "PersonX spends PersonX's ___ making. As a result, others feel that PersonX is a bad person", "references": ["none"], "input": {"head": "PersonX spends PersonX's ___ making", "relation": "oReact"}}
{"generation": "PersonX gives PersonY room. PersonX is the only person who can see the room", "references": ["unobtrusive", "Attentive", "unassuming", "understanding", "loving", "Selfless", "empathetic"], "input": {"head": "PersonX gives PersonY room", "relation": "xAttr"}}
{"generation": "PersonX presents PersonX's views. After that, you can choose to use the \"PersonX\"", "references": ["PersonX gets told off by PersonY"], "input": {"head": "PersonX presents PersonX's views", "relation": "isBefore"}}
{"generation": "PersonX understands the ___ in terms is filled by the ___", "references": ["liscense", "essay", "contract", "book"], "input": {"head": "PersonX understands the ___ in terms", "relation": "isFilledBy"}}
{"generation": "PersonX jumps before PersonX is pushed. Before, PersonX needs to be pushed to the left or right of PersonX", "references": ["to be aware of their surroundings", "to be watching", "none"], "input": {"head": "PersonX jumps before PersonX is pushed", "relation": "xNeed"}}
{"generation": "PersonX takes a ride to tyburn. After, PersonX will want to know what the hell is going on", "references": ["to thank the driver", "to arrive at their destination", "to go into their hotel", "to get out of the car"], "input": {"head": "PersonX takes a ride to tyburn", "relation": "xWant"}}
{"generation": "PersonX fails all of PersonX's classes. PersonX did this to me because I was trying to use PersonX's", "references": ["none"], "input": {"head": "PersonX fails all of PersonX's classes", "relation": "xIntent"}}
{"generation": "PersonX takes a bow. The effect on PersonX will be similar to that of a normal attack", "references": ["exits the stage", "PersonX gets a standing ovation", "gets applauded", "PersonX receives applause", "gets applause", "gets booed"], "input": {"head": "PersonX takes a bow", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Does not have permission", "PersonX doesn't know how to drive stick shift", "Does not have the keys", "PersonX doesn't know where the car is", "PersonX doesn't know how to drive", "PErsonX doesn't have PersonY's car keys."], "input": {"head": "PersonX moves PersonY's car", "relation": "HinderedBy"}}
{"generation": "PersonX changes PersonY's lives. The effect on PersonX will be the same as PersonY's", "references": ["none", "gets a new friend", "receives praise"], "input": {"head": "PersonX changes PersonY's lives", "relation": "xEffect"}}
{"generation": "old dog can be found in the woods near the town of K", "references": ["learn new tricks"], "input": {"head": "old dog", "relation": "CapableOf"}}
{"generation": "You are likely to find a storehouse in a city that has a lot of people who are interested", "references": ["basement"], "input": {"head": "storehouse", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have a map to tell them the way", "PersonY will not follow PersonX.", "PersonX is not the one in charge.", "PersonX's GPS is broken", "PersonY keeps following someone else.", "PersonX cannot find PersonY."], "input": {"head": "PersonX leads PersonY back", "relation": "HinderedBy"}}
{"generation": "PersonX loves PersonY's work. After, others will want to know what's going on with the character", "references": ["x to buy the work", "to continue making work", "accept job", "to show x some more work", "tell others about their work", "advertise", "to express gratitude"], "input": {"head": "PersonX loves PersonY's work", "relation": "oWant"}}
{"generation": "PersonX gets right. The effect on PersonX will be the same as the effect on PersonX", "references": ["none"], "input": {"head": "PersonX gets right", "relation": "xEffect"}}
{"generation": "PersonX exerts PersonY influence. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX exerts PersonY influence", "relation": "oReact"}}
{"generation": "PersonX discovers in PersonY's bed. After, others will want to know what happened to her", "references": ["to defend themselves.", "none", "to ask them why they are so nosy."], "input": {"head": "PersonX discovers in PersonY's bed", "relation": "oWant"}}
{"generation": "PersonX makes contact with PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to talk", "to rekindle an old friendship", "to visit", "to catch up"], "input": {"head": "PersonX makes contact with PersonY", "relation": "xIntent"}}
{"generation": "PersonX belongs to PersonX's father. The effect on PersonX will be the same as the effect on PersonX", "references": ["Goes fishing", "Goes golfing", "none"], "input": {"head": "PersonX belongs to PersonX's father", "relation": "xEffect"}}
{"generation": "PersonX reads god's ___ is filled by a demon", "references": ["bible", "newsletter", "book"], "input": {"head": "PersonX reads god 's ___", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY died and left PersonX all their money", "PersonX's mom keeps giving a large allowance", "PersonX is in the practice of saving money.", "PersonX is too good at making money."], "input": {"head": "PersonX does not have a lot of money", "relation": "HinderedBy"}}
{"generation": "PersonX arches PersonY back. The effect on PersonX will be reversed", "references": ["leaps", "none", "lands on feet"], "input": {"head": "PersonX arches PersonY back", "relation": "xEffect"}}
{"generation": "PersonX starves the ___ into submission. The effect on PersonX will be felt by the user, and the user will be", "references": ["walks confidently", "waits expectantly", "It receives submissivity from a bunch of people, it means person X will not do things because other will do it for him/her.", "Things that Person X wanted to do and was not allowed to do, will be available to be done once the submission is reached."], "input": {"head": "PersonX starves the ___ into submission", "relation": "xEffect"}}
{"generation": "PersonX doesn't know what to eat. After that, he's just a normal guy", "references": ["PersonX got the daily special", "PersonX orders chinese takeout"], "input": {"head": "PersonX does n't know what to eat", "relation": "isBefore"}}
{"generation": "PersonX makes ___ as well is filled by the fact that he's a very good player", "references": ["a new dress", "pottery", "food", "paintings", "toys", "money", "gifts", "puzzle", "jams", "cookies", "pizza", "lunch", "sculptures", "pies", "clothes", "bags", "dresses", "cakes", "soup", "cake", "wine", "cheese", "fruitcake", "art"], "input": {"head": "PersonX makes ___ as well", "relation": "isFilledBy"}}
{"generation": "PersonX becomes suspicious. After that, he tries to convince her to join him", "references": ["PersonX reports the person"], "input": {"head": "PersonX becomes suspicious", "relation": "isBefore"}}
{"generation": "PersonX receives a phone call. PersonX is a member of the \"Feminist\" group", "references": ["cautious", "important", "curious", "status", "Wondering", "Listening"], "input": {"head": "PersonX receives a phone call", "relation": "xAttr"}}
{"generation": "PersonX is a quick learner. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX is a quick learner", "relation": "oEffect"}}
{"generation": "PersonX lifts PersonY's leg. Before that, she lifts PersonX's leg", "references": ["PersonX sees a cut on PersonY's leg", "PersonX finds PersonY stuck in the mud", "PersonX knocks PersonY onto the ground"], "input": {"head": "PersonX lifts PersonY's leg", "relation": "isAfter"}}
{"generation": "You are likely to find a ferris wheel in a lot of places", "references": ["carnival", "fairgrounds"], "input": {"head": "ferris wheel", "relation": "AtLocation"}}
{"generation": "PersonX switches PersonX's major. As a result, others feel that PersonX is too much of a jerk to", "references": ["none"], "input": {"head": "PersonX switches PersonX's major", "relation": "oReact"}}
{"generation": "PersonX rises to the challenge. The effect on PersonX will be similar to that of a normal character", "references": ["smiles", "none", "achieves goal"], "input": {"head": "PersonX rises to the challenge", "relation": "xEffect"}}
{"generation": "PersonX bosses PersonY around. Before, PersonX needs to be able to use the same moves as PersonY", "references": ["to be in charge", "to be a bully", "decide who they are going to be bossy to", "think about the order they will give"], "input": {"head": "PersonX bosses PersonY around", "relation": "xNeed"}}
{"generation": "PersonX sits next to PersonY in class. PersonX will be the one who will be the one who gets the", "references": ["loved and happy", "shy", "connected", "happy"], "input": {"head": "PersonX sits next to PersonY in class", "relation": "xReact"}}
{"generation": "a flood lights can be used for this purpose", "references": ["illuminate what is in front", "use as a spotlight", "do yardwork after dark", "light up house", "use as a Christmas light", "change colors to use as Christmas decorations", "scare away burglers", "expose thieves", "be able to see when walking up sidewalk at night", "see outside at night"], "input": {"head": "flood lights", "relation": "ObjectUse"}}
{"generation": "PersonX calls god's ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["receives a response", "prays", "reads the bible", "is praised by others", "talks"], "input": {"head": "PersonX calls god 's ___", "relation": "xEffect"}}
{"generation": "PersonX confronts PersonX's roommate. PersonX will be able to talk to PersonX about the situation", "references": ["angry", "ready to compromise", "understood", "good for being honest", "disappointed"], "input": {"head": "PersonX confronts PersonX's roommate", "relation": "xReact"}}
{"generation": "PersonX loves the puppy. After that, he's a little bit more of a puppy", "references": ["PersonX names the puppy"], "input": {"head": "PersonX loves the puppy", "relation": "isBefore"}}
{"generation": "PersonX sits and watch. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sits and watch", "relation": "oEffect"}}
{"generation": "You are likely to find a beethoven in a room with a piano, a violin, a violin", "references": ["mercury"], "input": {"head": "beethoven", "relation": "AtLocation"}}
{"generation": "PersonX cann't believe PersonY's luck. The effect on others will be much more pronounced", "references": ["becomes rich", "receives promotion"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "oEffect"}}
{"generation": "PersonX sees PersonY in PersonX's office. PersonX did this to PersonY, and PersonX did this to Person", "references": ["none", "to meet person y", "to see what/who is in his office."], "input": {"head": "PersonX sees PersonY in PersonX's office", "relation": "xIntent"}}
{"generation": "PersonX puts PersonX's mind. PersonX is a person who is not a person", "references": ["dedicated", "cruel", "arrogant", "curious", "active", "intellectual"], "input": {"head": "PersonX puts PersonX's mind", "relation": "xAttr"}}
{"generation": "PersonX pulls PersonY out. After, PersonX will want to know who you are", "references": ["wipe off dirt", "getting angry", "Help PersonY", "sit and breathe", "Check PersonY for injury", "to be alone"], "input": {"head": "PersonX pulls PersonY out", "relation": "xWant"}}
{"generation": "PersonX protects the ___ from harm is filled by the ___", "references": ["pie", "plants", "fish", "kitten", "cat"], "input": {"head": "PersonX protects the ___ from harm", "relation": "isFilledBy"}}
{"generation": "PersonX takes PersonX's laptop. After, PersonX will want to use the laptop to access the server", "references": ["to watch movie", "to mail", "to edit their vacation photos.", "to do some work.", "to complete assignment"], "input": {"head": "PersonX takes PersonX's laptop", "relation": "xWant"}}
{"generation": "PersonX makes PersonY ___ every time. PersonX will be the one who gets the most points", "references": ["good happy", "accomplished"], "input": {"head": "PersonX makes PersonY ___ every time", "relation": "xReact"}}
{"generation": "PersonX catches PersonY's attention. The effect on others will be similar to that of a normal person", "references": ["is attracted to PersonX", "notices X", "brings back a memory", "gets rejected", "blushes", "smiles"], "input": {"head": "PersonX catches PersonY's attention", "relation": "oEffect"}}
{"generation": "PersonX wants to make a good impression. After that, he's going to have to make a good impression", "references": ["PersonX brings her parents a gift", "PersonX tells them about the charities they donate to", "PersonX gets the job"], "input": {"head": "PersonX wants to make a good impression", "relation": "isBefore"}}
{"generation": "PersonX feels very sad. PersonX is a very good person", "references": ["depressed", "shameful", "Deep", "unhappy", "Depressed", "down trotted"], "input": {"head": "PersonX feels very sad", "relation": "xAttr"}}
{"generation": "PersonX searches for a job. PersonX is a search engine for people who are looking for jobs", "references": ["desperate", "workaholic", "persistant", "ambitious", "independent", "interesting"], "input": {"head": "PersonX searches for a job", "relation": "xAttr"}}
{"generation": "PersonX enjoys PersonY's class. PersonX will be able to use the same abilities as PersonY,", "references": ["inspired", "informed", "happy", "excited"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xReact"}}
{"generation": "PersonX borrows PersonY's car. PersonX did this to get the car", "references": ["to use this car because their own car is being repaired", "to go for a drive", "to go somewhere", "to pick something up"], "input": {"head": "PersonX borrows PersonY's car", "relation": "xIntent"}}
{"generation": "a screen can be used for a number of different purposes", "references": ["see the words", "to see what you're doing", "watch what they're doing", "to see the action", "see video content on", "see the graphics on", "show slides or videos", "see what's happening", "show photo to friend", "watch film", "present ideas on", "see the film on", "edit music on", "read the text from", "to sift sand", "display the film", "display the message", "watch shows on", "see the error message", "view pictures", "view their account to delete it", "display the show", "look at", "swing open", "learn something new on", "watch a sermon on", "see the lyrics to a song", "to sift flour", "watch the movie on", "put on a window and keep bugs out", "look at subject", "see the content", "show the paintings"], "input": {"head": "screen", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is sick and can't get to work", "PersonX doesn't have the skills to do the job.", "PersonX is sad.", "PersonY makes PersonX work crappy jobs.", "PersonX got fired and has no job.", "PersonX has a health condition.", "PersonY fires PersonX.", "PersonX has no transportation to get to work"], "input": {"head": "PersonX works great", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is a trust fund baby.", "PersonX was born into a wealthy family.", "PersonX has a trust fund.", "PersonX was born rich.", "PersonX won the lottery.", "PersonX just won the lottery.", "PersonX married a rich lady.", "PersonX is filthy rich."], "input": {"head": "PersonX is in dire need of money", "relation": "HinderedBy"}}
{"generation": "PersonX finds PersonY's ring. After, PersonX will want to know who the ring belongs to", "references": ["to find person y", "call them", "to give it back", "to return the ring"], "input": {"head": "PersonX finds PersonY's ring", "relation": "xWant"}}
{"generation": "PersonX comes ___ to roost. PersonX will be the one who gets the most votes", "references": ["resigned to a new or revised mode of thinking.", "content", "that things have reached a natural conclusion of sorts."], "input": {"head": "PersonX comes ___ to roost", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn\u2019t have an attorney.", "PersonX cannot afford a lawyer", "The statute of limitations for the crime in question has run out.", "Person X has no proof of Person Y's guilt", "PersonY fled the country", "PersonY is too powerful.", "PersonX doesn\u2019t have enough money to file a case."], "input": {"head": "PersonX brings PersonY to trial", "relation": "HinderedBy"}}
{"generation": "PersonX goes to a fast food restaurant. After that, he goes to a fast food restaurant", "references": ["PersonX buys a bunch of fries"], "input": {"head": "PersonX goes to a fast food restaurant", "relation": "isBefore"}}
{"generation": "PersonX gets the ___ into PersonY's hands. The effect on others will be similar to that of the ___", "references": ["none", "looks for the traitor", "prosecutes the traitor"], "input": {"head": "PersonX gets the ___ into PersonY's hands", "relation": "oEffect"}}
{"generation": "a document can be used for a number of different purposes", "references": ["list objectives", "prove who he is", "transfer power of attorney", "make a paper boat", "get a loan", "show evidence", "add numbers to", "tape to a door", "write a signature on", "storing information", "show record of another puchasing the vechile", "burn for heat", "to line a birdcage", "wrap meat from the butcher", "prove citizenship", "to hold over his head in the rain to keep the rain off", "look over and sign", "give notice of firing"], "input": {"head": "document", "relation": "ObjectUse"}}
{"generation": "a prison uniform can be used for a variety of purposes, including:\n\n\u2022", "references": ["cover body", "be identified as a prisioner", "use while cleaning", "wear while in jail", "wear as a costume", "pull a fast one on the local library", "have clothes", "wear as a costume at a Halloween party", "make your son wear when he is in a time out", "wear as a costume.", "burn after you're released", "take away ones sense of self"], "input": {"head": "prison uniform", "relation": "ObjectUse"}}
{"generation": "a leather can be used for a variety of purposes, including:\n\n\u2022", "references": ["make pants out of", "make shoes", "create a craft", "make a dress", "slap with hand", "use for an art project", "make material with", "use as an upholstery item", "be warm in", "protect a cell phone", "cushion for protection"], "input": {"head": "leather", "relation": "ObjectUse"}}
{"generation": "a receiver contains a number of parameters that are used to determine the", "references": ["antenna", "radio chassis"], "input": {"head": "receiver", "relation": "MadeUpOf"}}
{"generation": "PersonX likes fish. After, PersonX will want to know if you're a fish", "references": ["to eat fish.", "to clean fish."], "input": {"head": "PersonX likes fish", "relation": "xWant"}}
{"generation": "PersonX tries PersonY's food. Before that, he tries PersonY's food", "references": ["PersonX goes to PersonY house for dinner"], "input": {"head": "PersonX tries PersonY's food", "relation": "isAfter"}}
{"generation": "PersonX buys a new phone. After that, he's going to have to figure out how to", "references": ["PersonX buys a waterproof case for the phone"], "input": {"head": "PersonX buys a new phone", "relation": "isBefore"}}
{"generation": "PersonX dyes PersonX's hair red. PersonX will be wearing a red shirt", "references": ["happy", "happy.", "pleased", "adventurous", "attractive"], "input": {"head": "PersonX dyes PersonX's hair red", "relation": "xReact"}}
{"generation": "PersonX casts ___ before swine. Before, PersonX needs to cast ___ before swine", "references": ["none", "to jump to conclusions", "have an event"], "input": {"head": "PersonX casts ___ before swine", "relation": "xNeed"}}
{"generation": "PersonX starts PersonY business. Before that, he's a regular customer at the restaurant", "references": ["PersonX quits her job"], "input": {"head": "PersonX starts PersonY business", "relation": "isAfter"}}
{"generation": "PersonX moves past PersonY. Before, PersonX needs to be able to move past PersonY", "references": ["try harder", "none", "train"], "input": {"head": "PersonX moves past PersonY", "relation": "xNeed"}}
{"generation": "PersonX looks on PersonY's face. Before, PersonX needs to be able to see PersonY's face", "references": ["to be a doctor", "to walk to PersonY", "to be with PersonY", "to find PersonY", "to be a dermatologist", "none"], "input": {"head": "PersonX looks on PersonY's face", "relation": "xNeed"}}
{"generation": "PersonX gets really bored. After that, he's just a normal guy", "references": ["PersonX scrolls through social media during the sermon"], "input": {"head": "PersonX gets really bored", "relation": "isBefore"}}
{"generation": "a senate contains a number of senators who are not members of the", "references": ["100 members"], "input": {"head": "senate", "relation": "MadeUpOf"}}
{"generation": "PersonX renews within days. Before that, you can cancel your subscription at any time", "references": ["PersonX has a trail run"], "input": {"head": "PersonX renews within days", "relation": "isAfter"}}
{"generation": "PersonX brings ___ to the eyes. As a result, others feel the same way", "references": ["weak", "none", "relieved"], "input": {"head": "PersonX brings ___ to the eyes", "relation": "oReact"}}
{"generation": "PersonX tells ___ that PersonY had cancer. The effect on others will be different", "references": ["prays for persony", "thinks of persony", "screams", "cries"], "input": {"head": "PersonX tells ___ that PersonY had cancer", "relation": "oEffect"}}
{"generation": "PersonX agrees to disagree. After, others will want to know what the hell is going on", "references": ["to make their counterclaims", "to listen to PersonX", "end the conversation", "avoid confrontation", "none"], "input": {"head": "PersonX agrees to disagree", "relation": "oWant"}}
{"generation": "PersonX finally worked. After, others will want to know what happened to him", "references": ["a summary of what they did", "none", "a phone call"], "input": {"head": "PersonX finally worked", "relation": "oWant"}}
{"generation": "PersonX puts the top. The effect on PersonX will be the same as the effect on Person X", "references": ["looks at what they did", "finishes the project", "rests", "none", "drinks"], "input": {"head": "PersonX puts the top", "relation": "xEffect"}}
{"generation": "PersonX doesn't have a lot of money. PersonX is a very good person", "references": ["poor", "needy", "broken", "broke"], "input": {"head": "PersonX does n't have a lot of money", "relation": "xAttr"}}
{"generation": "PersonX dyes PersonY's hair pink. PersonX did this to her hair", "references": ["to help someone out", "help persony because they cannot dye their own hair", "to help persony prepare for a party", "to fulfill their job as a stylist"], "input": {"head": "PersonX dyes PersonY's hair pink", "relation": "xIntent"}}
{"generation": "PersonX runs right. Before that, he's a little bit of a jerk", "references": ["PersonX listens to the coach talk about running styles"], "input": {"head": "PersonX runs right", "relation": "isAfter"}}
{"generation": "PersonX feels hopeless. The effect on PersonX will be felt by the player, and the player will feel", "references": ["Starts to loose sight of lifestyle", "stares blankly", "starts yelling for help", "thinks about suicide", "gets depressed and starts crying", "Feels down all the time"], "input": {"head": "PersonX feels hopeless", "relation": "xEffect"}}
{"generation": "PersonX calls the ___ together. PersonX is a member of the group, and the group is", "references": ["capable", "collaborative", "connected", "respected", "knowledgeable", "commanding"], "input": {"head": "PersonX calls the ___ together", "relation": "xAttr"}}
{"generation": "PersonX moves the car. Before that, he's in the middle of a fight with a", "references": ["PersonX blocks the neighbors driveway"], "input": {"head": "PersonX moves the car", "relation": "isAfter"}}
{"generation": "PersonX takes place on the day. After, others will want to know what happened to the other members of the group", "references": ["none"], "input": {"head": "PersonX takes place on the day", "relation": "oWant"}}
{"generation": "an animal kingdom contains a large number of species of animals that are not", "references": ["dog"], "input": {"head": "animal kingdom", "relation": "MadeUpOf"}}
{"generation": "PersonX prevents ___ in patients. The effect on others will be lessened if the patient is not a patient", "references": ["Patents stop bleeding", "felt pain", "saved from bleeding", "Patients groan in pain from the bleeding stopping"], "input": {"head": "PersonX prevents ___ in patients", "relation": "oEffect"}}
{"generation": "PersonX catches some rays. The effect on PersonX will be similar to that of a light source", "references": ["sad", "gains knowledge", "decides to swim", "gets a tan"], "input": {"head": "PersonX catches some rays", "relation": "xEffect"}}
{"generation": "PersonX gets a surprise. The effect on PersonX will be similar to the effect on Person X", "references": ["gasps", "is shocked", "excited", "jump in shock", "becomes happy", "smiles", "gets a gift"], "input": {"head": "PersonX gets a surprise", "relation": "xEffect"}}
{"generation": "PersonX finally worked up. After, others will want to know what the hell is going on", "references": ["to talk to PersonX", "none", "to ignore PersonX"], "input": {"head": "PersonX finally worked up", "relation": "oWant"}}
{"generation": "PersonX gets close. Before, PersonX needs to be able to see the person in question", "references": ["none", "to have a map", "to know where the end is", "to know where they are going"], "input": {"head": "PersonX gets close", "relation": "xNeed"}}
{"generation": "PersonX uses ___ regularly. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX uses ___ regularly", "relation": "oEffect"}}
{"generation": "PersonX gives PersonY a account. The effect on PersonX will be the same as PersonY's", "references": ["wonders what personY thinks", "gets commision", "hopes their understood", "gets paid"], "input": {"head": "PersonX gives PersonY a account", "relation": "xEffect"}}
{"generation": "PersonX touches PersonY's skin. PersonX did this to PersonY's skin", "references": ["to show affection", "to feel connected to someone.", "to feel the softness and warmth of persons skin"], "input": {"head": "PersonX touches PersonY's skin", "relation": "xIntent"}}
{"generation": "PersonX says PersonY nay. PersonX did this to me", "references": ["to give in."], "input": {"head": "PersonX says PersonY nay", "relation": "xIntent"}}
{"generation": "PersonX tans PersonY's hide. PersonX did this to me", "references": ["to hurt persony", "justice", "mad at person y"], "input": {"head": "PersonX tans PersonY's hide", "relation": "xIntent"}}
{"generation": "PersonX brings down the house. The effect on others will be similar to that of a normal attack", "references": ["none"], "input": {"head": "PersonX brings down the house", "relation": "oEffect"}}
{"generation": "PersonX gives PersonY a account. PersonX did this to get PersonY to sign up for the account", "references": ["to help the other person", "to explain to persony"], "input": {"head": "PersonX gives PersonY a account", "relation": "xIntent"}}
{"generation": "PersonX tries to keep it a secret. The effect on PersonX will be different depending on the type of person you are", "references": ["gets yelled at", "is anxious about overlooking people", "is flooded with questions", "struggles with it", "takes extra precaution", "breaks his silence"], "input": {"head": "PersonX tries to keep it a secret", "relation": "xEffect"}}
{"generation": "PersonX discerns the lord's ___ is filled by the power of the Lord", "references": ["cross", "bread", "wine"], "input": {"head": "PersonX discerns the lord 's ___", "relation": "isFilledBy"}}
{"generation": "PersonX leans PersonY's head back. PersonX did this to PersonY", "references": ["to administer cpr.", "to kiss person"], "input": {"head": "PersonX leans PersonY's head back", "relation": "xIntent"}}
{"generation": "PersonX dates for years. PersonX did this to make sure that the people who were interested in the", "references": ["not to commit", "to be in a relationship", "romance"], "input": {"head": "PersonX dates for years", "relation": "xIntent"}}
{"generation": "PersonX french kisses. Before, PersonX needs to be able to talk to her", "references": ["to be standing close to partner", "someone to kiss", "make a move", "Kiss girlfriend", "to be in relationship", "Get a girlfriend"], "input": {"head": "PersonX french kisses", "relation": "xNeed"}}
{"generation": "PersonX asks PersonY to sit down. As a result, others feel uncomfortable", "references": ["controlled", "friendly", "nice", "engaged in conversation"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "oReact"}}
{"generation": "PersonX explains the rules. After that, he explains that he's not a fan of the", "references": ["PersonX rolls the dice first"], "input": {"head": "PersonX explains the rules", "relation": "isBefore"}}
{"generation": "PersonX dyes PersonY's hair blue. After, others will want to know who you are", "references": ["to pay", "to thank person X", "to admire their new look", "none", "to see the results", "to say thank you"], "input": {"head": "PersonX dyes PersonY's hair blue", "relation": "oWant"}}
{"generation": "PersonX finds a good job. Before that, he's a good guy", "references": ["PersonX spends everyday searching for work"], "input": {"head": "PersonX finds a good job", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no money for lessons.", "Person X has too many things to do", "PersonX's mother told him that dance is a waste of time.", "Person X has a bad hip", "Theres no spots left in the class", "Dance class requires shoes PersonX can't afford.", "PersonX's parents will not pay for it.", "PersonX's dance teacher kicked him out of class.", "They can't afford the class fee."], "input": {"head": "PersonX takes dance", "relation": "HinderedBy"}}
{"generation": "PersonX pops PersonY's cherry. Before that, she's just a little bit more of a jerk", "references": ["PersonX starts dating PersonY"], "input": {"head": "PersonX pops PersonY's cherry", "relation": "isAfter"}}
{"generation": "PersonX takes ___ up on the offer. The effect on PersonX will be the same as the effect on PersonX", "references": ["they start to strain", "works with other person more", "gains something", "they feel butterflies in their stomach", "PersonX expresses their appreciation", "PersonX thanks them"], "input": {"head": "PersonX takes ___ up on the offer", "relation": "xEffect"}}
{"generation": "PersonX touches PersonY's shoulder. Before that, she's just a little bit more of a girl", "references": ["PersonX sneaks up on PersonY"], "input": {"head": "PersonX touches PersonY's shoulder", "relation": "isAfter"}}
{"generation": "PersonX seeks first the ___. PersonX did this to me", "references": ["to prioritize"], "input": {"head": "PersonX seeks first the ___", "relation": "xIntent"}}
{"generation": "PersonX saves PersonX's breath. Before, PersonX needs to be able to breathe", "references": ["none"], "input": {"head": "PersonX saves PersonX's breath", "relation": "xNeed"}}
{"generation": "PersonX recently graduated. PersonX will be a member of the team that will be working on", "references": ["capable", "accomplished", "ready to work", "intelligent"], "input": {"head": "PersonX recently graduated", "relation": "xReact"}}
{"generation": "PersonX makes PersonX's exit. After, others will want to know what happened to the other person", "references": ["to go home themself", "none", "to say goodbye"], "input": {"head": "PersonX makes PersonX's exit", "relation": "oWant"}}
{"generation": "PersonX grabs PersonX's chest. Before that, he grabs PersonX's chest", "references": ["PersonX begins feeling sharp pain in PersonX's chest"], "input": {"head": "PersonX grabs PersonX's chest", "relation": "isAfter"}}
{"generation": "PersonX becomes a pilot. The effect on PersonX will be the same as the effect on Person X", "references": ["flys around passengers", "Learns to fly", "piolts a plane", "gets hired by an airline", "goes into a plane", "Drives a plane", "sees the world"], "input": {"head": "PersonX becomes a pilot", "relation": "xEffect"}}
{"generation": "PersonX borrows the car. The effect on others will be similar to that of a car accident", "references": ["no effect", "none", "PersonY borrows his car to PersonX"], "input": {"head": "PersonX borrows the car", "relation": "oEffect"}}
{"generation": "PersonX changes PersonY life. After that, you can't change PersonX", "references": ["PersonX offers to help PersonY even more"], "input": {"head": "PersonX changes PersonY life", "relation": "isBefore"}}
{"generation": "PersonX pumps iron. PersonX will be able to use the iron to make a new iron", "references": ["physically spent but happy", "strong", "good-looking", "like he has accomplished something", "that he is stronger"], "input": {"head": "PersonX pumps iron", "relation": "xReact"}}
{"generation": "get up early. Before, PersonX needs to be able to get up early", "references": ["go to bed early", "get rooster", "go sleep early", "not go to bed late", "set alarm", "sleep early", "not stay up late", "set clock", "get to bed early", "set alarm clock", "ask spouse to wake", "ask to get up", "fix up alarm", "use alarm clock", "set alarm night before", "set alarm to wakeyou up"], "input": {"head": "get up early", "relation": "xNeed"}}
{"generation": "PersonX puts ___ in PersonX's purse. The effect on others will be similar to that of a normal purse", "references": ["none"], "input": {"head": "PersonX puts ___ in PersonX's purse", "relation": "oEffect"}}
{"generation": "PersonX walks PersonY to PersonX's car. After, PersonX will want to talk to PersonX", "references": ["To go for a ride", "close door", "to go in house", "to take person Y somewhere"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "xWant"}}
{"generation": "PersonX wants ___ badly. Before, PersonX needs to be able to talk to people", "references": ["none"], "input": {"head": "PersonX wants ___ badly", "relation": "xNeed"}}
{"generation": "PersonX starts with a clean sheet. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX starts with a clean sheet", "relation": "oWant"}}
{"generation": "PersonX gets more exercise. Before that, he's got a lot of muscle", "references": ["PersonX is eating healthier"], "input": {"head": "PersonX gets more exercise", "relation": "isAfter"}}
{"generation": "PersonX enters an art contest. PersonX is a character from the anime", "references": ["daring", "dedicated", "competitive", "surprised", "ambitious", "entertainment", "artistic", "creative"], "input": {"head": "PersonX enters an art contest", "relation": "xAttr"}}
{"generation": "PersonX opens the doors. As a result, others feel the same way", "references": ["appreciative", "thankful", "ready to work"], "input": {"head": "PersonX opens the doors", "relation": "oReact"}}
{"generation": "PersonX throws the baby out with the bathwater. PersonX did this to the baby, and then the baby was thrown out", "references": ["none"], "input": {"head": "PersonX throws the baby out with the bathwater", "relation": "xIntent"}}
{"generation": "PersonX needs a good grade. After that, he'll be able to get a good grade", "references": ["PersonX receives a good grade"], "input": {"head": "PersonX needs a good grade", "relation": "isBefore"}}
{"generation": "PersonX takes PersonY's watch off. Before, PersonX needs to be able to see PersonY's watch", "references": ["to be friends with Person Y", "reach for the watch", "Realizes it don't work.", "to decide they want the watch", "approach the person", "Looks for his tools for it."], "input": {"head": "PersonX takes PersonY's watch off", "relation": "xNeed"}}
{"generation": "PersonX sentences PersonY. As a result, others feel that PersonX is a better fit for PersonY", "references": ["sad", "regretful", "guilty"], "input": {"head": "PersonX sentences PersonY", "relation": "oReact"}}
{"generation": "PersonX spends hours ___. Before, PersonX needs to be able to use the \"X\" symbol to", "references": ["none", "to have the time to invest.", "to have an interest in something."], "input": {"head": "PersonX spends hours ___", "relation": "xNeed"}}
{"generation": "merchant can be found in the following locations:\n\nThe", "references": ["sell goods", "selling things to people", "selling things", "sell things", "selling", "get paid", "shop for", "exchange money for goods", "carry credit", "buying and selling goods", "trading goods", "obtaining merchandise", "ship order", "selling products", "distributing products", "offer deal"], "input": {"head": "merchant", "relation": "CapableOf"}}
{"generation": "PersonX watches old movies. After, others will want to watch them", "references": ["none"], "input": {"head": "PersonX watches old movies", "relation": "oWant"}}
{"generation": "a girlfriend can be used for a variety of purposes, including:\n\n\u2022", "references": ["to love", "be next to", "fake a phone call", "talk to", "ride on a bicycle built for two", "excuse themselves out of an awkward conversation", "get married to", "have someone to make dinner", "help do volunteer work at Convoy of Hope", "give the ring to", "take on a date", "care for", "hang out with"], "input": {"head": "girlfriend", "relation": "ObjectUse"}}
{"generation": "PersonX hears a phone ring. Before, PersonX needs to talk to the person who is calling", "references": ["to have a phone", "none", "to have phone on"], "input": {"head": "PersonX hears a phone ring", "relation": "xNeed"}}
{"generation": "PersonX starts with a clean sheet. The effect on PersonX will be similar to the effect of a normal sheet", "references": ["none", "takes responsibility", "does the right thing"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xEffect"}}
{"generation": "PersonX throws ___ in the way. After, PersonX will want to know what the hell is going on", "references": ["to hinder others", "To show anger", "to remain powerful", "To display frustration", "to prevent cars from meeting an accident", "to stop the car"], "input": {"head": "PersonX throws ___ in the way", "relation": "xWant"}}
{"generation": "You are likely to find a croquet game in a lot of places", "references": ["lawn"], "input": {"head": "croquet game", "relation": "AtLocation"}}
{"generation": "PersonX prevents the ___ from taking. PersonX will be able to use the ___'s abilities to attack,", "references": ["happy", "honorable"], "input": {"head": "PersonX prevents the ___ from taking", "relation": "xReact"}}
{"generation": "PersonX breaks free. After, others will want to know what happened to him", "references": ["none"], "input": {"head": "PersonX breaks free", "relation": "oWant"}}
{"generation": "PersonX divides ___ into groups. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX divides ___ into groups", "relation": "oEffect"}}
{"generation": "PersonX catches a cold. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX catches a cold", "relation": "xIntent"}}
{"generation": "PersonX practices really hard. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX practices really hard", "relation": "oWant"}}
{"generation": "You are likely to find an old gum in a drawer or a drawer-sized bag", "references": ["sidewalk"], "input": {"head": "old gum", "relation": "AtLocation"}}
{"generation": "PersonX fills PersonY's lungs. PersonX did this to PersonY, and then PersonY did this to", "references": ["person is not breathing"], "input": {"head": "PersonX fills PersonY's lungs", "relation": "xIntent"}}
{"generation": "PersonX packs my bags. PersonX will be my new friend", "references": ["accomplished", "generous", "helpful", "kind", "satisfied"], "input": {"head": "PersonX packs my bags", "relation": "xReact"}}
{"generation": "PersonX rents an apartment. Before that, he's a regular at the bar", "references": ["PersonX saves up money"], "input": {"head": "PersonX rents an apartment", "relation": "isAfter"}}
{"generation": "PersonX runs the gauntlet. Before that, he's a man who's been in the business", "references": ["PersonX wrestles 10 opponents one right after the other"], "input": {"head": "PersonX runs the gauntlet", "relation": "isAfter"}}
{"generation": "PersonX starts working out. After, PersonX will want to know if you're a good person", "references": ["Enjoyed", "Happy", "hydrate", "shower", "to be more healthy", "to gain more muscle"], "input": {"head": "PersonX starts working out", "relation": "xWant"}}
{"generation": "PersonX falls into the wrong hands. After, PersonX will want to kill PersonX", "references": ["to separate themselves from bad people", "to get out of a bad situation"], "input": {"head": "PersonX falls into the wrong hands", "relation": "xWant"}}
{"generation": "each person in world can be a good person", "references": ["hope for peace"], "input": {"head": "each person in world", "relation": "CapableOf"}}
{"generation": "PersonX takes PersonX's stand. PersonX is a member of the \"People's Alliance\" and", "references": ["principled", "resolute", "brave", "just"], "input": {"head": "PersonX takes PersonX's stand", "relation": "xAttr"}}
{"generation": "PersonX is hard to find. Before that, he was a member of the team that won the", "references": ["PersonX goes into the forest on a hike"], "input": {"head": "PersonX is hard to find", "relation": "isAfter"}}
{"generation": "PersonX is on PersonY's school's basketball team. PersonX did this to her in the past, but she's not sure", "references": ["to be a part of it", "none", "to be a basket ball player"], "input": {"head": "PersonX is on PersonY's school 's basketball team", "relation": "xIntent"}}
{"generation": "a lie can be used for a number of reasons", "references": ["destroy trust", "protect identity", "close chapter on good will", "reveal more than truth", "wedge between friends", "getting want", "getting out of trouble", "hurt reputation"], "input": {"head": "lie", "relation": "ObjectUse"}}
{"generation": "PersonX spends ___ working. Before, PersonX needs to be able to work on a project", "references": ["get a job", "to need the money", "work hard at job", "none", "to have the work"], "input": {"head": "PersonX spends ___ working", "relation": "xNeed"}}
{"generation": "PersonX goes ___ in the lake. PersonX is a little bit of a jerk, but he's", "references": ["free spirited", "diving", "athletic", "exploring"], "input": {"head": "PersonX goes ___ in the lake", "relation": "xAttr"}}
{"generation": "PersonX sees PersonY naked. After, others will want to see her naked", "references": ["to have sex", "to be a turn on", "to tell PersonX to leave", "to cover themselves", "to accept PersonX", "to receive an apology"], "input": {"head": "PersonX sees PersonY naked", "relation": "oWant"}}
{"generation": "PersonX prevents PersonY from coming. The effect on others will be reversed", "references": ["person y stays home", "finds out", "person y sleeps", "Cries", "forces their way into the event", "Yells"], "input": {"head": "PersonX prevents PersonY from coming", "relation": "oEffect"}}
{"generation": "PersonX wipes the slate clean. After, others will want to know what happened to the other members of the group", "references": ["none", "to listen to PersonX", "to apologize to PersonX"], "input": {"head": "PersonX wipes the slate clean", "relation": "oWant"}}
{"generation": "PersonX unlocks the door. Before, PersonX needs to be in the same room as the player", "references": ["to touch the door", "to go to the door", "put the key in lock", "take key from pocket"], "input": {"head": "PersonX unlocks the door", "relation": "xNeed"}}
{"generation": "You are likely to find a hairdressing salon in a city that has a lot of hair stylists", "references": ["mall", "town", "strip mall"], "input": {"head": "hairdressing salon", "relation": "AtLocation"}}
{"generation": "PersonX elects ___ to office. The effect on others will be to make them more likely to vote for you", "references": ["none"], "input": {"head": "PersonX elects ___ to office", "relation": "oEffect"}}
{"generation": "PersonX tells ___ that PersonY had cancer. The effect on PersonX will be felt by PersonY", "references": ["holds hands", "none", "cries"], "input": {"head": "PersonX tells ___ that PersonY had cancer", "relation": "xEffect"}}
{"generation": "PersonX replaces the old one. PersonX is a new feature that allows you to create a new", "references": ["rich", "efficient", "successful", "ready", "practical", "prepared"], "input": {"head": "PersonX replaces the old one", "relation": "xAttr"}}
{"generation": "PersonX dyes PersonX's hair pink. After, others will want to know who you are", "references": ["to say thanks to PersonX", "to thank PersonX", "to offer PersonX other products and services", "to cooperate with PersonX", "none"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "oWant"}}
{"generation": "PersonX beats around the bush. After that, he's back to his normal self", "references": ["PersonX asks for help"], "input": {"head": "PersonX beats around the bush", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not have a stable life to provide for a child.", "PersonX can't get pregnant.", "PersonX's partner has demanded a boy.", "PersonX has fertility issues.", "PersonX is having a boy.", "X has passed menapause.", "X is infertile.", "PersonX has had their tubes tied by a doctor."], "input": {"head": "PersonX has a baby girl", "relation": "HinderedBy"}}
{"generation": "You are likely to find an indian ocean in an ocean of water", "references": ["earth", "east", "southern hemisphere", "asia", "india", "near india"], "input": {"head": "indian ocean", "relation": "AtLocation"}}
{"generation": "PersonX is much cheaper. After, PersonX will want to buy a lot of things, and PersonX will", "references": ["to earn more money", "go to a different store", "to buy something affordable", "want to earn", "To avoid deby", "hardwork", "to save money", "to count their money", "to find clients", "To be frugal"], "input": {"head": "PersonX is much cheaper", "relation": "xWant"}}
{"generation": "PersonX sees PersonX's wife. PersonX did this to her, and she's not happy", "references": ["to go home.", "to share affection."], "input": {"head": "PersonX sees PersonX's wife", "relation": "xIntent"}}
{"generation": "PersonX hands PersonY a glass. After that, PersonX hands PersonY a glass", "references": ["PersonX drinks from PersonX's glass"], "input": {"head": "PersonX hands PersonY a glass", "relation": "isBefore"}}
{"generation": "PersonX takes PersonY's outside. After, PersonX will want to go to the other side of the room and get", "references": ["to spend time outside", "to mow the yard", "to play outside", "to return something"], "input": {"head": "PersonX takes PersonY's outside", "relation": "xWant"}}
{"generation": "While have physical exam, you would have to take a physical exam to get a job", "references": ["get weighed on scales", "check on body's status", "disrobe", "health problem discovered", "take off shirt", "pay doctor's bill", "taking off clothes", "draw blood", "blood taken", "weighed", "drop pants", "physical exursion", "embarassment", "urinating in cup", "pain", "visit doctor", "finfing disease", "reflex test", "remove clothing", "doctor gives bad news", "say aaaaah"], "input": {"head": "have physical exam", "relation": "HasSubEvent"}}
{"generation": "PersonX endures ___ and free. After, PersonX will want to know who you are", "references": ["He got a many things are free", "to push through it", "to be strong", "He is a slave"], "input": {"head": "PersonX endures ___ and free", "relation": "xWant"}}
{"generation": "PersonX sees a snake. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sees a snake", "relation": "oEffect"}}
{"generation": "a fan clothing can be used for a variety of purposes", "references": ["get free concert tickets", "complete an outfit", "wear to concerts", "tell people you went to a concert", "show your support", "get attention", "to show support for your team", "clean the car with", "bunch up to use as a pillow", "wear at a concert", "show your favorites", "have for memorabilia", "Wear to game"], "input": {"head": "fan clothing", "relation": "ObjectUse"}}
{"generation": "PersonX tears PersonY's eyes away. After that, he's gone", "references": ["PersonX is later arrested", "PersonX covers PersonY's eyes so they cannot see"], "input": {"head": "PersonX tears PersonY's eyes away", "relation": "isBefore"}}
{"generation": "PersonX breaks the news. PersonX will be the one to tell the truth", "references": ["sad", "informative", "relieved"], "input": {"head": "PersonX breaks the news", "relation": "xReact"}}
{"generation": "PersonX replaces the tire. After that, the tire will be replaced with a new one", "references": ["PersonX recycles the old tire"], "input": {"head": "PersonX replaces the tire", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's car broke down.", "PersonX's plane is delayed.", "The road ahead is closed by a rockfall.", "The airport has been closed for bad weather.", "PersonX is stuck at work working on a project.", "PersonX is stuck in traffic."], "input": {"head": "PersonX arrives shortly", "relation": "HinderedBy"}}
{"generation": "PersonX gets messy. PersonX is a very good friend of mine, and I'm", "references": ["sloppy", "lazy", "clumsy", "messy", "careless", "filthy"], "input": {"head": "PersonX gets messy", "relation": "xAttr"}}
{"generation": "PersonX feels lucky. After that, he's a bit of a jerk", "references": ["PersonX does not win"], "input": {"head": "PersonX feels lucky", "relation": "isBefore"}}
{"generation": "PersonX makes ___ that day. PersonX will be the one who gets the most votes", "references": ["happy", "accomplished", "surprised", "satisfied"], "input": {"head": "PersonX makes ___ that day", "relation": "xReact"}}
{"generation": "PersonX gives the ___ PersonY's name. The effect on PersonX will be the same as the effect on PersonY", "references": ["receives complaints for what he did", "none", "receives praise for what he did"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "xEffect"}}
{"generation": "PersonX measures the ___ directly. PersonX is the most common way to measure the ___", "references": ["careful", "correct", "exact", "smart"], "input": {"head": "PersonX measures the ___ directly", "relation": "xAttr"}}
{"generation": "PersonX evaluates the patient's ___. After, PersonX will want to know if the patient is in the same class as", "references": ["relay the results of the evaluation to others", "to prescribe medicine", "make plans to address areas of concern", "to educate the patient"], "input": {"head": "PersonX evaluates the patient 's ___", "relation": "xWant"}}
{"generation": "PersonX enjoys PersonY's class. After that, he's a bit more of a jerk", "references": ["PersonX leaves PersonY's class"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "isBefore"}}
{"generation": "PersonX touches PersonY's skin. As a result, others feel the same way", "references": ["arroused", "also aroused by the touch", "appreciated and loved."], "input": {"head": "PersonX touches PersonY's skin", "relation": "oReact"}}
{"generation": "PersonX spends a lot of money. The effect on others will be minimal", "references": ["they give him hours", "they make money off of him", "none"], "input": {"head": "PersonX spends a lot of money", "relation": "oEffect"}}
{"generation": "PersonX is at the bar with friends. PersonX did this to me", "references": ["social", "to celebrate", "hang out", "wants to share in the revelry"], "input": {"head": "PersonX is at the bar with friends", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's brother won't answer the phone.", "PersonX lost his phone and can't call.", "PersonX doesn't speak the language of the brother.", "PersonX is painfully shy.", "PersonX has no money to go out.", "PersonX is busy."], "input": {"head": "PersonX asks PersonX's brother", "relation": "HinderedBy"}}
{"generation": "PersonX makes perfect sense. After, PersonX will want to know what the hell is going on", "references": ["He keeps talking.", "He likes to impress her.", "to smile", "to express their ideas", "to get a good grade", "to think clearly"], "input": {"head": "PersonX makes perfect sense", "relation": "xWant"}}
{"generation": "PersonX links together ___. PersonX did this to make it easier to find the person you want to", "references": ["to be great comunication country", "subject"], "input": {"head": "PersonX links together ___", "relation": "xIntent"}}
{"generation": "PersonX drives ___ to the beach. PersonX is a very good friend of mine", "references": ["adept", "road-worthy", "generous", "helpful", "kind", "steady at the wheel", "intent", "responsible"], "input": {"head": "PersonX drives ___ to the beach", "relation": "xAttr"}}
{"generation": "PersonX charges PersonY's phone. After that, PersonY calls PersonX", "references": ["PersonX gets a lot thanks"], "input": {"head": "PersonX charges PersonY's phone", "relation": "isBefore"}}
{"generation": "PersonX writes ___ using. After, PersonX will want to use the same name as the user", "references": ["send writing to publishers", "share his writing with friends", "to have the writing typed out", "to make copies of what they wrote"], "input": {"head": "PersonX writes ___ using", "relation": "xWant"}}
{"generation": "PersonX has a new car. Before, PersonX needs to get a car from a dealership", "references": ["sell old vehicle", "go to a salesman"], "input": {"head": "PersonX has a new car", "relation": "xNeed"}}
{"generation": "PersonX takes place over a period. After, PersonX will want to know what the next step is", "references": ["to change", "take a break", "do better", "make plans"], "input": {"head": "PersonX takes place over a period", "relation": "xWant"}}
{"generation": "PersonX develops web presence. After, others will want to know what you're up to", "references": ["to learn what they are about", "to do what they do", "none"], "input": {"head": "PersonX develops web presence", "relation": "oWant"}}
{"generation": "PersonX exercises every ___. As a result, others feel that the \"best\" exercises are the ones that", "references": ["none"], "input": {"head": "PersonX exercises every ___", "relation": "oReact"}}
{"generation": "PersonX looks like was going. As a result, others feel that he is a bit too much of a jerk", "references": ["none"], "input": {"head": "PersonX looks like was going", "relation": "oReact"}}
{"generation": "PersonX blows this popsicle stand. The effect on PersonX will be similar to the one on the other two popsicles", "references": ["none"], "input": {"head": "PersonX blows this popsicle stand", "relation": "xEffect"}}
{"generation": "PersonX loses PersonX's ___ in the war. After, others will want to kill PersonX", "references": ["none"], "input": {"head": "PersonX loses PersonX's ___ in the war", "relation": "oWant"}}
{"generation": "PersonX breaks wind. The effect on PersonX will be reversed", "references": ["none", "He got relieved", "He polluted the air."], "input": {"head": "PersonX breaks wind", "relation": "xEffect"}}
{"generation": "PersonX mentions another ___. The effect on others will be similar to that of the effect of the effect of", "references": ["none"], "input": {"head": "PersonX mentions another ___", "relation": "oEffect"}}
{"generation": "PersonX practices hard ___. Before, PersonX needs to be able to use the same data structure over and", "references": ["to want to improve their skills", "to get the required equipment", "to come up with a plan for their practice", "to have a good attitude about practice", "to plan a schedule", "to be motivated"], "input": {"head": "PersonX practices hard ___", "relation": "xNeed"}}
{"generation": "PersonX twists PersonY's arm. After, others will want to see what happens to the person who is the most", "references": ["He holds his bloody nose.", "He runs away.", "to yell at PersonX", "to hit Person X", "to yell", "to run away from PersonX"], "input": {"head": "PersonX twists PersonY's arm", "relation": "oWant"}}
{"generation": "PersonX takes PersonY's girlfriend out to dinner. After that, she's back at the bar", "references": ["PersonX takes PersonY's girlfriend home", "PersonX eats dinner with PersonY's girlfriend", "PersonX sleeps with PersonY's girlfriend"], "input": {"head": "PersonX takes PersonY's girlfriend out to dinner", "relation": "isBefore"}}
{"generation": "You are likely to find a kosher restaurant in a city that is not a kosher restaurant", "references": ["new york city", "jewish neighborhood", "seattle", "city", "new york", "big city", "jewish neighborhoods", "jerusalem"], "input": {"head": "kosher restaurant", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX skipped going to the gym", "PersonX is weak", "PersonY administered anti-inflammatory meds to PersonX.", "PersonX wasn't stung or bitten by anything.", "PersonX isn't allergic.", "PersonY is applying compression to PersonX."], "input": {"head": "PersonX starts to swell", "relation": "HinderedBy"}}
{"generation": "PersonX pats PersonY's head. PersonX did this to PersonY's head", "references": ["to be nice to person", "to show affection to person", "to be kind", "to comfort person"], "input": {"head": "PersonX pats PersonY's head", "relation": "xIntent"}}
{"generation": "PersonX sees all the animals. After that, he's going to have to find a way to", "references": ["PersonX takes pictures of the lions", "PersonX takes a bunch of pictures", "PersonX buys a season zoo pass"], "input": {"head": "PersonX sees all the animals", "relation": "isBefore"}}
{"generation": "PersonX never been to one. PersonX is a very good friend of mine, and I've", "references": ["Noob", "curious", "Fresh", "inexperienced"], "input": {"head": "PersonX never been to one", "relation": "xAttr"}}
{"generation": "PersonX opens doors. PersonX will be able to talk to you", "references": ["good", "polite", "happy, caring towards others", "happy"], "input": {"head": "PersonX opens doors", "relation": "xReact"}}
{"generation": "PersonX fills PersonX's ___ with air is filled by the same air that is filled by the other person", "references": ["balloon", "tires", "tire", "raft", "mattress", "inflatable pool"], "input": {"head": "PersonX fills PersonX's ___ with air", "relation": "isFilledBy"}}
{"generation": "PersonX drives anyway. After, PersonX will want to know what you're doing", "references": ["to get out of the car", "to get away from something", "turn off car", "to get to a destination", "to go somewhere", "arrive at location"], "input": {"head": "PersonX drives anyway", "relation": "xWant"}}
{"generation": "PersonX starts to swell. Before that, he's been a bit of a jerk", "references": ["PersonX hits PersonX head on the door"], "input": {"head": "PersonX starts to swell", "relation": "isAfter"}}
{"generation": "You are likely to find a gras in a lot of places", "references": ["park", "lawn"], "input": {"head": "gras", "relation": "AtLocation"}}
{"generation": "PersonX catches the bus. PersonX did this to me", "references": ["on time", "on the move", "moving", "to save gas", "go somewhere"], "input": {"head": "PersonX catches the bus", "relation": "xIntent"}}
{"generation": "PersonX cleans PersonX's bedroom. PersonX will be able to see PersonX's bedroom", "references": ["happy that it's done", "satisfield", "tired", "proud"], "input": {"head": "PersonX cleans PersonX's bedroom", "relation": "xReact"}}
{"generation": "PersonX talks out of turn. PersonX will be the one who gets the most points", "references": ["happy", "apologetic", "assertive"], "input": {"head": "PersonX talks out of turn", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can't see past the fake person.", "PersonX is too scarred to speak up.", "PersonX is a sucker.", "PersonX is promised the incident will never happen again.", "PersonX cannot afford to quit their job now.", "PersonX needs the money."], "input": {"head": "PersonX decides enough was enough", "relation": "HinderedBy"}}
{"generation": "PersonX has an amazing time. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX has an amazing time", "relation": "oReact"}}
{"generation": "PersonX wears a cast. PersonX is a character who is a member of the team", "references": ["hurt", "Injured", "injured", "Limited", "protective"], "input": {"head": "PersonX wears a cast", "relation": "xAttr"}}
{"generation": "PersonX buys PersonX's own house. Before, PersonX needs to buy PersonX's own house", "references": ["save money", "look at houses", "to move in", "to save money", "to get a mortgage", "to find a house"], "input": {"head": "PersonX buys PersonX's own house", "relation": "xNeed"}}
{"generation": "PersonX meets PersonY husband. Before, PersonX needs to be able to talk to PersonY, but Person", "references": ["to shake hands", "be friends with PersonY", "shake hands", "meet the wife", "approach the husband", "to introduce themself"], "input": {"head": "PersonX meets PersonY husband", "relation": "xNeed"}}
{"generation": "PersonX asks PersonY to read. As a result, others feel that PersonY is too much of a jerk to", "references": ["watched", "enjoyment.", "none"], "input": {"head": "PersonX asks PersonY to read", "relation": "oReact"}}
{"generation": "PersonX puts ___ in PersonY's backpack. PersonX is the one who gets the backpack", "references": ["concerned", "Caring", "Loving", "organized", "prepared"], "input": {"head": "PersonX puts ___ in PersonY's backpack", "relation": "xAttr"}}
{"generation": "PersonX makes PersonY well. After that, I'm going to have to figure out how to", "references": ["PersonX receives many awards", "PersonX asks to see the next patient"], "input": {"head": "PersonX makes PersonY well", "relation": "isBefore"}}
{"generation": "PersonX wants to learn how to play the piano. PersonX is a very good pianist, and he's a", "references": ["open-minded", "curious", "ambitious", "musical", "adventurous"], "input": {"head": "PersonX wants to learn how to play the piano", "relation": "xAttr"}}
{"generation": "PersonX visits PersonX's mother's ___. PersonX did this to her, and she was very upset", "references": ["to see someone or something", "to mourn them", "to show his affection for others"], "input": {"head": "PersonX visits PersonX's mother 's ___", "relation": "xIntent"}}
{"generation": "PersonX makes that mistake again. The effect on PersonX will be similar to the one that occurs when you use the", "references": ["becomes more cautious", "lose confident", "changes course", "has not learned", "tries to be less clumsy", "get bad performance review"], "input": {"head": "PersonX makes that mistake again", "relation": "xEffect"}}
{"generation": "PersonX gets nervous. Before that, he's just a normal guy", "references": ["PersonX gets up podium"], "input": {"head": "PersonX gets nervous", "relation": "isAfter"}}
{"generation": "PersonX invites ___ over to play. As a result, others feel like they're being treated unfairly", "references": ["none", "excited", "grateful"], "input": {"head": "PersonX invites ___ over to play", "relation": "oReact"}}
{"generation": "PersonX leaves PersonY ___ alone. As a result, others feel that they are being treated unfairly", "references": ["calm", "forgotten"], "input": {"head": "PersonX leaves PersonY ___ alone", "relation": "oReact"}}
{"generation": "PersonX saves PersonX's ___ from PersonX's sins. The effect on PersonX will be the same as PersonX's", "references": ["none", "gets away with guilty", "avoids punishment"], "input": {"head": "PersonX saves PersonX's ___ from PersonX's sins", "relation": "xEffect"}}
{"generation": "PersonX increases PersonY's knowledge. The effect on PersonX will be applied to PersonY's knowledge", "references": ["is hugged", "thinks about ways to explain ideas to PersonY", "is thanked", "forms opinion of PersonY competence"], "input": {"head": "PersonX increases PersonY's knowledge", "relation": "xEffect"}}
{"generation": "PersonX protects ___ from harm. After, PersonX will want to know what you're doing", "references": ["to make sure they are ok", "to find out if the dog is ok", "to check up on the children", "to look around"], "input": {"head": "PersonX protects ___ from harm", "relation": "xWant"}}
{"generation": "PersonX graduates ___ at the university. PersonX will be a part of the university's student body", "references": ["happy", "relieved", "excited about the future"], "input": {"head": "PersonX graduates ___ at the university", "relation": "xReact"}}
{"generation": "PersonX gets PersonY's something special. PersonX will be able to use the same abilities as PersonY,", "references": ["happy", "giving", "good about themselves", "grateful"], "input": {"head": "PersonX gets PersonY's something special", "relation": "xReact"}}
{"generation": "PersonX practices for weeks. After that, he's been working on the game for a while", "references": ["PersonX plays in a recital"], "input": {"head": "PersonX practices for weeks", "relation": "isBefore"}}
{"generation": "You are likely to find a spanish restaurant in a city that is not a city of spanish restaurants", "references": ["california", "rice", "nice part of town", "texas", "large city", "new york", "most cities", "spain", "place where spanish people live"], "input": {"head": "spanish restaurant", "relation": "AtLocation"}}
{"generation": "PersonX jumps out at PersonY. Before, PersonX needs to be able to get to PersonY, but Person", "references": ["to decide to scare PersonY", "to see y", "to stay quiet", "to plan the jump", "to hide from PersonY", "to see PersonY", "to get in a position of jumping"], "input": {"head": "PersonX jumps out at PersonY", "relation": "xNeed"}}
{"generation": "PersonX throws ___ in the way. Before, PersonX needs to be able to use the \"I\" word to", "references": ["To apply force", "To fling it", "to pick up roadbloacks", "to walk towards roadside", "none"], "input": {"head": "PersonX throws ___ in the way", "relation": "xNeed"}}
{"generation": "PersonX feels helpless. After, PersonX will want to kill you", "references": ["To change his situation", "to try to do something to fix the situation", "to give up", "To feel empowered"], "input": {"head": "PersonX feels helpless", "relation": "xWant"}}
{"generation": "PersonX finishes PersonY's meal. As a result, others feel that PersonY is a better person than PersonX", "references": ["at least their meal did not go to waste.", "none", "helpful or sad, it depends on the context"], "input": {"head": "PersonX finishes PersonY's meal", "relation": "oReact"}}
{"generation": "PersonX wants PersonY to come. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX wants PersonY to come", "relation": "oEffect"}}
{"generation": "PersonX takes PersonY place. PersonX did this to me, and I'm not sure if it's", "references": ["because person is absent", "his friend to stay home where it is safe", "to spend time with them", "to help them"], "input": {"head": "PersonX takes PersonY place", "relation": "xIntent"}}
{"generation": "PersonX files a report. After, PersonX will want to see the file name of the file", "references": ["to hand in a report", "to read feedback", "to make another report", "to get updates", "to read updates", "to make corrections"], "input": {"head": "PersonX files a report", "relation": "xWant"}}
{"generation": "PersonX stops kissing PersonY. Before that, PersonX says, \"I'm not going to", "references": ["PersonX sees PersonY and kisses them"], "input": {"head": "PersonX stops kissing PersonY", "relation": "isAfter"}}
{"generation": "PersonX calls ___ immediately. PersonX will be notified of the call and will respond with a message", "references": ["accomplished", "relieved.", "relieved", "helpful"], "input": {"head": "PersonX calls ___ immediately", "relation": "xReact"}}
{"generation": "PersonX walks PersonY. Before, PersonX needs to be able to talk to PersonY", "references": ["to get dressed", "get person Y", "to ask PersonY if they'd like to go for a walk", "to help PersonY up", "to put shoes on", "be near person Y"], "input": {"head": "PersonX walks PersonY", "relation": "xNeed"}}
{"generation": "a sauce packets can be used for a variety of purposes, including:\n\n-", "references": ["put onto the meals", "make pepper spray", "squirt in the eye of an attaching person", "put in glove box", "add flavor to a dish", "Flavor food", "place on a chair for a prank", "spray into an intruders eye", "mix together and create a new sauce"], "input": {"head": "sauce packets", "relation": "ObjectUse"}}
{"generation": "PersonX knows much about PersonY. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX knows much about PersonY", "relation": "xIntent"}}
{"generation": "PersonX spends PersonX's summer. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX spends PersonX's summer", "relation": "oWant"}}
{"generation": "PersonX walks to PersonY's car. PersonX did this to PersonY's car", "references": ["to make sure someone reached their car safely", "to reach the mode of transportation", "to get a ride with person.", "to travel somewhere quickly", "to get into the car.", "person to drive home safely."], "input": {"head": "PersonX walks to PersonY's car", "relation": "xIntent"}}
{"generation": "PersonX takes it everywhere. After, PersonX will want to know what's going on in the world", "references": ["to return something", "stops taking it everywhere", "to hold onto it", "to use something", "puts down it", "to keep track of it"], "input": {"head": "PersonX takes it everywhere", "relation": "xWant"}}
{"generation": "PersonX smells bad. After that, he's a little more relaxed", "references": ["PersonX takes a shower"], "input": {"head": "PersonX smells bad", "relation": "isBefore"}}
{"generation": "PersonX argues with PersonX's boyfriend. PersonX is upset that PersonX is not a good person", "references": ["angry", "Loud", "Heated", "petty"], "input": {"head": "PersonX argues with PersonX's boyfriend", "relation": "xAttr"}}
{"generation": "PersonX sits next to PersonY in class. The effect on PersonX will be the same as the effect on PersonY", "references": ["person x laughs", "person x talks to person y", "speaks", "becomes bored", "turns head", "listens"], "input": {"head": "PersonX sits next to PersonY in class", "relation": "xEffect"}}
{"generation": "PersonX walks barefoot. PersonX will be able to walk with the same speed as Person X", "references": ["connected to the earth", "the freedom of not wearing any footware", "content", "relief"], "input": {"head": "PersonX walks barefoot", "relation": "xReact"}}
{"generation": "an underground room can be used for a variety of purposes", "references": ["house arcade machines", "keep slave", "hide in during a tornado", "hold the family during wartime", "develop photographs", "make your art", "get into", "use as storage", "play instruments", "hide things in", "keep a hostage in", "keep wine celler", "go in during a tornado."], "input": {"head": "underground room", "relation": "ObjectUse"}}
{"generation": "PersonX thanks ___ for PersonY's comments. PersonX is a member of the community of people who are interested", "references": ["appreciative", "attentive", "grateful", "thoughtful", "kind"], "input": {"head": "PersonX thanks ___ for PersonY's comments", "relation": "xAttr"}}
{"generation": "PersonX has trouble falling asleep. PersonX did this to her, and she's been doing it for a", "references": ["none"], "input": {"head": "PersonX has trouble falling asleep", "relation": "xIntent"}}
{"generation": "PersonX wants to save money. PersonX did this to save money", "references": ["extra money", "to have fun in the future"], "input": {"head": "PersonX wants to save money", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX was raised to believe certain things.", "PersonX doesn't understand their view", "PersonX feels personally offended by PersonY.", "PersonX is very close minded.", "PersonX's religious beliefs conflict with PersonY's view", "PersonX needs the view explained better to them"], "input": {"head": "PersonX takes PersonY view", "relation": "HinderedBy"}}
{"generation": "PersonX gets PersonY's share. PersonX is the only one who can get PersonY's share", "references": ["pleased", "greedy", "a theif", "satisfied"], "input": {"head": "PersonX gets PersonY's share", "relation": "xAttr"}}
{"generation": "a theif can be used for the following purposes:\n\n1", "references": ["take money from bank", "case jewelry store"], "input": {"head": "theif", "relation": "ObjectUse"}}
{"generation": "PersonX throws money away. The effect on PersonX will be the same as the effect on Person X", "references": ["the person now is short on cash", "loses his life's savings", "The person now has little money left to pay the bills", "the person may have to borrow money", "is called by the bank"], "input": {"head": "PersonX throws money away", "relation": "xEffect"}}
{"generation": "PersonX is ready to go home. PersonX will be able to go home and get a new job", "references": ["happy to be gone", "tired", "to go to sleep", "satisfied"], "input": {"head": "PersonX is ready to go home", "relation": "xReact"}}
{"generation": "PersonX studies for a quiz. Before, PersonX needs to know how to use the quiz", "references": ["open book or notes", "Find out a calm and quite place", "get learning materials for the quiz", "gather materials"], "input": {"head": "PersonX studies for a quiz", "relation": "xNeed"}}
{"generation": "PersonX uses ___ as a means. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX uses ___ as a means", "relation": "oReact"}}
{"generation": "You are likely to find a magic in an item that you can use to make it more useful", "references": ["air", "coven"], "input": {"head": "magic", "relation": "AtLocation"}}
{"generation": "PersonX loves cake. After, PersonX will want to make a cake for her", "references": ["to buy a cake.", "to get a cake", "to eat more cake", "to eat a cake.", "to buy cake", "to eat the cake"], "input": {"head": "PersonX loves cake", "relation": "xWant"}}
{"generation": "PersonX puts ___ all together. The effect on PersonX will be the same as the effect on PersonX", "references": ["has completed a projected", "light bulb goes off over personX's head", "Gets offered to put things together for money", "is defeated", "Receives praise", "furrows brows"], "input": {"head": "PersonX puts ___ all together", "relation": "xEffect"}}
{"generation": "PersonX finally got home. After, PersonX will want to know what's going on with the other members of", "references": ["to sleep", "get something to eat"], "input": {"head": "PersonX finally got home", "relation": "xWant"}}
{"generation": "PersonX gets PersonX's shorts in a knot. Before, PersonX needs to get PersonX's shorts in a knot", "references": ["none"], "input": {"head": "PersonX gets PersonX's shorts in a knot", "relation": "xNeed"}}
{"generation": "PersonX gets the book. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets the book", "relation": "oEffect"}}
{"generation": "PersonX gets PersonY's dad. Before that, he's the one who gets the job", "references": ["PersonX was placed in an car cleaning interview that was run by his bestfriend's dad"], "input": {"head": "PersonX gets PersonY's dad", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Police keep driving by with their sirens blaring", "Their husband keeps snoring.", "Their kids are playing music too loud.", "PersonX took too much cocaine.", "their mother won't let them.", "The cat is already in it.", "PersonX has insomnia.", "The coyotes are howling too loud.", "PersonX drank too much coffee", "PersonX has a toothache", "PersonX is in pain"], "input": {"head": "PersonX falls asleep at night", "relation": "HinderedBy"}}
{"generation": "PersonX spends the summer. PersonX did this to help her get through the summer", "references": ["to relax"], "input": {"head": "PersonX spends the summer", "relation": "xIntent"}}
{"generation": "PersonX gets the stain out. After that, he gets the stain out", "references": ["PersonX tells the owner anyway"], "input": {"head": "PersonX gets the stain out", "relation": "isBefore"}}
{"generation": "PersonX writes ___ using. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX writes ___ using", "relation": "oWant"}}
{"generation": "PersonX enjoys ___ together. PersonX did this to me", "references": ["to spend time with them.", "to be happy and take in the moment"], "input": {"head": "PersonX enjoys ___ together", "relation": "xIntent"}}
{"generation": "a manilenvelope can be used for the purpose of making a new home", "references": ["mail a contact.", "hide something important", "protect documents", "hide bribe money", "keep ribbons in", "keep documents together", "mail to someone", "keep pictures in", "store pokemon cards"], "input": {"head": "manilenvelope", "relation": "ObjectUse"}}
{"generation": "PersonX busts a nut. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX busts a nut", "relation": "oEffect"}}
{"generation": "a pocekts can be used for the following purposes:\n\n1", "references": ["put some spare change in", "put keys in", "cut out into a scarf", "hold your wallet", "put wallet in", "hide items", "make into a purse", "keep hands warm", "keep a frog warm", "carry something small"], "input": {"head": "pocekts", "relation": "ObjectUse"}}
{"generation": "PersonX meets some friends. PersonX is a very nice guy, but he's not a", "references": ["extraverted", "social", "collegial", "gregarious", "friendly", "affectionate", "outgoing"], "input": {"head": "PersonX meets some friends", "relation": "xAttr"}}
{"generation": "PersonX buys a laptop. PersonX will be able to use the laptop to access the server", "references": ["happy", "motivated", "satisfied"], "input": {"head": "PersonX buys a laptop", "relation": "xReact"}}
{"generation": "PersonX loves to skateboard. As a result, others feel that he is a bit too much of a \"", "references": ["none"], "input": {"head": "PersonX loves to skateboard", "relation": "oReact"}}
{"generation": "You are likely to find a scoreboard in a lot of places, and you will be able to", "references": ["sporting event"], "input": {"head": "scoreboard", "relation": "AtLocation"}}
{"generation": "PersonX brings ___ to PersonY's mouth. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX brings ___ to PersonY's mouth", "relation": "oEffect"}}
{"generation": "PersonX always makes ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX always makes ___", "relation": "oEffect"}}
{"generation": "PersonX gets a second opinion. Before, PersonX needs to be able to see the world through the eyes of", "references": ["none", "to be less confused", "to decide what to do"], "input": {"head": "PersonX gets a second opinion", "relation": "xNeed"}}
{"generation": "PersonX takes a leaf out of PersonY's book. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX takes a leaf out of PersonY's book", "relation": "oEffect"}}
{"generation": "PersonX sees PersonX's crush. Before that, she's been a little bit more of a jerk", "references": ["PersonX is at the gym"], "input": {"head": "PersonX sees PersonX's crush", "relation": "isAfter"}}
{"generation": "PersonX takes matters into PersonX's hands. Before, PersonX needs to be able to talk to PersonX, but now", "references": ["none"], "input": {"head": "PersonX takes matters into PersonX's hands", "relation": "xNeed"}}
{"generation": "PersonX loses PersonY's wallet. After, PersonX will want to use the same wallet as PersonY", "references": ["return wallet", "To buy another one", "search for wallet", "To go wallet shopping"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "xWant"}}
{"generation": "PersonX gets the call. After, PersonX will want to know if you're a member of the group", "references": ["Reject the call", "to answer it", "to pick up the phone", "Answer the call", "to talk to the person in question", "to ignore the call"], "input": {"head": "PersonX gets the call", "relation": "xWant"}}
{"generation": "PersonX sees's going on. As a result, others feel that the game is too much of a distraction", "references": ["none"], "input": {"head": "PersonX sees 's going on", "relation": "oReact"}}
{"generation": "PersonX gets snacks. Before, PersonX needs to get a snack", "references": ["to get the money", "order the food"], "input": {"head": "PersonX gets snacks", "relation": "xNeed"}}
{"generation": "PersonX teaches PersonY things. After, PersonX will want to know what PersonY is doing", "references": ["to make him succeed", "to ask question about the subject", "to help PersonY", "to get thanked", "to keep teaching", "to refine his tastes", "to be of use"], "input": {"head": "PersonX teaches PersonY things", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's partner is stuck in another city.", "PersonX does not have friends.", "PersonX is too sleepy for company.", "PersonXs wife can't take off work."], "input": {"head": "PersonX enjoys each other 's company", "relation": "HinderedBy"}}
{"generation": "PersonX pays well. After, PersonX will want to know what you're doing", "references": ["enjoy what they paid for", "get more money"], "input": {"head": "PersonX pays well", "relation": "xWant"}}
{"generation": "PersonX goes exploring. Before, PersonX needs to find a way to get to the bottom of the", "references": ["to leave the house", "to plan the expedition", "to go out", "to get ready", "go on a road trip", "get backpack"], "input": {"head": "PersonX goes exploring", "relation": "xNeed"}}
{"generation": "PersonX gets to know PersonY. Before that, he's a little bit more of a jerk", "references": ["PersonX meets a friend"], "input": {"head": "PersonX gets to know PersonY", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is 90 years old.", "PersonX has scars all of PersonX's body.", "PersonX has a serious injury.", "PersonX can't afford to go to the doctor.", "PersonX is tired."], "input": {"head": "PersonX is as good as new", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no hammer.", "PersonX doesn't want to have to pay for the mold.", "PersonX's friend refused to help him", "PersonX doesn't own the mold.", "PersonX is too ordinary.", "Person X is shy.", "PersonX's ideas were all already implemented by Sam", "Person X has no money.", "PersonX is being held down by the man"], "input": {"head": "PersonX breaks the mold", "relation": "HinderedBy"}}
{"generation": "PersonX wins every ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["gets rich", "cheers"], "input": {"head": "PersonX wins every ___", "relation": "xEffect"}}
{"generation": "PersonX spills PersonX's guts. The effect on PersonX will be similar to the effect on Person X", "references": ["gets yelled at", "is burried", "dies", "becomes friendless"], "input": {"head": "PersonX spills PersonX's guts", "relation": "xEffect"}}
{"generation": "PersonX screams bloody murder. After, others will want to kill him", "references": ["none", "call emergency services", "come to person x aid"], "input": {"head": "PersonX screams bloody murder", "relation": "oWant"}}
{"generation": "PersonX rings PersonY. The effect on others will be reversed", "references": ["gets kicked", "get connected", "talk to", "gets punched", "answers the phone", "talks"], "input": {"head": "PersonX rings PersonY", "relation": "oEffect"}}
{"generation": "PersonX alters PersonX's course. As a result, others feel that PersonX is not as good as he thinks", "references": ["none"], "input": {"head": "PersonX alters PersonX's course", "relation": "oReact"}}
{"generation": "PersonX drops ___ on the floor. As a result, others feel the same way", "references": ["sad", "none"], "input": {"head": "PersonX drops ___ on the floor", "relation": "oReact"}}
{"generation": "PersonX makes every ___. Before, PersonX needs to know the name of the person who is the target", "references": ["none"], "input": {"head": "PersonX makes every ___", "relation": "xNeed"}}
{"generation": "PersonX finds ___ in PersonX's attic is filled by a large, dark, and mysterious creature", "references": ["cabinets", "pillows", "toy", "spiders", "card", "trunks", "boxes", "cobwebs", "dresses"], "input": {"head": "PersonX finds ___ in PersonX's attic", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is on anxiety medication.", "PersonX is waiting on the doctor.", "PersonX was trained by monks", "PersonX was given everything in the world by his mom", "PersonX is naturally very calm.", "PersonX is meditating.", "PersonX is a monk.", "PersonX meditates due to Sally making him each morning", "PersonX is having a baby at the hospital."], "input": {"head": "PersonX becomes impatient", "relation": "HinderedBy"}}
{"generation": "PersonX donates plasma. Before, PersonX needs to be able to use the plasma to heal", "references": ["to go to the clinic", "to see a doctor", "go hospital", "to eat healthy foods"], "input": {"head": "PersonX donates plasma", "relation": "xNeed"}}
{"generation": "PersonX writes ___ using. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX writes ___ using", "relation": "oReact"}}
{"generation": "PersonX crosses the ___ to get. PersonX did this to me", "references": ["talk to someone", "persons crosses the  grasess  to get", "to get to a place", "go home", "to go to school"], "input": {"head": "PersonX crosses the ___ to get", "relation": "xIntent"}}
{"generation": "PersonX throws ___ on the nature. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX throws ___ on the nature", "relation": "oEffect"}}
{"generation": "PersonX takes PersonX's watch off. As a result, others feel that PersonX is not doing enough to protect them", "references": ["dumb", "none"], "input": {"head": "PersonX takes PersonX's watch off", "relation": "oReact"}}
{"generation": "PersonX goes to a doctor's appointment. After, others will want to know what's wrong with him", "references": ["to check him out", "none", "to consult"], "input": {"head": "PersonX goes to a doctor 's appointment", "relation": "oWant"}}
{"generation": "PersonX grabs PersonY's hair. PersonX will be able to see PersonY's face and then grab", "references": ["guilty", "malicious.", "angry.", "ashamed", "riled up.", "uncaring", "bad"], "input": {"head": "PersonX grabs PersonY's hair", "relation": "xReact"}}
{"generation": "PersonX bullies in school. The effect on others will be felt by the students", "references": ["Other dislike and become upset by bully's presence", "none", "Self esteem of others is diminished"], "input": {"head": "PersonX bullies in school", "relation": "oEffect"}}
{"generation": "PersonX compares ___ with another. PersonX is a member of the group of people who are not", "references": ["careful", "competitive", "smart", "inquisitive", "judgy", "detailed", "judgemental", "curious", "thoughtful"], "input": {"head": "PersonX compares ___ with another", "relation": "xAttr"}}
{"generation": "PersonX breaks PersonX's toe. The effect on PersonX will be reversed", "references": ["screams", "cries", "can't walk", "yells for help", "toe swells", "screams in pain", "bruising develops"], "input": {"head": "PersonX breaks PersonX's toe", "relation": "xEffect"}}
{"generation": "You are likely to find a sewer in a building that is not a sewer", "references": ["street"], "input": {"head": "sewer", "relation": "AtLocation"}}
{"generation": "PersonX belongs to PersonX's father. Before, PersonX needs to be able to talk to the other person", "references": ["none"], "input": {"head": "PersonX belongs to PersonX's father", "relation": "xNeed"}}
{"generation": "PersonX gives PersonY children. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to feel cared for,", "to give"], "input": {"head": "PersonX gives PersonY children", "relation": "xIntent"}}
{"generation": "PersonX puts PersonX's phone. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX puts PersonX's phone", "relation": "oEffect"}}
{"generation": "PersonX moves the ___ along is filled by the ___", "references": ["train", "car", "needle", "tricycle", "van", "truck", "bike"], "input": {"head": "PersonX moves the ___ along", "relation": "isFilledBy"}}
{"generation": "PersonX takes place soon. PersonX did this to make sure that the game was not too much of", "references": ["to be first", "to be prepared"], "input": {"head": "PersonX takes place soon", "relation": "xIntent"}}
{"generation": "You are likely to find a snot in a snot", "references": ["nose"], "input": {"head": "snot", "relation": "AtLocation"}}
{"generation": "PersonX calls PersonY this morning. After, others will want to know what's going on", "references": ["to go visit PersonX", "to sleep", "pick up phone", "answer phone call"], "input": {"head": "PersonX calls PersonY this morning", "relation": "oWant"}}
{"generation": "a terrorist desires to kill Americans", "references": ["violence"], "input": {"head": "terrorist", "relation": "Desires"}}
{"generation": "PersonX takes ___ to the er. After, others will want to know what's going on", "references": ["to be admitted to the er", "to say thank you to PersonX", "to get better", "to get treated", "none"], "input": {"head": "PersonX takes ___ to the er", "relation": "oWant"}}
{"generation": "PersonX knows PersonY's opinion. The effect on others will be different", "references": ["PersonY asks personX not to say anything", "none", "PersonY is vulnerable because PersonX could tell people", "PersonY approaches personX about it"], "input": {"head": "PersonX knows PersonY's opinion", "relation": "oEffect"}}
{"generation": "a sleeping pill can be used for up to three days", "references": ["sleep on time", "sexually assault someone", "rest well on a long flight", "swallow whole", "slip into someone's food", "sell online", "cure insomnia", "mix with alcohol and overdose", "sleep quicker"], "input": {"head": "sleeping pill", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has to finish their homework.", "the electric went off", "PersonX lost power and the movie was taken off Netflix.", "PersonX's child needs the computer to do their schoolwork.", "PersonX doesn't have enough time", "someone kept screaming during the movie", "PersonX's wife forgot to pay the Netflix bill.", "PersonX found out the movie is broken"], "input": {"head": "PersonX finishes the movie", "relation": "HinderedBy"}}
{"generation": "PersonX walks in front of PersonY. PersonX will be the one who is the one who is the one", "references": ["like he's doing his job well.", "arrogant and headstrong.", "like he is in the way"], "input": {"head": "PersonX walks in front of PersonY", "relation": "xReact"}}
{"generation": "PersonX hats cats. After, PersonX will want to know who you are", "references": ["Take care of her feline", "Give her feline food and water"], "input": {"head": "PersonX hats cats", "relation": "xWant"}}
{"generation": "PersonX throws some bread. PersonX is a bit of a jerk, but he's a", "references": ["careful", "kind", "careless", "unfaithful", "athletic"], "input": {"head": "PersonX throws some bread", "relation": "xAttr"}}
{"generation": "PersonX visits PersonX's daughter. Before, PersonX needs to be able to talk to her", "references": ["to call their daughter", "to have daughter", "to go to daughter's hostel", "to drive to their daughter's house", "to get in the car", "to find out if daughter will be available"], "input": {"head": "PersonX visits PersonX's daughter", "relation": "xNeed"}}
{"generation": "PersonX earns the money. The effect on PersonX will be the same as the effect on Person X", "references": ["becomes richer", "Has to worry less about finances", "gets paid", "Becomes enriched", "Is prepared for emergency expenses", "Gains financial security"], "input": {"head": "PersonX earns the money", "relation": "xEffect"}}
{"generation": "You are likely to find a whale shark in an area where there is a lot of water", "references": ["ocean"], "input": {"head": "whale shark", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX broke the tuning knob on the stereo", "PersonX is in their parents car, and the parents control the radio.", "PersonX's friend is controlling the radio.", "PersonX's parent grounded PersonX from listening to music.", "PersonX's child broke the radio."], "input": {"head": "PersonX turns the music", "relation": "HinderedBy"}}
{"generation": "PersonX arrives ___ from work. The effect on PersonX will be the same as the effect on PersonX", "references": ["greetted", "sees their family", "licked by dog", "has some downtime"], "input": {"head": "PersonX arrives ___ from work", "relation": "xEffect"}}
{"generation": "PersonX always beat ___. After, PersonX will want to use the same method for all the other methods", "references": ["to enter the competition", "to celebrate", "to keep doing a good job", "to go home", "to collect the winnings", "to win the competition"], "input": {"head": "PersonX always beat ___", "relation": "xWant"}}
{"generation": "PersonX gives PersonY the impression. As a result, others feel that PersonY is a bit too much of a", "references": ["satisfied"], "input": {"head": "PersonX gives PersonY the impression", "relation": "oReact"}}
{"generation": "Sometimes sickness causes a person to be sick, and it is not", "references": ["suffering"], "input": {"head": "sickness", "relation": "Causes"}}
{"generation": "PersonX studies for a quiz. PersonX is a student at the University of California, Berkeley", "references": ["concerned", "thoughtful", "prepared", "hard-working", "studious"], "input": {"head": "PersonX studies for a quiz", "relation": "xAttr"}}
{"generation": "PersonX makes PersonX's speech. Before that, he says that he's not sure what to do", "references": ["PersonX is asked to make a speech"], "input": {"head": "PersonX makes PersonX's speech", "relation": "isAfter"}}
{"generation": "PersonX has a new car. The effect on PersonX will be different from the original car", "references": ["Drives it", "Drive the car", "to driving a new car", "to buy a new car", "Pay for the car", "Gets insurance"], "input": {"head": "PersonX has a new car", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX was raised to be nervous in these situations by his mom", "PersonX is being laughed at by Joe", "PersonX noticed that Scott is watching him pee", "personX struggles to stay confident in social situations", "PersonX didn't prepare properly.", "PersonX doesn't know the rules.", "PersonX made a mistake.", "personX has bad social skills and makes mistakes", "PersonX isn't very organized."], "input": {"head": "PersonX goes perfectly", "relation": "HinderedBy"}}
{"generation": "PersonX hits PersonY's friend. After that, PersonY's friend is able to get a new", "references": ["PersonX apologizes the next day"], "input": {"head": "PersonX hits PersonY's friend", "relation": "isBefore"}}
{"generation": "PersonX packs PersonY's bags. PersonX did this to me, and I'm not sure if it's", "references": ["to be helpful and kind.", "him or her to leave", "to be a family"], "input": {"head": "PersonX packs PersonY's bags", "relation": "xIntent"}}
{"generation": "PersonX has to get it fixed. Before that, he has to get it fixed", "references": ["PersonX notices the flat tire"], "input": {"head": "PersonX has to get it fixed", "relation": "isAfter"}}
{"generation": "PersonX makes ___ that day. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX makes ___ that day", "relation": "oReact"}}
{"generation": "PersonX starts a band. PersonX did this to me", "references": ["to create music", "to jam out with friends"], "input": {"head": "PersonX starts a band", "relation": "xIntent"}}
{"generation": "PersonX gives the ___ PersonY's name. The effect on others will be similar to the effect on the ___ PersonY", "references": ["smiles with pride", "cries out of joy", "no effect", "receive gratitude for praise", "none"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "oEffect"}}
{"generation": "a cradle contains a small, but very important, part of the", "references": ["rocker"], "input": {"head": "cradle", "relation": "MadeUpOf"}}
{"generation": "PersonX represents PersonY increase. Before, PersonX needs to be a bit more specific", "references": ["none"], "input": {"head": "PersonX represents PersonY increase", "relation": "xNeed"}}
{"generation": "PersonX makes a date. PersonX is a person who is a member of the same family", "references": ["zealous", "efficient", "flirty", "curious", "organized", "apprehensive"], "input": {"head": "PersonX makes a date", "relation": "xAttr"}}
{"generation": "PersonX stands on stage. As a result, others feel that he is a bit too much of a jerk", "references": ["high", "excited", "happy for having fun", "grateful for expanding their knowledge", "exhilarated"], "input": {"head": "PersonX stands on stage", "relation": "oReact"}}
{"generation": "PersonX finds PersonY's car keys. PersonX is then able to get the keys back", "references": ["observant", "determined", "helpful", "tenacious"], "input": {"head": "PersonX finds PersonY's car keys", "relation": "xAttr"}}
{"generation": "PersonX notices a strange smell. PersonX is confused, but she quickly realizes that it's a", "references": ["curious", "observant", "disgusted"], "input": {"head": "PersonX notices a strange smell", "relation": "xAttr"}}
{"generation": "PersonX stops being friends. After, others will want to know what he's doing", "references": ["show enemity", "try to know the reason", "to still be friends", "to work things out", "none"], "input": {"head": "PersonX stops being friends", "relation": "oWant"}}
{"generation": "PersonX takes down a peg. Before, PersonX needs to be able to use the peg to get to the", "references": ["take a glass", "go to bar", "money", "none", "pour wine into it"], "input": {"head": "PersonX takes down a peg", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's parents won't let them hang out with other kids.", "The other person does not want to be best friends.", "The other person moved away", "The other person does not like them", "The kids at school don't want to be PersonX's friend.", "The other person already has a best friend."], "input": {"head": "PersonX is now best friends", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX messes up everything", "PersonX doesn't have the skills to do it right.", "Their friend keeps telling them they're wrong.", "PersonX doesn't have the experience to know how to do it.", "The teacher won't help them study.", "PersonX doesn't have the instruction manual nearby.", "PersonX is unsure of the method", "PersonX makes too many mistakes", "The boss keeps changing the rules.", "PersonX is always wrong"], "input": {"head": "PersonX gets it right", "relation": "HinderedBy"}}
{"generation": "You are likely to find a waste bin in a landfill", "references": ["desk"], "input": {"head": "waste bin", "relation": "AtLocation"}}
{"generation": "reproduce. PersonX did this to me", "references": ["have children"], "input": {"head": "reproduce", "relation": "xIntent"}}
{"generation": "PersonX asks PersonY to speak. After that, PersonY asks PersonX to speak", "references": ["PersonX nods at what PersonY says", "PersonX records PersonY talking", "PersonX high fives PersonY after their speech"], "input": {"head": "PersonX asks PersonY to speak", "relation": "isBefore"}}
{"generation": "PersonX invites ___ over to play. PersonX is a very nice guy, but he's not a", "references": ["cooperative", "welcoming", "sociable", "friendly", "thoughtful", "fun-loving"], "input": {"head": "PersonX invites ___ over to play", "relation": "xAttr"}}
{"generation": "PersonX takes as PersonY example. After, PersonX will want to know if PersonY is a member of PersonX", "references": ["to show PersonY what they learned", "to imitate person Y's behavior", "to closely watch what person Y does", "for them to see what they did", "to apply PersonY's example", "for them to learn from them"], "input": {"head": "PersonX takes as PersonY example", "relation": "xWant"}}
{"generation": "PersonX states and local ___. Before, PersonX needs to know the name of the person who is the target", "references": ["learn economics", "study different governments", "none"], "input": {"head": "PersonX states and local ___", "relation": "xNeed"}}
{"generation": "PersonX decides to order pizza. PersonX did this to her, and she was shocked to see that she", "references": ["personx wants pizza", "food", "to eat", "to not be hungry", "to not make dinner"], "input": {"head": "PersonX decides to order pizza", "relation": "xIntent"}}
{"generation": "PersonX replaces the batteries. Before that, the battery was replaced by a new one", "references": ["PersonX cannot get the remote to work"], "input": {"head": "PersonX replaces the batteries", "relation": "isAfter"}}
{"generation": "PersonX does some yard work. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX does some yard work", "relation": "oWant"}}
{"generation": "PersonX does odd jobs. The effect on others will be minimal", "references": ["none"], "input": {"head": "PersonX does odd jobs", "relation": "oEffect"}}
{"generation": "PersonX pours PersonX's heart. After, PersonX will want to know what's going on", "references": ["to express his feelings", "to hear some consoling words", "to vent his feelings", "to express feelings", "to ask someone something", "to get advice", "to wait for a response", "to show affection"], "input": {"head": "PersonX pours PersonX's heart", "relation": "xWant"}}
{"generation": "PersonX finishes the test. After, PersonX will want to see if the test is successful", "references": ["to get a good class grade.", "to celebrate", "to pass the test.", "to take a nap"], "input": {"head": "PersonX finishes the test", "relation": "xWant"}}
{"generation": "PersonX finds a gold ring. As a result, others feel that the ring is a gift from God", "references": ["none", "upset"], "input": {"head": "PersonX finds a gold ring", "relation": "oReact"}}
{"generation": "PersonX gives PersonY children. As a result, others feel that they are being treated unfairly", "references": ["responsible", "delighted"], "input": {"head": "PersonX gives PersonY children", "relation": "oReact"}}
{"generation": "PersonX draws PersonX's sword. After that, he uses the sword to attack PersonX", "references": ["PersonX kills the enemy with the sword"], "input": {"head": "PersonX draws PersonX's sword", "relation": "isBefore"}}
{"generation": "PersonX orders ___ from the restaurant. After, others will want to go to the bathroom", "references": ["to serve the customer", "to receive a tip", "deliver his pizza", "none", "take another order"], "input": {"head": "PersonX orders ___ from the restaurant", "relation": "oWant"}}
{"generation": "PersonX shaves PersonX's beard. After that, he's a bit of a jerk", "references": ["PersonX performs confidently during the interview"], "input": {"head": "PersonX shaves PersonX's beard", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The pigeons will fly off.", "The pigeons will peck the cat.", "The cat will chase the pigeons off.", "The cat ate all the pigeons and there are no more.", "The pigeons fly off.", "The cat ran away and can't be found.", "The cat scratched them."], "input": {"head": "PersonX puts the cat among the pigeons", "relation": "HinderedBy"}}
{"generation": "PersonX brings ___ to the eyes. PersonX will be able to see the person's face and will be", "references": ["happy", "proud"], "input": {"head": "PersonX brings ___ to the eyes", "relation": "xReact"}}
{"generation": "PersonX leaves the library. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX leaves the library", "relation": "oEffect"}}
{"generation": "PersonX catches PersonY's attention. PersonX will be able to see PersonY's face and will be", "references": ["relieved.", "noticed", "appreciated"], "input": {"head": "PersonX catches PersonY's attention", "relation": "xReact"}}
{"generation": "PersonX wants to hurt PersonY. PersonX will be the one who gets hurt", "references": ["angry", "vindicated"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xReact"}}
{"generation": "PersonX looks like figure. Before, PersonX needs to be a character with a certain level of intelligence", "references": ["none"], "input": {"head": "PersonX looks like figure", "relation": "xNeed"}}
{"generation": "PersonX leaves PersonY's ___ alone. Before, PersonX needs to be able to use the \"other\" ability", "references": ["none"], "input": {"head": "PersonX leaves PersonY's ___ alone", "relation": "xNeed"}}
{"generation": "PersonX misses ___ to school. PersonX will be sent to the school", "references": ["frustrated", "rushed"], "input": {"head": "PersonX misses ___ to school", "relation": "xReact"}}
{"generation": "PersonX teaches ___ the way. PersonX did this to me", "references": ["to show support", "to be kind", "yes  i am  very  happy"], "input": {"head": "PersonX teaches ___ the way", "relation": "xIntent"}}
{"generation": "a cocktails can be used for a variety of purposes, including:\n\n\u2022", "references": ["fit in with others", "use as a prop in a play", "look fancy", "to use as rinse", "guzzle all night", "to socialize", "to bathe in", "drink himself into a stupor", "share with people", "get a buzz", "swig while dancing", "look sophisticated", "give to the wrong people"], "input": {"head": "cocktails", "relation": "ObjectUse"}}
{"generation": "PersonX goes first. PersonX is the only one who can do it", "references": ["demanding", "brave", "pushy", "proud"], "input": {"head": "PersonX goes first", "relation": "xAttr"}}
{"generation": "PersonX teaches ___ the way. As a result, others feel the same way", "references": ["none", "grateful"], "input": {"head": "PersonX teaches ___ the way", "relation": "oReact"}}
{"generation": "PersonX throws the food. After, PersonX will want to eat the food", "references": ["to eat some of the food.", "drink some water", "wash and dry hands", "to throw more food."], "input": {"head": "PersonX throws the food", "relation": "xWant"}}
{"generation": "PersonX feels so sad. Before that, she was a very good girl", "references": ["PersonX signs divorce papers"], "input": {"head": "PersonX feels so sad", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They hurt their back an cannot sit.", "Their taxi arrived late.", "Their garage door wont open to get the car out.", "PersonX depends on public transportation and sometimes it runs late.", "PersonX's carpool partner drives too slow.", "Person X has no money."], "input": {"head": "PersonX gets to work on time", "relation": "HinderedBy"}}
{"generation": "PersonX spends ___ at the beach. After, PersonX will want to go to the beach", "references": ["to relax", "to swim", "to enjoy the great weather", "a tan", "to sunbathe", "to get a tan"], "input": {"head": "PersonX spends ___ at the beach", "relation": "xWant"}}
{"generation": "PersonX brings ___ to the people. The effect on PersonX will be similar to the effect on PersonX on the other", "references": ["thanked", "Stops from the rich", "praised", "is admired", "is called upon", "Gives to the poor"], "input": {"head": "PersonX brings ___ to the people", "relation": "xEffect"}}
{"generation": "PersonX goes to the library to study. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX goes to the library to study", "relation": "oWant"}}
{"generation": "PersonX distributes among PersonY. Before, PersonX needs to be able to handle PersonY's requests", "references": ["to see whay Y needs", "to ask PersonY how much they want", "to calculate protion", "to decide how much to split", "none"], "input": {"head": "PersonX distributes among PersonY", "relation": "xNeed"}}
{"generation": "PersonX loves ___ with PersonX's heart. PersonX did this to me", "references": ["to show his love and affection", "to be loved", "to show state pride"], "input": {"head": "PersonX loves ___ with PersonX's heart", "relation": "xIntent"}}
{"generation": "kindergartener can be found at http://www", "references": ["beginning school"], "input": {"head": "kindergartener", "relation": "CapableOf"}}
{"generation": "PersonX gets a call. After that, he's in the middle of a fight with a", "references": ["PersonX gets bad news from the caller"], "input": {"head": "PersonX gets a call", "relation": "isBefore"}}
{"generation": "PersonX impresses with PersonX's work. After that, he's a bit of a jerk", "references": ["PersonX goes to the flea market"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "isBefore"}}
{"generation": "a witch dress can be used for a witch costume", "references": ["scare people at haunted attractions", "make halloween decorations on porch", "put on a play", "scare away thieves", "have fun at a party", "look at", "look nice on Halloween", "dress up for costume party"], "input": {"head": "witch dress", "relation": "ObjectUse"}}
{"generation": "PersonX takes place in the course. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX takes place in the course", "relation": "oEffect"}}
{"generation": "PersonX catches flies. The effect on others will be similar to that of a normal fly", "references": ["none"], "input": {"head": "PersonX catches flies", "relation": "oEffect"}}
{"generation": "PersonX sees a boy. The effect on others will be different", "references": ["they play outside", "none", "they say high back"], "input": {"head": "PersonX sees a boy", "relation": "oEffect"}}
{"generation": "PersonX puts together a ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["has a mess to clean up", "looks serious", "looks at their work", "eats the salad"], "input": {"head": "PersonX puts together a ___", "relation": "xEffect"}}
{"generation": "PersonX loves the world gave. Before, PersonX needs to be able to do things that are not possible in", "references": ["none"], "input": {"head": "PersonX loves the world gave", "relation": "xNeed"}}
{"generation": "PersonX becomes great. After, PersonX will want to be a good person", "references": ["to enjoy being great", "to continue being great", "to show others his greatness", "to get out of the spotlight"], "input": {"head": "PersonX becomes great", "relation": "xWant"}}
{"generation": "PersonX sings PersonX's heart out. PersonX is a very good singer, and I think he's", "references": ["Ambitious", "capable", "talented", "Dedicated"], "input": {"head": "PersonX sings PersonX's heart out", "relation": "xAttr"}}
{"generation": "PersonX provides PersonY introduction. As a result, others feel that PersonY is a better fit for PersonX", "references": ["good", "none", "grateful"], "input": {"head": "PersonX provides PersonY introduction", "relation": "oReact"}}
{"generation": "PersonX looks ___ in the face. Before, PersonX needs to be a good person", "references": ["none"], "input": {"head": "PersonX looks ___ in the face", "relation": "xNeed"}}
{"generation": "PersonX has always loved PersonY. Before that, he was a fan of PersonZ", "references": ["PersonX sees PersonY at the bank"], "input": {"head": "PersonX has always loved PersonY", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is surrounded by friends.", "PersonX is a registered sex offender and can't be alone with PersonY", "Person Y does not like Person X.", "Person X is shy.", "PersonY avoids being alone with PersonX", "PersonY is scared of PersonX."], "input": {"head": "PersonX sees PersonY alone", "relation": "HinderedBy"}}
{"generation": "PersonX is excited and nervous. PersonX is a little bit of a nerd, but he's", "references": ["awed", "star-struck", "emotional", "timid", "newly-arrived", "thrilled", "elated", "intimidated"], "input": {"head": "PersonX is excited and nervous", "relation": "xAttr"}}
{"generation": "PersonX makes the welkin ring. Before that, he's a member of the team", "references": ["PersonX gets their tools together", "PersonX feels like exercising"], "input": {"head": "PersonX makes the welkin ring", "relation": "isAfter"}}
{"generation": "PersonX smells nice. As a result, others feel the same way", "references": ["none", "nervous"], "input": {"head": "PersonX smells nice", "relation": "oReact"}}
{"generation": "PersonX takes cover. After that, he's in a car with a woman who's", "references": ["PersonX still gets shot"], "input": {"head": "PersonX takes cover", "relation": "isBefore"}}
{"generation": "PersonX attention whores. After, others will want to know what you're doing", "references": ["to ignore her", "to pay no mind", "none"], "input": {"head": "PersonX attention whores", "relation": "oWant"}}
{"generation": "PersonX evens gave PersonY ___. PersonX will be the same as PersonY", "references": ["good for helping", "giving"], "input": {"head": "PersonX evens gave PersonY ___", "relation": "xReact"}}
{"generation": "PersonX calls an ambulance. Before that, he's been in a car accident", "references": ["PersonX breaks their wrist", "PersonX onx breaks PersonX's arm", "PersonX falls on the sidewalk"], "input": {"head": "PersonX calls an ambulance", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's family are strict about gender norms.", "PersonX has too many manly features.", "PersonX's doctor refuses to prescribe them estrogen.", "PersonX is too masculine.", "PersonX has short hair and it will not grow.", "PersonX is not allowed to be transgender.", "PersonX cannot afford reproductive surgery.", "PersonX is a big, burly man.", "PersonX is very masculine.", "PersonX's religious leader requires them to have facial hair."], "input": {"head": "PersonX looks like a woman", "relation": "HinderedBy"}}
{"generation": "PersonX explains fully the ___. PersonX will be the one who will be the one who will be", "references": ["good"], "input": {"head": "PersonX explains fully the ___", "relation": "xReact"}}
{"generation": "a football strips can be used for this purpose", "references": ["explain the play", "take from", "get autographed by players and sell on Ebay", "wear in the wrong end to start a fight", "show team spirit", "wave around during the game", "give to the fans", "use in a costume"], "input": {"head": "football strips", "relation": "ObjectUse"}}
{"generation": "PersonX plays PersonY's favorite song. PersonX will be playing the song in the background", "references": ["hopeful", "happy", "friendly", "pleased", "satisfied"], "input": {"head": "PersonX plays PersonY's favorite song", "relation": "xReact"}}
{"generation": "PersonX gets the shot. The effect on PersonX will be similar to the effect of the \"D\" in", "references": ["receives encouragement", "owes a co-pay for the medical bill", "has a sore arm", "feels some pain", "none", "gets excited"], "input": {"head": "PersonX gets the shot", "relation": "xEffect"}}
{"generation": "PersonX comes back later. Before that, he's been in the same room as the other", "references": ["PersonX arrives at the dentist office and it is closed"], "input": {"head": "PersonX comes back later", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have the necessary tools to come up with an estimate.", "PersonX lacks the skills to provide the estimate.", "Person Y won't talk to Person X.", "Person Y got an estimate from someone else."], "input": {"head": "PersonX provides PersonY estimate", "relation": "HinderedBy"}}
{"generation": "PersonX wants to learn how to draw. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX wants to learn how to draw", "relation": "oEffect"}}
{"generation": "PersonX peers inside. As a result, others feel more comfortable with the idea of being able to share", "references": ["none", "afraid"], "input": {"head": "PersonX peers inside", "relation": "oReact"}}
{"generation": "PersonX takes ___ of things. PersonX will be able to use the same items as PersonX,", "references": ["happy", "accomplished", "materialistic"], "input": {"head": "PersonX takes ___ of things", "relation": "xReact"}}
{"generation": "PersonX wants to be an actor. Before that, he was a writer for the BBC", "references": ["PersonX watches a play as a young child"], "input": {"head": "PersonX wants to be an actor", "relation": "isAfter"}}
{"generation": "PersonX about to get married. After that, he's going to have to deal with the fact", "references": ["\"PersonX says, \"\"i do\"\"\""], "input": {"head": "PersonX about to get married", "relation": "isBefore"}}
{"generation": "PersonX is working at a diner. After that, he's going to go to the bar and ask", "references": ["PersonX hustles to get people their breakfast quickly"], "input": {"head": "PersonX is working at a diner", "relation": "isBefore"}}
{"generation": "PersonX becomes PersonY agent. After, others will want to know who is the person who is the person who", "references": ["to get work", "To succeed at a high level", "to pay their agent for it", "To get a good deal"], "input": {"head": "PersonX becomes PersonY agent", "relation": "oWant"}}
{"generation": "PersonX uses the internet. Before that, he was a programmer at a company called Microsoft", "references": ["PersonX wonders if it will rain", "PersonX needs a computer"], "input": {"head": "PersonX uses the internet", "relation": "isAfter"}}
{"generation": "PersonX kisses PersonY gently. The effect on others will be different", "references": ["gets closer", "gains person X's saliva", "feels his lips", "passes herpes to person X"], "input": {"head": "PersonX kisses PersonY gently", "relation": "oEffect"}}
{"generation": "PersonX plays ball. After that, he's a little bit more of a \"I", "references": ["PersonX gets hit in the face", "PersonX gets tired and sweaty", "PersonX runs around"], "input": {"head": "PersonX plays ball", "relation": "isBefore"}}
{"generation": "PersonX presents PersonX's views. As a result, others feel that PersonX is not a good fit for the", "references": ["more knowledgeable about the situation in general", "more in touch with personx's feelings", "thoughtful", "none", "uncertain"], "input": {"head": "PersonX presents PersonX's views", "relation": "oReact"}}
{"generation": "PersonX sees PersonY's wife. PersonX is a bit of a jerk, but he's not", "references": ["curious", "friendly", "observant", "thoughtful", "caring"], "input": {"head": "PersonX sees PersonY's wife", "relation": "xAttr"}}
{"generation": "You are likely to find a post binder in a library or a library's main directory", "references": ["post office", "supply room"], "input": {"head": "post binder", "relation": "AtLocation"}}
{"generation": "PersonX sits behind PersonY. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sits behind PersonY", "relation": "oEffect"}}
{"generation": "PersonX drives anyway. Before, PersonX needs to be able to drive a car", "references": ["Consider driving", "to get in the car", "to make plans", "none", "get keys"], "input": {"head": "PersonX drives anyway", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has been called into work by his boss", "PersonX has to study for an exam tomorrow.", "PersonX is being told by his girlfriend that they have to stay up", "The baby is still up and crying.", "The neighbors are having a loud party.", "PersonX's bed is occupied by a large man", "PersonX has to work late", "PersonX is on the phone with a client.", "PersonX has to study for a big test", "PersonX has to work on their book report."], "input": {"head": "PersonX goes to bed early", "relation": "HinderedBy"}}
{"generation": "PersonX orders one. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX orders one", "relation": "oEffect"}}
{"generation": "PersonX is short on money. The effect on PersonX will be similar to that of a normal person", "references": ["PersonX is unable to purchase the product", "Person X holds off buying things.", "pays off debts", "gets a loan", "Person X tries to get a job.", "PersonX is chased out of the store"], "input": {"head": "PersonX is short on money", "relation": "xEffect"}}
{"generation": "PersonX crosses the ___ to get. PersonX is the one who gets the ___", "references": ["capable", "finished", "motivated", "excited", "done", "interested"], "input": {"head": "PersonX crosses the ___ to get", "relation": "xAttr"}}
{"generation": "PersonX rides every ride. PersonX is a very good rider", "references": ["stimulated", "Daring", "playful", "Funloving"], "input": {"head": "PersonX rides every ride", "relation": "xAttr"}}
{"generation": "PersonX beats around the bush. The effect on PersonX will be similar to that of a normal person", "references": ["stutters", "looks down", "twitches nervously", "turns away", "avoids eye contact"], "input": {"head": "PersonX beats around the bush", "relation": "xEffect"}}
{"generation": "PersonX shakes PersonY's heads. PersonX will be the one who gets the most attention", "references": ["happy to meet them", "recognized"], "input": {"head": "PersonX shakes PersonY's heads", "relation": "xReact"}}
{"generation": "PersonX goes home and rest. After that, he goes to the hospital", "references": ["PersonX falls asleep for five hours"], "input": {"head": "PersonX goes home and rest", "relation": "isBefore"}}
{"generation": "PersonX breaks PersonY heart. PersonX did this to me", "references": ["to be mean", "none", "to kill that person", "to irritate that person"], "input": {"head": "PersonX breaks PersonY heart", "relation": "xIntent"}}
{"generation": "PersonX practices for weeks. The effect on PersonX will be measured by the following:\n\nPersonX's", "references": ["becomes well versed", "becomes a master in the art.", "PersonX gets exercise", "improves skills", "gets tired", "PersonX makes the team"], "input": {"head": "PersonX practices for weeks", "relation": "xEffect"}}
{"generation": "PersonX forgets PersonY's wallet. The effect on PersonX will be reversed", "references": ["PersonX sweats from nervousness", "PersonX is yelled at", "PersonX gasps in fear while thinking of the lost wallet.", "PersonX shakes and frantically searches the restaurant for the wallet they forgot."], "input": {"head": "PersonX forgets PersonY's wallet", "relation": "xEffect"}}
{"generation": "PersonX beats ___ easily. PersonX is a very good player", "references": ["powerful", "accomplished", "strong", "talented", "confident", "competetive", "skilled"], "input": {"head": "PersonX beats ___ easily", "relation": "xAttr"}}
{"generation": "PersonX keeps PersonY from starving. After, PersonX will want to kill PersonY", "references": ["to give Person Y some money for food.", "eat himself", "to get more food for Person Y.", "prepare other needs of PersonY"], "input": {"head": "PersonX keeps PersonY from starving", "relation": "xWant"}}
{"generation": "PersonX takes place as a result. PersonX did this to make the game more interesting", "references": ["to rule the country"], "input": {"head": "PersonX takes place as a result", "relation": "xIntent"}}
{"generation": "PersonX watches for PersonY opportunity. The effect on PersonX will be the same as the effect on PersonY", "references": ["PersonX is patient", "makes his move", "stares", "none", "PersonX stares at PersonY"], "input": {"head": "PersonX watches for PersonY opportunity", "relation": "xEffect"}}
{"generation": "PersonX gets it to work. After, others will want to know what's going on", "references": ["to help carry it into work building", "none", "to help take it out of personX's car"], "input": {"head": "PersonX gets it to work", "relation": "oWant"}}
{"generation": "PersonX thinks would become. The effect on PersonX will be similar to the effect on Person X", "references": ["PRACTICE", "SPEND LOT OF TIME", "NONE", "none", "draws on aboard", "writes on a notebook"], "input": {"head": "PersonX thinks would become", "relation": "xEffect"}}
{"generation": "PersonX always makes. The effect on PersonX will be the same as the effect on PersonX", "references": ["none"], "input": {"head": "PersonX always makes", "relation": "xEffect"}}
{"generation": "PersonX is walking down the street. After, PersonX will want to talk to you", "references": ["deliver something", "to go to the mall", "to get exercise", "buy something", "to go home", "to get something to eat"], "input": {"head": "PersonX is walking down the street", "relation": "xWant"}}
{"generation": "PersonX pulls PersonY's hand. Before, PersonX needs to be able to see PersonY's hand, but", "references": ["to touch", "He goes to the store.", "to be with him", "to be near", "He goes to the wrong person.", "to grab his hand"], "input": {"head": "PersonX pulls PersonY's hand", "relation": "xNeed"}}
{"generation": "a hose can be used for a hose that is not attached to the hose", "references": ["spray water", "collect liquid", "water the plant", "deliver the water", "spray the water", "get water from", "have something to use to water", "wet the ground", "spray the truck with", "To spray", "feed the garden", "fill the receptacle", "get the water from", "fill the can", "spray on the fire", "spray the grass", "coil up into a creative outdoor basket", "use as a climbing rope", "direct the hydration", "connect device to water source", "rinse off fruit", "water the area", "spray the car", "spray water on them", "dispense moisture", "fill it with water", "water the flowers", "Spray plants with", "water the plants", "move the water", "get liquid from", "water the plants with", "put inside", "attach to the spigot", "spray on flowers", "try to put the fire out", "drain a fish tank", "aim at plants", "wash the space", "water lawns", "draw liquid", "jump rope with", "hook up paint gun", "drownd out the fire", "spray out water", "to water the seeds", "give the seeds water", "add water", "put out fire", "get the water or the plants", "hook up to the faucet", "siphon gasoline", "deliver liquid to the plants", "fill the pool", "rope off a yard to keep people off of the lawn.", "rinse off floor", "secure furniture while moving", "transport the water", "take up", "spray water from", "fill up the bucket"], "input": {"head": "hose", "relation": "ObjectUse"}}
{"generation": "PersonX wants another one. After that, he'll be able to get a new one", "references": ["PersonX orders a second serving"], "input": {"head": "PersonX wants another one", "relation": "isBefore"}}
{"generation": "PersonX asks anyone. PersonX will be the one to answer", "references": ["confused about the answer"], "input": {"head": "PersonX asks anyone", "relation": "xReact"}}
{"generation": "PersonX drops ___ on the floor is filled by a large, red-haired man", "references": ["Apples", "pizza", "Balls", "food", "Eggs", "their shirt", "a book", "flour", "socks", "a glass", "milk", "Plates", "marbles", "a plate", "candy", "their shoes", "their child", "cake", "a cellphone", "water"], "input": {"head": "PersonX drops ___ on the floor", "relation": "isFilledBy"}}
{"generation": "PersonX gets PersonX's ticket. Before that, PersonX gets PersonX's ticket", "references": ["PersonX goes online to book a flight"], "input": {"head": "PersonX gets PersonX's ticket", "relation": "isAfter"}}
{"generation": "PersonX breaks the news to PersonY. PersonX is shocked to see that PersonY is a member of", "references": ["dedicated", "resigned", "helpful", "knowledgeable", "reluctant", "sympathetic", "consoling"], "input": {"head": "PersonX breaks the news to PersonY", "relation": "xAttr"}}
{"generation": "an acid can be used for the treatment of acne", "references": ["etch glass", "destroy tissue", "etch metal", "charge mind", "ruin many things", "burn skin", "burn flesh"], "input": {"head": "acid", "relation": "ObjectUse"}}
{"generation": "PersonX gets PersonX's nails done. PersonX is a bit of a dick", "references": ["vain", "skillful", "detailed", "self absorbed", "trendy", "materialistic", "creative"], "input": {"head": "PersonX gets PersonX's nails done", "relation": "xAttr"}}
{"generation": "You are likely to find an escherichia coli in a sample of your food", "references": ["colon"], "input": {"head": "escherichia coli", "relation": "AtLocation"}}
{"generation": "a silicone can be used for a variety of purposes, including:\n\n-", "references": ["bonding", "lubricate", "making computer chips", "permanence", "lubricants", "entertainment", "varnishes", "augment breast size", "adhering", "glue", "lubrication of materials"], "input": {"head": "silicone", "relation": "ObjectUse"}}
{"generation": "PersonX calls PersonX's work. PersonX did this to me", "references": ["to inform them of an accident", "to tell them personx will not be able to make it", "to check his hours", "to call in sick."], "input": {"head": "PersonX calls PersonX's work", "relation": "xIntent"}}
{"generation": "You are likely to find a family photograph in a library or a museum that you have never seen before", "references": ["relatives house"], "input": {"head": "family photograph", "relation": "AtLocation"}}
{"generation": "PersonX is always busy. The effect on PersonX will be the same as the effect on PersonX", "references": ["looks for a way to be more efficient", "works faster", "is always stressed", "none", "has less time to do other things"], "input": {"head": "PersonX is always busy", "relation": "xEffect"}}
{"generation": "PersonX takes PersonX's outside. After, PersonX will want to go to the outside of the room", "references": ["get some fresh air", "to breath fresh air", "to go outside for a while", "to enjoy some sunshine.", "to breathe fresh air.", "walk around"], "input": {"head": "PersonX takes PersonX's outside", "relation": "xWant"}}
{"generation": "PersonX lives side by side. After, others will want to know what's going on", "references": ["to accompany him", "none", "to support hiom"], "input": {"head": "PersonX lives side by side", "relation": "oWant"}}
{"generation": "PersonX shoves PersonY back. The effect on others will be reversed", "references": ["none", "is touched", "is contacted"], "input": {"head": "PersonX shoves PersonY back", "relation": "oEffect"}}
{"generation": "PersonX uses PersonY expression. Before that, PersonX uses PersonY expression", "references": ["PersonX observes PersonY's face"], "input": {"head": "PersonX uses PersonY expression", "relation": "isAfter"}}
{"generation": "PersonX keeps ___ at bay. Before, PersonX needs to be able to use the \"I\" word to", "references": ["argue", "none", "defend"], "input": {"head": "PersonX keeps ___ at bay", "relation": "xNeed"}}
{"generation": "PersonX lies behind PersonY. After that, PersonX is the only person who can be trusted", "references": ["PersonX goes to sleep"], "input": {"head": "PersonX lies behind PersonY", "relation": "isBefore"}}
{"generation": "PersonX stays busy. After that, he's busy with his own business", "references": ["PersonX goes for a jog"], "input": {"head": "PersonX stays busy", "relation": "isBefore"}}
{"generation": "PersonX gets knocked out. PersonX will be able to use his powers to teleport to the next", "references": ["worried", "hurt", "angry", "scared", "defeated.", "confused", "tired"], "input": {"head": "PersonX gets knocked out", "relation": "xReact"}}
{"generation": "a final piece of the jigsaw can be used for the final piece of the puzzle", "references": ["push into place to complete it"], "input": {"head": "final piece of the jigsaw", "relation": "ObjectUse"}}
{"generation": "PersonX shares the food with others. Before that, he's a regular at the restaurant", "references": ["PersonX encounters a duo asking him for food"], "input": {"head": "PersonX shares the food with others", "relation": "isAfter"}}
{"generation": "PersonX presents the ___ in a manner. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "oEffect"}}
{"generation": "PersonX takes the new job. PersonX did this to make sure that the game was not too buggy", "references": ["to earn money", "to make more money", "to learn a new skill", "to make money", "to be gentle", "to advance their career", "to take a responsibility", "to be happier"], "input": {"head": "PersonX takes the new job", "relation": "xIntent"}}
{"generation": "PersonX wins the match. Before that, he is the only player to win the match", "references": ["PersonX onx enters the wrestling match", "PersonX plays volley ball with their friends", "PersonX plays"], "input": {"head": "PersonX wins the match", "relation": "isAfter"}}
{"generation": "PersonX wants to play baseball. Before that, he was a baseball player", "references": ["PersonX loves the yankees"], "input": {"head": "PersonX wants to play baseball", "relation": "isAfter"}}
{"generation": "PersonX hams it up. After that, I'll be back to work", "references": ["PersonX fails the class"], "input": {"head": "PersonX hams it up", "relation": "isBefore"}}
{"generation": "PersonX walks PersonY. As a result, others feel that PersonX is a better fit for PersonY", "references": ["refreshed", "tired"], "input": {"head": "PersonX walks PersonY", "relation": "oReact"}}
{"generation": "PersonX plans the trip. As a result, others feel that the trip is a waste of time", "references": ["happy", "none", "excited"], "input": {"head": "PersonX plans the trip", "relation": "oReact"}}
{"generation": "PersonX wears gloves. Before, PersonX needs to be able to use his hands to move", "references": ["to search the garage for them", "find gloves", "to get a pair of gloves.", "check for bugs inside them", "put gloves on", "to put the gloves on."], "input": {"head": "PersonX wears gloves", "relation": "xNeed"}}
{"generation": "PersonX covers PersonX's nakedness. Before that, he was a man who was a man who was", "references": ["PersonX wakes up"], "input": {"head": "PersonX covers PersonX's nakedness", "relation": "isAfter"}}
{"generation": "PersonX owes PersonY. The effect on PersonX will be the same as the effect on PersonY", "references": ["money", "hugs", "needs money", "none", "is in debt"], "input": {"head": "PersonX owes PersonY", "relation": "xEffect"}}
{"generation": "a mohair can be used for the following purposes:\n\n1", "references": ["make teddy bears"], "input": {"head": "mohair", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is blind and can't see rainbows.", "Others have dashed PersonX's dreams and hopes.", "It is dark out.", "The sky is completely sunny.", "PersonX is bed ridden for ever."], "input": {"head": "PersonX chases rainbows", "relation": "HinderedBy"}}
{"generation": "PersonX has PersonX's fingers in many pies. Before that, he was a very good cook", "references": ["PersonX eats pie"], "input": {"head": "PersonX has PersonX's fingers in many pies", "relation": "isAfter"}}
{"generation": "PersonX prevents ___ from entering. PersonX will be removed from the game", "references": ["pleased"], "input": {"head": "PersonX prevents ___ from entering", "relation": "xReact"}}
{"generation": "PersonX looks both ways. Before, PersonX needs to be able to talk to people, and then he", "references": ["to leave store", "none", "to walk to street"], "input": {"head": "PersonX looks both ways", "relation": "xNeed"}}
{"generation": "PersonX says sure. Before, PersonX needs to be able to use the same abilities as the player", "references": ["none"], "input": {"head": "PersonX says sure", "relation": "xNeed"}}
{"generation": "PersonX builds castles in the air. PersonX is a game about building castles in the air", "references": ["magical", "odd", "constructive", "engaged", "entertained", "creative"], "input": {"head": "PersonX builds castles in the air", "relation": "xAttr"}}
{"generation": "PersonX sits next to PersonY in class. Before that, she's in the middle of a conversation with a", "references": ["PersonX walks in the classroom"], "input": {"head": "PersonX sits next to PersonY in class", "relation": "isAfter"}}
{"generation": "PersonX gives PersonY PersonX's name. PersonX is the name of the person who is the most important", "references": ["emotional", "helpful", "influential", "authoritative", "caring", "traditional"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xAttr"}}
{"generation": "PersonX falls on PersonY. PersonX will be the one who gets the most points", "references": ["sorry", "embarrassed", "happy", "dumb"], "input": {"head": "PersonX falls on PersonY", "relation": "xReact"}}
{"generation": "PersonX holds onto nothing. Before that, he's just a guy who's just trying to", "references": ["PersonX falls over"], "input": {"head": "PersonX holds onto nothing", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can never remember their lines", "PersonX's mom will not take them to acting class.", "Person X doesn't remember lines that well.", "PersonX does not have an agent.", "The casting director will not hire PersonX.", "PersonX has terrible stagefright", "Person X can't read the lines, Person  X  is illiterate.", "PersonX is not good at acting."], "input": {"head": "PersonX becomes an actor", "relation": "HinderedBy"}}
{"generation": "PersonX soothes PersonY. PersonX is the only person who can see PersonY", "references": ["nice", "selfless", "helpful", "providing", "affectionate"], "input": {"head": "PersonX soothes PersonY", "relation": "xAttr"}}
{"generation": "a banana can be used for a variety of purposes, including:\n\n\u2022", "references": ["make a shake", "give to the monkey", "eating", "add to a hat to make a costume", "eat by itself", "give to a monkey", "add to the concotion", "make up part of a healthy smoothy", "eat on cereal", "throw peel on floor", "throw at a naughty child", "add to make a facemask"], "input": {"head": "banana", "relation": "ObjectUse"}}
{"generation": "PersonX waits tables. As a result, others feel the same way", "references": ["none", "helped", "clean"], "input": {"head": "PersonX waits tables", "relation": "oReact"}}
{"generation": "PersonX is at PersonY's grandmother's house. The effect on PersonX will be similar to that of PersonY's", "references": ["sits down", "talks to Person Y's grandmother"], "input": {"head": "PersonX is at PersonY's grandmother 's house", "relation": "xEffect"}}
{"generation": "PersonX blows this popsicle stand. The effect on others will be similar to the one on the other side of the", "references": ["none"], "input": {"head": "PersonX blows this popsicle stand", "relation": "oEffect"}}
{"generation": "PersonX gives PersonY what-for. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to teach a lesson"], "input": {"head": "PersonX gives PersonY what-for", "relation": "xIntent"}}
{"generation": "PersonX walks to the grocery store. Before that, he's seen in the background", "references": ["PersonX makes a grocery list"], "input": {"head": "PersonX walks to the grocery store", "relation": "isAfter"}}
{"generation": "PersonX tests PersonX's ability. Before, PersonX needs to know the name of the person who is the target", "references": ["none"], "input": {"head": "PersonX tests PersonX's ability", "relation": "xNeed"}}
{"generation": "PersonX walks to PersonY's car. The effect on others will be similar to that of a normal car", "references": ["none", "gives personX a ride", "allows personX to drive"], "input": {"head": "PersonX walks to PersonY's car", "relation": "oEffect"}}
{"generation": "PersonX finds something. Before that, he's been working on a new game", "references": ["PersonX pans for gold"], "input": {"head": "PersonX finds something", "relation": "isAfter"}}
{"generation": "PersonX means ___ to people. After, others will want to know what you're doing", "references": ["to hang out with x", "to tell x about it", "to feel loved", "none", "to enjoy the attention"], "input": {"head": "PersonX means ___ to people", "relation": "oWant"}}
{"generation": "PersonX comes into being. Before that, he was a member of the team that won the", "references": ["PersonX is conceived"], "input": {"head": "PersonX comes into being", "relation": "isAfter"}}
{"generation": "PersonX conceals PersonY's identity. PersonX did this to prevent PersonY from being able to use the same", "references": ["to keep persony out of trouble", "to help person y.", "to help persony steal something.", "to keep persony away from criminals.", "to be secretive", "to be respectful"], "input": {"head": "PersonX conceals PersonY's identity", "relation": "xIntent"}}
{"generation": "PersonX goes rock climbing. Before that, he was a member of the band The Black Keys", "references": ["PersonX is camping in the wilderness"], "input": {"head": "PersonX goes rock climbing", "relation": "isAfter"}}
{"generation": "You are likely to find a gutter in a lot of places", "references": ["roof", "street"], "input": {"head": "gutter", "relation": "AtLocation"}}
{"generation": "PersonX keeps a straight face. PersonX is a very good person, but he's not a", "references": ["brave", "hiding something", "Self controlled", "agreeable", "Practiced", "unresponsive"], "input": {"head": "PersonX keeps a straight face", "relation": "xAttr"}}
{"generation": "PersonX reaches PersonX's potential. After, others will want to know what PersonX is doing", "references": ["none"], "input": {"head": "PersonX reaches PersonX's potential", "relation": "oWant"}}
{"generation": "PersonX throws some bread. Before that, he throws a bunch of bread", "references": ["PersonX bakes some bread", "PersonX picks up a piece of bread"], "input": {"head": "PersonX throws some bread", "relation": "isAfter"}}
{"generation": "PersonX returns the next day. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX returns the next day", "relation": "oEffect"}}
{"generation": "PersonX is PersonY's boyfriend. The effect on others will be similar to that of PersonY's boyfriend", "references": ["none", "beyond grateful to be with PersonX.", "becomes secure being with PersonX."], "input": {"head": "PersonX is PersonY's boyfriend", "relation": "oEffect"}}
{"generation": "PersonX studies for PersonX's exam. PersonX did this to help me understand the difference between PersonX and Person", "references": ["to be prepared", "to be sure they get a good grade", "to do well", "to get a good grade"], "input": {"head": "PersonX studies for PersonX's exam", "relation": "xIntent"}}
{"generation": "PersonX pays very well. Before that, he was a very good player", "references": ["PersonX hires employees"], "input": {"head": "PersonX pays very well", "relation": "isAfter"}}
{"generation": "You are likely to find a new artwork in a new location", "references": ["gallery opening"], "input": {"head": "new artwork", "relation": "AtLocation"}}
{"generation": "PersonX hats cats. Before, PersonX needs to be able to use the hat to interact with cats", "references": ["She needs to buy feline food", "She needs to pick out a pet"], "input": {"head": "PersonX hats cats", "relation": "xNeed"}}
{"generation": "PersonX watches the kids. PersonX did this to me", "references": ["to make sure they're safe", "to be the responsible parent", "to make sure they are okay"], "input": {"head": "PersonX watches the kids", "relation": "xIntent"}}
{"generation": "PersonX says PersonY's goodbyes. Before that, he says that he's going to be a good", "references": ["PersonX decides to move to another state"], "input": {"head": "PersonX says PersonY's goodbyes", "relation": "isAfter"}}
{"generation": "PersonX achieves PersonY level. PersonX will be able to perform the following actions:\n\n1", "references": ["happy.", "happy"], "input": {"head": "PersonX achieves PersonY level", "relation": "xReact"}}
{"generation": "an amanda can be used for the purpose of making a new life for yourself", "references": ["start business"], "input": {"head": "amanda", "relation": "ObjectUse"}}
{"generation": "PersonX completes PersonY's task. Before that, you can use the same method to get PersonX", "references": ["PersonX helps PersonY with a chore"], "input": {"head": "PersonX completes PersonY's task", "relation": "isAfter"}}
{"generation": "PersonX runs straight. Before, PersonX needs to be able to run a program that can run on", "references": ["none", "to stay on a path", "to of started running"], "input": {"head": "PersonX runs straight", "relation": "xNeed"}}
{"generation": "PersonX smells something terrible. After that, he's just a normal guy", "references": ["PersonX walks out immediately"], "input": {"head": "PersonX smells something terrible", "relation": "isBefore"}}
{"generation": "PersonX talks to PersonY again. After, others will want to know what's going on", "references": ["Call Person X", "talk", "leave class", "Stay friend with Person X", "talk with PersonX", "avoid PersonX", "make plans"], "input": {"head": "PersonX talks to PersonY again", "relation": "oWant"}}
{"generation": "PersonX finally convinced. Before that, he had to convince the other members of the group", "references": ["PersonX listens to a expert"], "input": {"head": "PersonX finally convinced", "relation": "isAfter"}}
{"generation": "PersonX shares PersonY. PersonX is a member of the same family as PersonY", "references": ["feelings", "polite", "generous", "selfless", "giving", "memories"], "input": {"head": "PersonX shares PersonY", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have a way to commit the act", "PersonX can't get inside PersonY's home"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "HinderedBy"}}
{"generation": "PersonX uses ___ to provide is filled by the user's own name", "references": ["money", "knowledge", "clothing", "food"], "input": {"head": "PersonX uses ___ to provide", "relation": "isFilledBy"}}
{"generation": "PersonX meets customers'___. PersonX will be the first person to buy the product", "references": ["good", "like a good worker"], "input": {"head": "PersonX meets customers ' ___", "relation": "xReact"}}
{"generation": "PersonX takes PersonX's stand. After, PersonX will want to know what the hell is going on", "references": ["to show strength", "win the case", "get compensated", "to defend beliefs"], "input": {"head": "PersonX takes PersonX's stand", "relation": "xWant"}}
{"generation": "PersonX asks PersonY to sign. Before that, PersonY asks PersonX to sign", "references": ["PersonX starts a petition"], "input": {"head": "PersonX asks PersonY to sign", "relation": "isAfter"}}
{"generation": "PersonX runs laps. Before, PersonX needs to run laps", "references": ["to go to the track", "shoes", "to put on her running gear", "none", "to go outside"], "input": {"head": "PersonX runs laps", "relation": "xNeed"}}
{"generation": "PersonX closes behind PersonY. After that, PersonX is able to use the same ability to", "references": ["PersonX taps PersonY's bumper to drive them off the road"], "input": {"head": "PersonX closes behind PersonY", "relation": "isBefore"}}
{"generation": "PersonX impresses by PersonY's work. The effect on PersonX will be similar to that of PersonY's, but Person", "references": ["none"], "input": {"head": "PersonX impresses by PersonY's work", "relation": "xEffect"}}
{"generation": "PersonX takes liberties. PersonX did this to me", "references": ["to feel powerful and demean others"], "input": {"head": "PersonX takes liberties", "relation": "xIntent"}}
{"generation": "PersonX spends ___ in prayer. PersonX is a very good person, but he's not a", "references": ["Wise", "religious", "pious", "faithful", "caring", "devoted", "Concerned"], "input": {"head": "PersonX spends ___ in prayer", "relation": "xAttr"}}
{"generation": "PersonX studies as much. The effect on others will be more pronounced if you are a member of the same", "references": ["none"], "input": {"head": "PersonX studies as much", "relation": "oEffect"}}
{"generation": "PersonX uses PersonY's middle finger. The effect on PersonX will be similar to the effect on PersonY", "references": ["gets scoffed at", "gets pulled away from", "feel the best friends", "so like that honest", "none"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "xEffect"}}
{"generation": "PersonX calls PersonY's work. The effect on PersonX will be the same as the effect on PersonY", "references": ["hangs up", "Makes a judgement about the quality of the work.", "Evaluates person Y's work", "is answered by a secretary", "listens", "talks to personY"], "input": {"head": "PersonX calls PersonY's work", "relation": "xEffect"}}
{"generation": "PersonX dyes PersonY's hair red. The effect on others will be different", "references": ["tips the hairdresser", "PersonY feels happy", "PersonY looks at new hair color", "PersonY feels bold", "smiles", "thanks person X", "sees himself in the mirror"], "input": {"head": "PersonX dyes PersonY's hair red", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person x bit their tongue and now it is too painful to hollar", "Person X has food in their mouth", "PersonY was too far away.", "Person x forgot the other person's name", "PersonX lost voice.", "Person x has strep throat and has lost their voice", "Person x doesn't want to be loud and wake the baby", "Person X lost their voice"], "input": {"head": "PersonX calls out PersonY's name", "relation": "HinderedBy"}}
{"generation": "PersonX romps home. PersonX did this to me", "references": ["to be victorious", "to get home"], "input": {"head": "PersonX romps home", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The tree is a toy smaller than PersonX.", "it will hurt", "PersonX cannot climb the tree.", "PersonX is wearing a protective rig.", "PersonX needs help walking.", "they don't want injuries"], "input": {"head": "PersonX falls from the tree", "relation": "HinderedBy"}}
{"generation": "You are likely to find a curator in a museum or museum of art, or a museum of", "references": ["gallery opening", "museum"], "input": {"head": "curator", "relation": "AtLocation"}}
{"generation": "PersonX follows the recipe. PersonX will be able to use the recipe to create a new character", "references": ["happy", "chef like"], "input": {"head": "PersonX follows the recipe", "relation": "xReact"}}
{"generation": "PersonX gives PersonX's name. PersonX will be the name of the person who is the first person", "references": ["happy."], "input": {"head": "PersonX gives PersonX's name", "relation": "xReact"}}
{"generation": "PersonX changes ___ quickly. The effect on others will be different", "references": ["none", "might get in a vehicle accident if PersonX's quick change in direction is while driving a car", "a cop might need to pull over PersonX an give him a ticket if PersonX broke any traffic laws"], "input": {"head": "PersonX changes ___ quickly", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have money to buy ingredients.", "The blender no longer works.", "They have no blender.", "PersonX's friend broke PersonX's blender.", "PersonX's daughter ate all of their fruit.", "PersonX has no ingredients to make a smoothie.", "They have no fruit.", "PersonX doesn't have a blender."], "input": {"head": "PersonX makes smoothies", "relation": "HinderedBy"}}
{"generation": "PersonX turns back the ___ is filled by the ___", "references": ["clock", "page"], "input": {"head": "PersonX turns back the ___", "relation": "isFilledBy"}}
{"generation": "PersonX lifts PersonY's arms. PersonX is holding PersonY's hand", "references": ["social", "playful", "helpful", "friendly", "knowledgeable", "confident", "controlling"], "input": {"head": "PersonX lifts PersonY's arms", "relation": "xAttr"}}
{"generation": "PersonX kisses PersonY cheek. The effect on PersonX will be similar to that of a kiss", "references": ["they express love", "looks her in the eyes", "they express feel", "none", "smells her hair"], "input": {"head": "PersonX kisses PersonY cheek", "relation": "xEffect"}}
{"generation": "PersonX provides PersonY introduction. After that, you can use PersonX to create a new Person", "references": ["PersonX puts down PersonY's phone number on the phone"], "input": {"head": "PersonX provides PersonY introduction", "relation": "isBefore"}}
{"generation": "PersonX renews within days. After, others will want to renew", "references": ["none"], "input": {"head": "PersonX renews within days", "relation": "oWant"}}
{"generation": "PersonX saves PersonX's breath. As a result, others feel the same way", "references": ["none", "grateful"], "input": {"head": "PersonX saves PersonX's breath", "relation": "oReact"}}
{"generation": "PersonX would like. As a result, others feel that the game is too much of a mess", "references": ["none"], "input": {"head": "PersonX would like", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has to go to work.", "PersonX's wife is making him go.", "PersonX has an obligation to go to a meeting.", "PersonX's dad will kill him if he is late.", "PersonX's was gifted a car by his boss that is too fast."], "input": {"head": "PersonX never got around", "relation": "HinderedBy"}}
{"generation": "PersonX splashes ___ on PersonX's face. The effect on others will be reversed", "references": ["gets wet", "wakes up", "none"], "input": {"head": "PersonX splashes ___ on PersonX's face", "relation": "oEffect"}}
{"generation": "PersonX orders ___ at the restaurant. PersonX will be the one who orders the ___", "references": ["satsified", "hungry", "like they are going to have a good meal"], "input": {"head": "PersonX orders ___ at the restaurant", "relation": "xReact"}}
{"generation": "PersonX loves PersonY with all my heart. Before, PersonX needs to be a little more specific about what he wants to", "references": ["to do special things for PersonY", "to meet PersonY", "to fall in love with Person Y.", "to know Person Y.", "to talk with PersonY over time", "to go on dates with PersonY"], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "xNeed"}}
{"generation": "PersonX learns the printer's ___. After, others will want to know what the printer is doing", "references": ["none"], "input": {"head": "PersonX learns the printer 's ___", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is wearing protective eye gear.", "Person X does not know what to say to Person Y.", "PersonY told PersonX to stop.", "Person Y does not listen to person X.", "PersonX is tied up.", "PersonY is determined to watch to the end."], "input": {"head": "PersonX tears PersonY's eyes away", "relation": "HinderedBy"}}
{"generation": "PersonX orders a salad. After that, he orders a salad", "references": ["PersonX asks for the bill"], "input": {"head": "PersonX orders a salad", "relation": "isBefore"}}
{"generation": "PersonX goes to PersonY's place. The effect on PersonX will be the same as the effect on PersonY", "references": ["knocks on the door", "waits outside", "none"], "input": {"head": "PersonX goes to PersonY's place", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no money.", "PersonY doesn't like dogs", "PersonX doesn't have any money", "PersonY is allergic to dogs.", "PersonY does not have time to care for a pet.", "PersonY is not okay with this."], "input": {"head": "PersonX buys PersonY a dog", "relation": "HinderedBy"}}
{"generation": "PersonX reminds PersonX of PersonY. PersonX is the only person who can see PersonX's face", "references": ["Observant", "reming", "nostalgic", "observant", "Sentimental", "forgot"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "xAttr"}}
{"generation": "a network can be used for a variety of purposes, including:\n\n\u2022", "references": ["find a job", "ask around", "watch tv shows on", "connect to the internet", "create a work crew", "sign in", "to watch the nightly news", "obtain references", "connect with people", "join to meet people"], "input": {"head": "network", "relation": "ObjectUse"}}
{"generation": "PersonX is someone else's ___. Before, PersonX needs to be a member of the ___", "references": ["none", "plan on how to take turn", "ask for turn"], "input": {"head": "PersonX is someone else 's ___", "relation": "xNeed"}}
{"generation": "PersonX finds PersonY explanation. The effect on PersonX will be shown in the following table", "references": ["none", "is offended", "it changes his mind"], "input": {"head": "PersonX finds PersonY explanation", "relation": "xEffect"}}
{"generation": "You are likely to find a protestor in a car or a bus, or a person who is", "references": ["demonstration"], "input": {"head": "protestor", "relation": "AtLocation"}}
{"generation": "PersonX spends ___ at the beach. As a result, others feel like they're being watched", "references": ["none"], "input": {"head": "PersonX spends ___ at the beach", "relation": "oReact"}}
{"generation": "PersonX spends almost an hour. After, PersonX will want to know what the other person is doing", "references": ["to finally do something else", "to give up"], "input": {"head": "PersonX spends almost an hour", "relation": "xWant"}}
{"generation": "PersonX spends the ___ at PersonY's house. As a result, others feel that PersonX is a bad person", "references": ["happy", "appreciated", "content", "loved", "good", "special"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "oReact"}}
{"generation": "PersonX starts working out. Before, PersonX needs to be able to talk to people", "references": ["List working materiel", "get dressed in workout clothes", "Planning how to work", "to not be working out", "to have urge to work out", "go to location to work out"], "input": {"head": "PersonX starts working out", "relation": "xNeed"}}
{"generation": "PersonX visits a farm. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX visits a farm", "relation": "oEffect"}}
{"generation": "PersonX begs PersonX's parents for one. The effect on PersonX will be similar to that of a normal person", "references": ["kneels down", "achieved his goal", "cries", "got a positive result", "shouts", "person x doesnt get what they want", "stresses out"], "input": {"head": "PersonX begs PersonX's parents for one", "relation": "xEffect"}}
{"generation": "PersonX loves shoes. The effect on PersonX will be similar to that of a shoe", "references": ["show to others", "PersonX learns about shoes in detail", "learn about shoes", "made a shoe company", "PersonX is given new shoes", "buy shoes"], "input": {"head": "PersonX loves shoes", "relation": "xEffect"}}
{"generation": "PersonX misses ___ at work. After, others will want to know what's going on", "references": ["him to finish the project", "none", "to extract more work from him"], "input": {"head": "PersonX misses ___ at work", "relation": "oWant"}}
{"generation": "PersonX looks PersonX's ___ in the face is filled by the same thing", "references": ["lizard", "camera"], "input": {"head": "PersonX looks PersonX's ___ in the face", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is a very depressed person.", "PersonX has anxiety.", "The area kids keep setting off fireworks late at night", "PersonX's date took them to watch a horror film"], "input": {"head": "PersonX is n't scared anymore", "relation": "HinderedBy"}}
{"generation": "PersonX makes PersonX's mark. PersonX is a character who is a member of the group", "references": ["capable", "successful", "focused", "proud", "supportive", "creative"], "input": {"head": "PersonX makes PersonX's mark", "relation": "xAttr"}}
{"generation": "square is a great place to start", "references": ["four right angles", "four equal sides", "four corners", "four sides"], "input": {"head": "square", "relation": "HasProperty"}}
{"generation": "PersonX throws ___ at the wall. The effect on PersonX will be permanent", "references": ["releases object from hands", "to throws noisy at the wall", "makes a mess", "to wall plays comes there"], "input": {"head": "PersonX throws ___ at the wall", "relation": "xEffect"}}
{"generation": "PersonX arrives soon. PersonX will be the first to arrive", "references": ["happy", "accomplished", "puntual", "relieved"], "input": {"head": "PersonX arrives soon", "relation": "xReact"}}
{"generation": "PersonX throws the ball. After, PersonX will want to throw the ball", "references": ["begin playing a sport", "to see who has the ball and what is happening next", "to play catch with friends", "to be prepared to catch the ball again", "to win a ball game", "have someone throw sports equipment back"], "input": {"head": "PersonX throws the ball", "relation": "xWant"}}
{"generation": "PersonX squares PersonY's shoulders. PersonX did this to me", "references": ["the person to relax", "to have better posture", "to sit up straight", "to invoke confidence"], "input": {"head": "PersonX squares PersonY's shoulders", "relation": "xIntent"}}
{"generation": "PersonX indicates PersonY intention. After that, the user can choose to use the \"PersonX", "references": ["PersonX helps PersonY ask for a snack"], "input": {"head": "PersonX indicates PersonY intention", "relation": "isBefore"}}
{"generation": "PersonX broadens PersonY's ___ to include is filled by a new PersonY", "references": ["file", "bag"], "input": {"head": "PersonX broadens PersonY's ___ to include", "relation": "isFilledBy"}}
{"generation": "PersonX goes to the doctor's office. After that, he goes to the hospital", "references": ["PersonX is prescribed cough medicine", "PersonX gets a prescription filled and goes home", "PersonX gets a prescription from the doctor and PersonX goes to the drug store"], "input": {"head": "PersonX goes to the doctor 's office", "relation": "isBefore"}}
{"generation": "PersonX wins some money. After, PersonX will want to know who the other person is", "references": ["to spend it", "spend his winnings", "gamble some more", "to save it"], "input": {"head": "PersonX wins some money", "relation": "xWant"}}
{"generation": "PersonX becomes very sick. After that, he is able to get back to normal", "references": ["PersonX vows to never eat bad meat again"], "input": {"head": "PersonX becomes very sick", "relation": "isBefore"}}
{"generation": "PersonX pierces PersonX's ears. The effect on PersonX will be reversed if PersonX is in the same room as", "references": ["winces", "ears bleed for a bit", "bleeds", "has pierced ears"], "input": {"head": "PersonX pierces PersonX's ears", "relation": "xEffect"}}
{"generation": "PersonX studies for PersonX's math test. PersonX is a student at the University of California, Berkeley", "references": ["studious", "responsible"], "input": {"head": "PersonX studies for PersonX's math test", "relation": "xAttr"}}
{"generation": "PersonX enjoys PersonY's class. The effect on PersonX will be similar to that of PersonY's", "references": ["Is energized by new information", "PersonX listens attentively", "wants to take another class", "learns a lot", "PersonX smiles", "Learns new things"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xEffect"}}
{"generation": "PersonX helps the ___ along. After, PersonX will want to know what the ___ is doing", "references": ["to celebrate", "to scream with joy"], "input": {"head": "PersonX helps the ___ along", "relation": "xWant"}}
{"generation": "PersonX gives PersonY help. The effect on PersonX will be the same as PersonY's effect on PersonY", "references": ["is thanked", "gets thanks", "see's personY do well", "gets a hug"], "input": {"head": "PersonX gives PersonY help", "relation": "xEffect"}}
{"generation": "PersonX comes into PersonX's own. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX comes into PersonX's own", "relation": "oWant"}}
{"generation": "PersonX takes a hike. After that, he's back in the woods", "references": ["PersonX climbs to the peak of the mountain"], "input": {"head": "PersonX takes a hike", "relation": "isBefore"}}
{"generation": "PersonX finds ___ to play with is filled by a man named \"Mr", "references": ["ball", "food", "board games", "dogs", "toys", "friends", "rc car", "cards", "bike", "puppies"], "input": {"head": "PersonX finds ___ to play with", "relation": "isFilledBy"}}
{"generation": "PersonX looks different. After, PersonX will want to know what the other person is doing", "references": ["take a photograph of themself", "to change their apperance", "go out on the town", "to have fun", "to do something different", "to be different from others"], "input": {"head": "PersonX looks different", "relation": "xWant"}}
{"generation": "PersonX puts ___ in PersonY's backpack. After, PersonX will want to go to the next room and pick up the backpack", "references": ["To have the right supplies", "to surprise PersonY", "to close PersonY's backpack", "to tell PersonY what they have done", "To be prepared", "to sneak away"], "input": {"head": "PersonX puts ___ in PersonY's backpack", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no money to buy pizza", "PersonX has a food allergy.", "It's too hot.", "PersonX's friend ate all the pizza", "PersonX has no pizza available", "The employee won't giver PersonX pizza if he doesn't have money", "It isn't done yet.", "The pizza belongs to someone else.", "PersonX has no teeth", "PersonX is allergic to cheese"], "input": {"head": "PersonX eats the pizza", "relation": "HinderedBy"}}
{"generation": "PersonX sends PersonY off. PersonX did this to PersonY, and PersonY did this to Person", "references": ["say goodbye"], "input": {"head": "PersonX sends PersonY off", "relation": "xIntent"}}
{"generation": "PersonX throws PersonX's hat in the ring. The effect on others will be reversed", "references": ["hits someone", "win a match", "yells at someone", "none", "get challenged"], "input": {"head": "PersonX throws PersonX's hat in the ring", "relation": "oEffect"}}
{"generation": "PersonX takes PersonY everywhere. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX takes PersonY everywhere", "relation": "oEffect"}}
{"generation": "PersonX looks like new. As a result, others feel that the game is too much of a mess", "references": ["none"], "input": {"head": "PersonX looks like new", "relation": "oReact"}}
{"generation": "PersonX runs straight. The effect on PersonX will be similar to that of a normal character", "references": ["drink water", "stops to take a rest", "have rest", "stopping running", "runs straight again"], "input": {"head": "PersonX runs straight", "relation": "xEffect"}}
{"generation": "PersonX puts out to pasture. PersonX did this to me", "references": ["none", "to scrap pasture"], "input": {"head": "PersonX puts out to pasture", "relation": "xIntent"}}
{"generation": "PersonX feels relief. After, PersonX will want to know what's going on", "references": ["exercise", "have a better outlook", "get some rest", "to go home", "relax", "stretch"], "input": {"head": "PersonX feels relief", "relation": "xWant"}}
{"generation": "PersonX is a good soccer player. Before, PersonX needs to be a good soccer player", "references": ["to train hard", "to train consistently", "to practice", "to join a team", "none"], "input": {"head": "PersonX is a good soccer player", "relation": "xNeed"}}
{"generation": "PersonX loses PersonY's wallet. After, others will want to know who you are", "references": ["find wallet", "none", "put up a reward"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "oWant"}}
{"generation": "PersonX prevents PersonY's return. As a result, others feel that PersonX is too strong", "references": ["annoyed and limited.", "personx afraid of persony because of misunderstanding among them", "avoided"], "input": {"head": "PersonX prevents PersonY's return", "relation": "oReact"}}
{"generation": "PersonX feels refreshed. The effect on others will be more pronounced", "references": ["none"], "input": {"head": "PersonX feels refreshed", "relation": "oEffect"}}
{"generation": "PersonX shaves every ___. PersonX did this to me", "references": ["every night going to party", "every day iam happy"], "input": {"head": "PersonX shaves every ___", "relation": "xIntent"}}
{"generation": "PersonX thinks a lot. The effect on PersonX will be similar to that of a normal person", "references": ["falls asleep", "PersonX receives a headache", "PersonX ponders in sadness", "makes problems worse", "PersonX learns of the subject"], "input": {"head": "PersonX thinks a lot", "relation": "xEffect"}}
{"generation": "PersonX retains PersonX's position. As a result, others feel that PersonX is not a good fit for the", "references": ["sad and betrayed by a friend"], "input": {"head": "PersonX retains PersonX's position", "relation": "oReact"}}
{"generation": "PersonX walks in the room. PersonX is wearing a black shirt and black pants", "references": ["available", "straightforward", "thoughtful", "direct", "present", "apprehensive"], "input": {"head": "PersonX walks in the room", "relation": "xAttr"}}
{"generation": "PersonX alters PersonX's course. The effect on PersonX will be reversed if PersonX is not in the same class", "references": ["puts their hands in their pockets", "reads a street sign", "takes a right turn", "Person x goes to a new destination", "walks down a road for several blocks", "Person x becomes lost"], "input": {"head": "PersonX alters PersonX's course", "relation": "xEffect"}}
{"generation": "PersonX invites people. After that, they can join the group", "references": ["PersonX throws a great party"], "input": {"head": "PersonX invites people", "relation": "isBefore"}}
{"generation": "PersonX replaces the old one. As a result, others feel that the new one is better", "references": ["none"], "input": {"head": "PersonX replaces the old one", "relation": "oReact"}}
{"generation": "PersonX learns a lot. Before that, he's a very good player", "references": ["PersonX goes to college to learn about science"], "input": {"head": "PersonX learns a lot", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["it actually wasnt broken afterall", "They are afraid they will be mad.", "person Y doesnt speak english", "PersonY is out of town", "They don't have a phone", "PersonX is afraid of hurting PersonY"], "input": {"head": "PersonX tells PersonY it was broken", "relation": "HinderedBy"}}
{"generation": "PersonX makes ___ every year. Before, PersonX needs to be able to use the same tools and tools to", "references": ["to try to get something", "to gather materials", "none"], "input": {"head": "PersonX makes ___ every year", "relation": "xNeed"}}
{"generation": "PersonX reduces PersonX's dependence. PersonX will be able to use the same abilities as PersonX", "references": ["invincible.", "independent and self sufficient.", "proud"], "input": {"head": "PersonX reduces PersonX's dependence", "relation": "xReact"}}
{"generation": "PersonX finds ___ that PersonY liked. PersonX is a little more forgiving, but PersonY is a", "references": ["hopeful", "happy", "pleased"], "input": {"head": "PersonX finds ___ that PersonY liked", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's spouse is still getting ready.", "PersonX slept in too late and can't get ready on time", "PersonX is extremely disorganized", "PersonX is running late.", "PersonX isnt even dressed yet", "PersonX can't find their keys"], "input": {"head": "PersonX is ready to go", "relation": "HinderedBy"}}
{"generation": "PersonX always beat ___. PersonX is the only one who can beat PersonX", "references": ["aggressive", "cruel", "competitive"], "input": {"head": "PersonX always beat ___", "relation": "xAttr"}}
{"generation": "PersonX makes the cookies. PersonX is the owner of the cookies", "references": ["creative", "a good cook", "talented", "hungry", "prepared", "determined"], "input": {"head": "PersonX makes the cookies", "relation": "xAttr"}}
{"generation": "PersonX plays a ___ in the movement. The effect on others will be different", "references": ["lives a better life", "inspires change", "none"], "input": {"head": "PersonX plays a ___ in the movement", "relation": "oEffect"}}
{"generation": "PersonX tries again next year. Before, PersonX needs to be able to use the same abilities as the other", "references": ["to have tried this year", "be more prepared", "to have failed", "study harder", "none"], "input": {"head": "PersonX tries again next year", "relation": "xNeed"}}
{"generation": "PersonX puts ___ on the bed is filled by the same thing", "references": ["cushions", "pillows", "blanket", "pillow", "sheets", "blankets", "clothes", "boxes"], "input": {"head": "PersonX puts ___ on the bed", "relation": "isFilledBy"}}
{"generation": "PersonX teaches ___ in schools. Before, PersonX needs to be taught by a teacher who is a good person", "references": ["to get hired at a school", "to get a teaching degree"], "input": {"head": "PersonX teaches ___ in schools", "relation": "xNeed"}}
{"generation": "PersonX wipes PersonY's forehead. The effect on others will be similar to that of a normal wipe", "references": ["Y is less sweaty.", "takes a deep sigh", "relaxes", "tries to sit straight", "takes deep breath", "Y is grateful to X."], "input": {"head": "PersonX wipes PersonY's forehead", "relation": "oEffect"}}
{"generation": "PersonX puts ___ in a jar is filled by the same amount of water as the jar", "references": ["insects", "berries", "buttons", "fingers", "pickles", "pennies", "jam", "tomatoes", "fireflies", "peppers", "jelly", "coins", "water"], "input": {"head": "PersonX puts ___ in a jar", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's landlord said no bands allowed.", "PersonX has no friends", "They cant decide what genre of music they'll player", "They can't find any members", "PersonX's friends won't join them.", "PersonX doesn't know any musicians to form a band with.", "PersonX has no musical skill", "PersonX doesn't play a musical instrument."], "input": {"head": "PersonX forms a band", "relation": "HinderedBy"}}
{"generation": "PersonX spends the summer. After that, he's back in the studio", "references": ["PersonX signs up for summer school"], "input": {"head": "PersonX spends the summer", "relation": "isBefore"}}
{"generation": "PersonX stops being friends with PersonY. After, others will want to know who you are", "references": ["fight", "get angry", "to convince x to reconsider", "to apologize to x"], "input": {"head": "PersonX stops being friends with PersonY", "relation": "oWant"}}
{"generation": "PersonX leaves PersonY's car. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to go into the house", "return the favour", "to go into the store", "use the restoom in the gas station"], "input": {"head": "PersonX leaves PersonY's car", "relation": "xIntent"}}
{"generation": "PersonX meets the company's ___. The effect on others will be to make them feel like they're being treated unfairly", "references": ["has a good employee", "none", "appreciates their work"], "input": {"head": "PersonX meets the company 's ___", "relation": "oEffect"}}
{"generation": "PersonX loses track of the time. Before, PersonX needs to be able to see the time of the day,", "references": ["She's only allowed 2 hours.", "none", "She enjoys painting."], "input": {"head": "PersonX loses track of the time", "relation": "xNeed"}}
{"generation": "PersonX finally worked up. Before, PersonX needs to be able to use the same tools that he used", "references": ["to plan", "to muster up courage", "to make a decision", "to have an aim"], "input": {"head": "PersonX finally worked up", "relation": "xNeed"}}
{"generation": "PersonX passes PersonY's lips. The effect on others will be similar to that of a kiss", "references": ["none", "are startled", "feel a bit hurt by the contact"], "input": {"head": "PersonX passes PersonY's lips", "relation": "oEffect"}}
{"generation": "PersonX pays taxes. PersonX did this to make sure that the company was not going to be", "references": ["to be a law-abiding citizen", "to stay out of jail", "to be responsible.", "to follow the law", "to fulfill his duty"], "input": {"head": "PersonX pays taxes", "relation": "xIntent"}}
{"generation": "PersonX runs errands. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX runs errands", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They don't have enough money for lunch.", "They are running late for work.", "PersonX can't find a place.", "PersonX's wife packed him a lunch.", "PersonX can't afford to stop for lunch.", "PersonX is busy at work."], "input": {"head": "PersonX stops for lunch", "relation": "HinderedBy"}}
{"generation": "PersonX succeeds PersonX's father. Before that, the two of them were friends", "references": ["PersonX hears his father was killed in battle"], "input": {"head": "PersonX succeeds PersonX's father", "relation": "isAfter"}}
{"generation": "PersonX finds every ___. After, others will want to know what the ___", "references": ["to do it also", "to see what they do", "none"], "input": {"head": "PersonX finds every ___", "relation": "oWant"}}
{"generation": "PersonX studies as much as PersonY could. PersonX will be able to see the difference between PersonY and Person", "references": ["accomplished", "determined", "tired", "satisfied"], "input": {"head": "PersonX studies as much as PersonY could", "relation": "xReact"}}
{"generation": "PersonX seems better. Before, PersonX needs to be able to use the same abilities as the other", "references": ["none"], "input": {"head": "PersonX seems better", "relation": "xNeed"}}
{"generation": "PersonX walks closer. After that, he says, \"I'm sorry, but I", "references": ["PersonX hurries even faster"], "input": {"head": "PersonX walks closer", "relation": "isBefore"}}
{"generation": "hurt person can be a good thing", "references": ["wall off feelings"], "input": {"head": "hurt person", "relation": "CapableOf"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is being ignored", "PersonX has two broken arms.", "PersonX cannot find something to say", "They are too scared", "PersonX's victim walked away.", "The other person doesn't want to fight"], "input": {"head": "PersonX picks a fight", "relation": "HinderedBy"}}
{"generation": "PersonX donates ___ to charity. After, PersonX will want to donate to the charity", "references": ["balance their checkbook", "to go to the bank", "to feel satisfied", "to feel good about themselves", "to rest in their good feelings", "to tell friends what he/she did"], "input": {"head": "PersonX donates ___ to charity", "relation": "xWant"}}
{"generation": "PersonX writes PersonY's novel. Before that, he wrote the novel for the first time", "references": ["PersonX is a successful writer"], "input": {"head": "PersonX writes PersonY's novel", "relation": "isAfter"}}
{"generation": "PersonX plans the trip. The effect on PersonX will be to make the trip more difficult for the player", "references": ["PersonX buys a train ticket", "PersonX buys a map", "lands", "flies", "none"], "input": {"head": "PersonX plans the trip", "relation": "xEffect"}}
{"generation": "PersonX escorts PersonY back. The effect on others will be limited to the person who is the most likely to", "references": ["Invites X in", "makes it home", "thanks person X", "Yells", "Punch on x face", "Gets home safe"], "input": {"head": "PersonX escorts PersonY back", "relation": "oEffect"}}
{"generation": "PersonX forms PersonY image. Before that, you can use the same image to create a new", "references": ["PersonX is sculpting"], "input": {"head": "PersonX forms PersonY image", "relation": "isAfter"}}
{"generation": "PersonX unbuckles PersonY's belt. After that, you can use the same method to get the same", "references": ["PersonX lifts PersonY out of the car", "PersonX pulls PersonY to the bed to make love", "PersonX drags PersonY from the wrecked car"], "input": {"head": "PersonX unbuckles PersonY's belt", "relation": "isBefore"}}
{"generation": "PersonX watches PersonY's face. PersonX is a character in the game", "references": ["aware", "observant", "present", "thoughtful"], "input": {"head": "PersonX watches PersonY's face", "relation": "xAttr"}}
{"generation": "PersonX gains PersonY's confidence. As a result, others feel more comfortable with her", "references": ["confident", "proud", "supportive."], "input": {"head": "PersonX gains PersonY's confidence", "relation": "oReact"}}
{"generation": "PersonX meets PersonX's husband. As a result, others feel that they are being treated unfairly", "references": ["happy", "an aversion to her", "affectionate", "none", "happy as well"], "input": {"head": "PersonX meets PersonX's husband", "relation": "oReact"}}
{"generation": "PersonX plans a trip. PersonX is a member of the \"Guild of the Dead", "references": ["intellegent", "exciting", "organized", "rigid", "adventurous", "determined"], "input": {"head": "PersonX plans a trip", "relation": "xAttr"}}
{"generation": "PersonX wants to learn how to play the guitar. After, others will want to learn how to play the guitar", "references": ["none"], "input": {"head": "PersonX wants to learn how to play the guitar", "relation": "oWant"}}
{"generation": "PersonX arrives at PersonX's destination. After that, he is seen walking around the city", "references": ["PersonX goes into their destination and watches movies"], "input": {"head": "PersonX arrives at PersonX's destination", "relation": "isBefore"}}
{"generation": "PersonX buys PersonY's one. Before, PersonX needs to buy PersonY's one", "references": ["to go to the store", "Gather money", "Decide to purchase", "to collect money", "have money"], "input": {"head": "PersonX buys PersonY's one", "relation": "xNeed"}}
{"generation": "PersonX puts it in PersonX's purse. PersonX will be able to see the purse and the purse will be", "references": ["secure", "neutral", "organized", "ready", "content"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "xReact"}}
{"generation": "PersonX completes PersonX's studies. PersonX will be able to use the following skills:\n\nPerson", "references": ["very happy.", "accomplished", "enlightened"], "input": {"head": "PersonX completes PersonX's studies", "relation": "xReact"}}
{"generation": "PersonX does much better. Before that, he was a very good player, but now he", "references": ["PersonX studies for the exam"], "input": {"head": "PersonX does much better", "relation": "isAfter"}}
{"generation": "PersonX gets everything. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets everything", "relation": "oEffect"}}
{"generation": "PersonX serves PersonY faithfully. After that, we'll be working on the next chapter", "references": ["PersonX is given a bonus by PersonY for serving them"], "input": {"head": "PersonX serves PersonY faithfully", "relation": "isBefore"}}
{"generation": "PersonX loves the ___ with PersonX's heart. The effect on PersonX will be similar to the effect on Person X", "references": ["Person x has faith in something and is abke to seek comfort", "none", "Person x goes to church, temple, etc. Or otherwise practices beliefs and worship"], "input": {"head": "PersonX loves the ___ with PersonX's heart", "relation": "xEffect"}}
{"generation": "a glass container can be used for a variety of purposes", "references": ["make spaghetti sauce", "keep salad dressing in", "look nice on the counter", "fill with little fairy lights and hang from the trees in your back yard.", "put alcohol and the chopped off head of snake that attacked you.", "be a planter", "use as a pencil/pen holder", "store their weed", "use for crafts", "crush a bug", "mix some fruit juice"], "input": {"head": "glass container", "relation": "ObjectUse"}}
{"generation": "PersonX sees a snake. The effect on PersonX will be similar to that of a snake", "references": ["escapes from it", "to snake in the ground", "screams", "recoils", "yells", "to sees a snake"], "input": {"head": "PersonX sees a snake", "relation": "xEffect"}}
{"generation": "PersonX shares PersonX's experience. After, PersonX will want to know what the other person is doing", "references": ["to answer questions", "to have fun .", "to go on adventures.", "to help students with their own writing", "to experience the same thing with others", "to write about PersonX's eperience"], "input": {"head": "PersonX shares PersonX's experience", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY isn't around", "PersonX is 100 miles away from PersonY.", "The device is too big for PersonY.", "PersonY isn't laying down", "PersonX is having an operation.", "PersonY's back is too small."], "input": {"head": "PersonX lands on PersonY's back", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has to pay bills instead.", "PersonX doesn't have enough money.", "PersonX's boss fired him, so he has no money to do so.", "There are no new ones available", "PersonX needs more money first", "PersonX cannot afford to replace it", "PersonX's friend will not let him replace it.", "PersonX knows it still works fine"], "input": {"head": "PersonX replaces PersonX's old one", "relation": "HinderedBy"}}
{"generation": "PersonX adores PersonY. After, others will want to know who you are", "references": ["to be married to PersonX", "to move in with PersonX", "none"], "input": {"head": "PersonX adores PersonY", "relation": "oWant"}}
{"generation": "PersonX plays a new game. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX plays a new game", "relation": "oEffect"}}
{"generation": "PersonX brings PersonY's umbrella. After that, you can use the umbrella to move around the room", "references": ["PersonX opens PersonY's umbrell"], "input": {"head": "PersonX brings PersonY's umbrella", "relation": "isBefore"}}
{"generation": "PersonX puts the cat among the pigeons. Before that, he's a little bit more of a cat", "references": ["PersonX sees cat getting into things"], "input": {"head": "PersonX puts the cat among the pigeons", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is afraid of being a parent", "PersonX has no children.", "PersonX is sterile", "PersonY is in a coma.", "PersonY does not want to have anything to do with PersonX"], "input": {"head": "PersonX gives PersonY children", "relation": "HinderedBy"}}
{"generation": "Sometimes alcoholism causes a lot of problems, but it's not a", "references": ["stigma"], "input": {"head": "alcoholism", "relation": "Causes"}}
{"generation": "PersonX puts ___ to death is filled by the same thing", "references": ["criminals", "crickets", "birds", "enemies", "bedbugs", "heretics", "cockroaches", "bees"], "input": {"head": "PersonX puts ___ to death", "relation": "isFilledBy"}}
{"generation": "PersonX follows PersonY's instructions. The effect on PersonX will be the same as the effect on PersonY", "references": ["gets lost", "becomes a success", "gets rewarded", "gets better", "does it correclty", "is guided to complete a task"], "input": {"head": "PersonX follows PersonY's instructions", "relation": "xEffect"}}
{"generation": "PersonX keeps on truckin. Before that, he was a member of the team that won the", "references": ["PersonX needs a lot of money to pay bills"], "input": {"head": "PersonX keeps on truckin", "relation": "isAfter"}}
{"generation": "PersonX knows much. PersonX did this to me", "references": ["to feel superior", "to be informed", "to be intimidating", "to look smart", "to be educated", "none", "to be smart"], "input": {"head": "PersonX knows much", "relation": "xIntent"}}
{"generation": "PersonX drops a log. As a result, others feel that the game is too complex and too complex to", "references": ["none"], "input": {"head": "PersonX drops a log", "relation": "oReact"}}
{"generation": "PersonX gets a part time job. PersonX is a very good person, but he's not a", "references": ["capable", "responsible", "industrious"], "input": {"head": "PersonX gets a part time job", "relation": "xAttr"}}
{"generation": "PersonX loves to surf. PersonX did this to me when I was a kid", "references": ["to have fun.", "to have adventure", "to be in shape", "none"], "input": {"head": "PersonX loves to surf", "relation": "xIntent"}}
{"generation": "PersonX drives anyway. PersonX is a very good driver, but I'm not sure", "references": ["apprehensive", "stubborn", "lazy", "reactive"], "input": {"head": "PersonX drives anyway", "relation": "xAttr"}}
{"generation": "PersonX spends ___ on video games. PersonX will be playing the game for a few hours, and then", "references": ["happy", "lazy", "guilty", "like they did something but not very constructive"], "input": {"head": "PersonX spends ___ on video games", "relation": "xReact"}}
{"generation": "PersonX protects ___ from abuse. PersonX did this to me because I was a little bit of a jerk", "references": ["to be that person responsibility", "to protect"], "input": {"head": "PersonX protects ___ from abuse", "relation": "xIntent"}}
{"generation": "PersonX arches PersonY back. After, others will want to know who you are", "references": ["to make PersonX feel good", "to relax", "to relieve pressure", "to bond with PersonX"], "input": {"head": "PersonX arches PersonY back", "relation": "oWant"}}
{"generation": "PersonX tightens PersonY's arms. Before that, he's just a guy who's just a guy", "references": ["PersonX holds PersonY closely"], "input": {"head": "PersonX tightens PersonY's arms", "relation": "isAfter"}}
{"generation": "You are likely to find a terrorist in a car, or a terrorist in a truck, or", "references": ["plane"], "input": {"head": "terrorist", "relation": "AtLocation"}}
{"generation": "a dorm room can be used for a few hours a day", "references": ["study in", "have the party in", "paint", "shoot the horror movie in", "house homeless", "get peace and quiet", "house prisoners", "hide books", "house college student", "live while in school", "study"], "input": {"head": "dorm room", "relation": "ObjectUse"}}
{"generation": "PersonX chokes the chicken. After, others will want to eat it", "references": ["none"], "input": {"head": "PersonX chokes the chicken", "relation": "oWant"}}
{"generation": "PersonX comes to PersonY house. The effect on others will be different", "references": ["gets company", "gets friend", "none"], "input": {"head": "PersonX comes to PersonY house", "relation": "oEffect"}}
{"generation": "an iv fluid can be used for the treatment of the following conditions:\n\n\u2022", "references": ["stay hydrated"], "input": {"head": "iv fluid", "relation": "ObjectUse"}}
{"generation": "PersonX asks PersonX's little brother. PersonX will be able to tell you that he is a member of", "references": ["nice", "loving", "smart"], "input": {"head": "PersonX asks PersonX's little brother", "relation": "xReact"}}
{"generation": "PersonX asks PersonX's grandmother. After, others will want to know what the hell is going on", "references": ["to say yes", "to ask a question also", "to answer", "to decline the request"], "input": {"head": "PersonX asks PersonX's grandmother", "relation": "oWant"}}
{"generation": "PersonX takes it outside. Before that, he's in the middle of a fight with a", "references": ["PersonX gets into a fight with their friend", "PersonX gets too rowdy", "PersonX smells the garbage"], "input": {"head": "PersonX takes it outside", "relation": "isAfter"}}
{"generation": "PersonX walks up behind PersonY. PersonX is standing in front of PersonY, and PersonY", "references": ["careful", "obedient", "playful", "sneaky", "sly", "loving"], "input": {"head": "PersonX walks up behind PersonY", "relation": "xAttr"}}
{"generation": "PersonX gives PersonY relief. Before that, he's just a little bit more of a jerk", "references": ["PersonX sees PersonY struggling"], "input": {"head": "PersonX gives PersonY relief", "relation": "isAfter"}}
{"generation": "PersonX wants to learn how to drive. Before, PersonX needs to learn how to drive", "references": ["obtain a permit", "setup an appointment with a driving instructor", "to be the right age", "study for the test", "to be able to reach the peddles", "none"], "input": {"head": "PersonX wants to learn how to drive", "relation": "xNeed"}}
{"generation": "While going to playing, you would have to be able to see the game from the", "references": ["going home", "watching actors", "go to theatre", "walk in", "see actress", "applaud actors", "give ticket to usher", "have fun", "winning", "intermission", "say goodbye", "purchase tickets", "get playbill", "get dressed", "check tickets", "enjoyment and learning", "meet friend", "see when play listed", "watch actors", "hire taxi", "leave theater", "would sit in auditorium", "eat", "see actor", "watch characters", "sit for long time"], "input": {"head": "go to play", "relation": "HasSubEvent"}}
{"generation": "PersonX brings PersonY's umbrella. Before that, she's been a member of the team", "references": ["PersonX sees that it is raining"], "input": {"head": "PersonX brings PersonY's umbrella", "relation": "isAfter"}}
{"generation": "PersonX exceeds ___ in value. Before, PersonX needs to be able to use the same value for the same", "references": ["to not spend the acquired amount", "none", "to acquire an abundant amount"], "input": {"head": "PersonX exceeds ___ in value", "relation": "xNeed"}}
{"generation": "PersonX is hard to find. The effect on others will be different", "references": ["gives up trying to find personX", "none", "keep trying to find personX"], "input": {"head": "PersonX is hard to find", "relation": "oEffect"}}
{"generation": "PersonX babysits PersonY's cousin. After that, they're both in the same room", "references": ["PersonX earns a few extra bucks"], "input": {"head": "PersonX babysits PersonY's cousin", "relation": "isBefore"}}
{"generation": "a cartoon can be used for a variety of purposes", "references": ["entertain small children", "relax when there is nothing to do", "storyboard live action sequences", "have fun on the weekends", "be entertained by", "make porn", "let kids watch.", "make a caricature of someone", "make propaganda"], "input": {"head": "cartoon", "relation": "ObjectUse"}}
{"generation": "PersonX puts out to pasture. The effect on PersonX will be similar to that of a normal person", "references": ["becomes free", "laughs", "cries", "yes that is true", "gets relieved of responsibility", "m,ett the other person"], "input": {"head": "PersonX puts out to pasture", "relation": "xEffect"}}
{"generation": "PersonX puts PersonX's mind to it. Before that, he's just a normal person", "references": ["PersonX needs to improve their grade", "PersonX starts playing guitar", "PersonX starts a new goal"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "isAfter"}}
{"generation": "PersonX buys ___ for PersonX's house. Before, PersonX needs to buy ___ for PersonX's house", "references": ["gather the funds needed to buy an aquarium", "make money", "go to the store", "have money", "decide what to buy", "measure the space the aquarium will reside in"], "input": {"head": "PersonX buys ___ for PersonX's house", "relation": "xNeed"}}
{"generation": "PersonX suits PersonY's purposes. Before that, you can use the same character's name and likeness", "references": ["PersonX is being interviewed for a job"], "input": {"head": "PersonX suits PersonY's purposes", "relation": "isAfter"}}
{"generation": "PersonX exceeds ___ in value is filled by the value of the value of the value of the", "references": ["a sapphire", "a banknote", "a diamond"], "input": {"head": "PersonX exceeds ___ in value", "relation": "isFilledBy"}}
{"generation": "PersonX receives PersonY order. After that, PersonX receives PersonY order", "references": ["PersonX tells PersonY the total"], "input": {"head": "PersonX receives PersonY order", "relation": "isBefore"}}
{"generation": "PersonX imagines what PersonY was seeing. Before that, he was just a kid", "references": ["PersonX see PersonY in the distance"], "input": {"head": "PersonX imagines what PersonY was seeing", "relation": "isAfter"}}
{"generation": "PersonX presents ___ in a manner. As a result, others feel that they are being treated unfairly", "references": ["appeased", "none"], "input": {"head": "PersonX presents ___ in a manner", "relation": "oReact"}}
{"generation": "PersonX moves every ___. PersonX is the same as PersonX's ___", "references": ["dedicated", "fickle", "consistent", "active", "athletic", "patient"], "input": {"head": "PersonX moves every ___", "relation": "xAttr"}}
{"generation": "PersonX misses ___ to school. PersonX is not a member of the group", "references": ["Annoyed", "worried", "careless", "Rushed", "irresponsible"], "input": {"head": "PersonX misses ___ to school", "relation": "xAttr"}}
{"generation": "PersonX shields PersonY's eyes. After, PersonX will want to see PersonY's face", "references": ["\"to say \"\"guess who?\"\"", "to laugh", "to leave and go home", "make sure PersonY is okay\""], "input": {"head": "PersonX shields PersonY's eyes", "relation": "xWant"}}
{"generation": "PersonX sets PersonY off. After, others will want to know who you are", "references": ["to yell at Person X", "not let x get to them", "to push Person X", "get back at x", "none"], "input": {"head": "PersonX sets PersonY off", "relation": "oWant"}}
{"generation": "PersonX puts on PersonY's hat. After, others will want to see what's going on", "references": ["buy another", "ask for it back", "PersonY to leave their stuff alone", "to get their hat back", "their hat back", "to offer their opinion"], "input": {"head": "PersonX puts on PersonY's hat", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Their parents took their phone when they grounded them.", "The teacher confiscated their phone.", "PersonX's brother keeps personX's phone in a lock box.", "PersonX needs their phone since they're expecting an important call.", "PersonX's mom keeps his phone with her.", "PersonX doesn't want to have to search for their phone."], "input": {"head": "PersonX has lost PersonX's phone", "relation": "HinderedBy"}}
{"generation": "PersonX justifies PersonX's actions. PersonX will be punished for his actions", "references": ["validated", "justified", "good about themselves", "satisfied"], "input": {"head": "PersonX justifies PersonX's actions", "relation": "xReact"}}
{"generation": "PersonX seriously injured. Before that, he was a very good player", "references": ["PersonX has an accident skydiving"], "input": {"head": "PersonX seriously injured", "relation": "isAfter"}}
{"generation": "PersonX explains things to PersonY. PersonX will be able to see the person's face and will be", "references": ["accomplished", "smart"], "input": {"head": "PersonX explains things to PersonY", "relation": "xReact"}}
{"generation": "PersonX is PersonY's maid of honor. After, PersonX will want to know who the other maids are", "references": ["to celebrate the wedding", "to not let PersonY down", "To look beautiful", "to go to the wedding", "To dress up well", "to go home and rest"], "input": {"head": "PersonX is PersonY's maid of honor", "relation": "xWant"}}
{"generation": "PersonX takes ___ in stride. As a result, others feel more comfortable with him", "references": ["happy", "none"], "input": {"head": "PersonX takes ___ in stride", "relation": "oReact"}}
{"generation": "PersonX comes into PersonX's own. The effect on PersonX will be similar to the effect of the effect of the effect", "references": ["asserts themselves", "GET BENEFITS", "grows stronger", "FEELS GOOS"], "input": {"head": "PersonX comes into PersonX's own", "relation": "xEffect"}}
{"generation": "PersonX puts ___ on PersonY's shoulders. After, others will want to know what's going on", "references": ["to give PersonX a hi five", "to listen to PersonX", "to hug PersonX", "to protest", "to accept what PersonX is doing", "to look at PersonX"], "input": {"head": "PersonX puts ___ on PersonY's shoulders", "relation": "oWant"}}
{"generation": "PersonX shows PersonX's mother. After, others will want to know what happened to her", "references": ["Observe the thing being shown to them", "none", "Try to understand what is being shown"], "input": {"head": "PersonX shows PersonX's mother", "relation": "oWant"}}
{"generation": "PersonX meets the company's ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["hired", "earns respect", "get's considered for promotion", "gets promoted"], "input": {"head": "PersonX meets the company 's ___", "relation": "xEffect"}}
{"generation": "PersonX covers every aspect. Before, PersonX needs to be able to do a lot of things", "references": ["write an article", "none", "learn information"], "input": {"head": "PersonX covers every aspect", "relation": "xNeed"}}
{"generation": "PersonX seems larger and heavier at that elevation. As a result, others feel that the weight of the car is too heavy for", "references": ["none"], "input": {"head": "PersonX seems larger and heavier at that elevation", "relation": "oReact"}}
{"generation": "PersonX finds the shoes. PersonX did this to her, and she's not happy", "references": ["shoes that match her clothes", "none", "to wear the shoes", "she is barefoot"], "input": {"head": "PersonX finds the shoes", "relation": "xIntent"}}
{"generation": "PersonX visits PersonY's friend. Before, PersonX needs to be able to talk to PersonY, but Person", "references": ["to find out where they live", "to get transportation"], "input": {"head": "PersonX visits PersonY's friend", "relation": "xNeed"}}
{"generation": "PersonX spends ___ on video games. As a result, others feel that he's not doing enough to help them", "references": ["none"], "input": {"head": "PersonX spends ___ on video games", "relation": "oReact"}}
{"generation": "PersonX never got around. After that, he was a bit of a jerk", "references": ["PersonX is stopped by the police"], "input": {"head": "PersonX never got around", "relation": "isBefore"}}
{"generation": "PersonX remains friends. PersonX did this to me, and I'm not going to lie", "references": ["to still be friends with that person", "to be sociable"], "input": {"head": "PersonX remains friends", "relation": "xIntent"}}
{"generation": "PersonX puts PersonY in mind. Before that, I was a bit of a fan of the original", "references": ["PersonX needs to helps PersonY"], "input": {"head": "PersonX puts PersonY in mind", "relation": "isAfter"}}
{"generation": "PersonX wipes the ___ from PersonY's forehead. PersonX will be able to see the ___ from PersonY's forehead", "references": ["happy", "loving toward persony", "helpful, caring, needed", "good about themself", "satisfied"], "input": {"head": "PersonX wipes the ___ from PersonY's forehead", "relation": "xReact"}}
{"generation": "PersonX feels hopeless. PersonX will be the one who gets the most out of the game", "references": ["sad", "depressed and humiliated", "depressed"], "input": {"head": "PersonX feels hopeless", "relation": "xReact"}}
{"generation": "PersonX links together ___. After, others will want to know what the hell is going on", "references": ["none", "to learn more from the sources", "to look at his work"], "input": {"head": "PersonX links together ___", "relation": "oWant"}}
{"generation": "PersonX lets PersonY's stay home. Before that, he's in the middle of a fight with a", "references": ["PersonY experiences flu symptoms"], "input": {"head": "PersonX lets PersonY's stay home", "relation": "isAfter"}}
{"generation": "PersonX asks PersonX's sister. As a result, others feel that PersonX is a bit too much of a", "references": ["good.", "happy to be asked"], "input": {"head": "PersonX asks PersonX's sister", "relation": "oReact"}}
{"generation": "PersonX makes a mistake. After that, he's a little bit more of a jerk", "references": ["PersonX erases the mistake"], "input": {"head": "PersonX makes a mistake", "relation": "isBefore"}}
{"generation": "PersonX links chain together. Before that, you can use the same link to link to a", "references": ["PersonX closes the gate"], "input": {"head": "PersonX links chain together", "relation": "isAfter"}}
{"generation": "PersonX rises to the challenge. As a result, others feel that he is a better player than he is", "references": ["none"], "input": {"head": "PersonX rises to the challenge", "relation": "oReact"}}
{"generation": "PersonX changes PersonY's lives. After, PersonX will want to know who is the person who is the person who", "references": ["donate money", "to embrace person y", "to give money to person y", "to see them live well", "make wishes come true", "to be thanked for it"], "input": {"head": "PersonX changes PersonY's lives", "relation": "xWant"}}
{"generation": "PersonX puts bread in the toaster. After, others will want to eat it", "references": ["none"], "input": {"head": "PersonX puts bread in the toaster", "relation": "oWant"}}
{"generation": "PersonX goes scuba diving. After, PersonX will want to know if you're a good swimmer", "references": ["come out of sea", "to take chances", "see fishes", "to be adventurous"], "input": {"head": "PersonX goes scuba diving", "relation": "xWant"}}
{"generation": "You are likely to find a storage furniture in a garage or garage sale", "references": ["house", "ebay", "storage room", "mall", "bedroom", "walmart"], "input": {"head": "storage furniture", "relation": "AtLocation"}}
{"generation": "PersonX waves PersonY. PersonX will be the first person to receive the message", "references": ["happy", "relieved", "satisfied"], "input": {"head": "PersonX waves PersonY", "relation": "xReact"}}
{"generation": "PersonX eats a hamburger. After, PersonX will want to eat a hamburger", "references": ["to enjoy the hamburger", "to have dessert", "wipe mouth with napkin", "eat more food", "leave tips", "to take a rest"], "input": {"head": "PersonX eats a hamburger", "relation": "xWant"}}
{"generation": "PersonX continues PersonY's journey. The effect on PersonX will be similar to that of PersonY's", "references": ["finishes what was started", "gets tired", "carries things", "is thanked by personY"], "input": {"head": "PersonX continues PersonY's journey", "relation": "xEffect"}}
{"generation": "PersonX gives the children ___. After, others will want to know what the child is doing", "references": ["the kids want to play", "to ask questions about the lesson", "to go outside and play", "the kids want to relax"], "input": {"head": "PersonX gives the children ___", "relation": "oWant"}}
{"generation": "PersonX mourns PersonY's loss. After that, they both go to the hospital", "references": ["PersonX cries at the grave site"], "input": {"head": "PersonX mourns PersonY's loss", "relation": "isBefore"}}
{"generation": "PersonX waits for PersonY answer. As a result, others feel that PersonX is not a good fit for the", "references": ["none"], "input": {"head": "PersonX waits for PersonY answer", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX was born without arms.", "PersonX is unable to get a glass from the bartender", "PersonX cannot find PersonY", "PersonX broke their hand last week", "PersonX doesn't know where PersonY keeps the glasses", "PersonY is in another country."], "input": {"head": "PersonX hands PersonY a glass", "relation": "HinderedBy"}}
{"generation": "PersonX plays ___ today. PersonX will be playing the game tomorrow", "references": ["happy", "enthuciastic", "enjoyment", "excited"], "input": {"head": "PersonX plays ___ today", "relation": "xReact"}}
{"generation": "PersonX eats the whole thing. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX eats the whole thing", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is over half way there.", "PersonX is already almost finished.", "PersonX only has a few minutes left in the race.", "PersonX is only a few feet from the finish line of the race.", "PersonX only has few minutes left before PersonX's retirement speech."], "input": {"head": "PersonX has a long way to go", "relation": "HinderedBy"}}
{"generation": "PersonX has to cancel PersonX's plans. The effect on PersonX will be permanent", "references": ["becomes disappointed", "thinks of better plans for the future", "spends more time studying the pros and cons of the new plan", "cries"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xEffect"}}
{"generation": "PersonX visits the city. The effect on PersonX will be similar to that of the effect on the player", "references": ["coughs because of pollution", "sees many people", "visits a skyscraper"], "input": {"head": "PersonX visits the city", "relation": "xEffect"}}
{"generation": "PersonX bites PersonX's nails. After, PersonX will want to kill PersonX", "references": ["wash hands", "spit out nails", "Enjoy the pleasure from the biting.", "Scold their self for biting.", "file nails", "spit nail out"], "input": {"head": "PersonX bites PersonX's nails", "relation": "xWant"}}
{"generation": "PersonX gives PersonY PersonX's name. After, others will want to know who you are", "references": ["to see a movie", "to go on a date", "avoid personX", "Give personX their name", "talk to personX"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "oWant"}}
{"generation": "PersonX loves the ___ with all PersonX's heart. After, PersonX will want to know what's going on with the ___", "references": ["to pray", "to cherish them", "to help others in need", "to attend church", "to hold them dearly", "to go to church"], "input": {"head": "PersonX loves the ___ with all PersonX's heart", "relation": "xWant"}}
{"generation": "You are likely to find a telephone in a store that has a telephone number", "references": ["desktop", "office", "hospital", "friend's house", "telephone booth", "hotel", "every u.s", "end of line", "party", "phone booth", "desk"], "input": {"head": "telephone", "relation": "AtLocation"}}
{"generation": "PersonX sets a ___ at variance. As a result, others feel that the game is too complex and too complex to", "references": ["special"], "input": {"head": "PersonX sets a ___ at variance", "relation": "oReact"}}
{"generation": "PersonX never showed. After that, he was a bit of a jerk", "references": ["PersonX misses lunch date with PersonY"], "input": {"head": "PersonX never showed", "relation": "isBefore"}}
{"generation": "PersonX coachs PersonY. The effect on PersonX will be the same as the effect on PersonY", "references": ["PersonX makes plans for future coaching", "PersonX collects their payment", "helps person Y", "gets coaching experience", "preparing to get", "getting ready"], "input": {"head": "PersonX coachs PersonY", "relation": "xEffect"}}
{"generation": "a donut can be used for a variety of purposes, including:\n\n\u2022", "references": ["give a dog a treat", "eat", "cover in frosting", "give to a cop", "eat for breakfast.", "to snack on.", "hold in finger to eat", "bribe someone", "give to friend", "bring to work"], "input": {"head": "donut", "relation": "ObjectUse"}}
{"generation": "PersonX has trouble in school. After that, he's a little more of a troublemaker", "references": ["PersonX tells the school counselor the problem"], "input": {"head": "PersonX has trouble in school", "relation": "isBefore"}}
{"generation": "PersonX gets ___ at work. After, others will want to know what's going on", "references": ["To celebrate the promotion", "none", "To have dinner together"], "input": {"head": "PersonX gets ___ at work", "relation": "oWant"}}
{"generation": "PersonX sees a pretty girl. PersonX did this to her", "references": ["none"], "input": {"head": "PersonX sees a pretty girl", "relation": "xIntent"}}
{"generation": "You are likely to find a gate leg table in a lot of places", "references": ["dining room"], "input": {"head": "gate leg table", "relation": "AtLocation"}}
{"generation": "PersonX sprays PersonX. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sprays PersonX", "relation": "oEffect"}}
{"generation": "PersonX looks both ways. After that, he's a bit of a jerk", "references": ["PersonX makes it across the street safely"], "input": {"head": "PersonX looks both ways", "relation": "isBefore"}}
{"generation": "PersonX feels ___ inside PersonY. After, others will want to know what's going on", "references": ["to be cared for", "to hope for the best", "to succumb to PersonX", "to stay asleep", "more from life", "to push PersonX away"], "input": {"head": "PersonX feels ___ inside PersonY", "relation": "oWant"}}
{"generation": "PersonX makes a date. Before that, she's going to be a little bit more open", "references": ["PersonX meets someone on christianmingle"], "input": {"head": "PersonX makes a date", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Their mom wouldn't give them money.", "PERSON X  HAS NO MONEY", "The dog ate the money.", "PersonX has no money.", "The bank will not accept their paycheck.", "The boss hasn't paid them yet.", "PersonX needs to wait for payday.", "PersonX has not received the weekly check yet.", "PERSON X IS SUPER FRUGAL"], "input": {"head": "PersonX buys some things", "relation": "HinderedBy"}}
{"generation": "PersonX evens saw ___. After, PersonX will want to know what the other person is doing", "references": ["observe what they seen", "to watch something in there view", "to post photos", "to tell others about it"], "input": {"head": "PersonX evens saw ___", "relation": "xWant"}}
{"generation": "PersonX reaches PersonY's ears. PersonX did this to her, and she did it to her", "references": ["to clean person's ears", "to know he is near to him"], "input": {"head": "PersonX reaches PersonY's ears", "relation": "xIntent"}}
{"generation": "PersonX divides ___ into groups is filled by the following:\n\nGroup 1:\n\n", "references": ["children", "gems", "pizza", "rocks", "cars", "cats", "students", "workers", "cups", "records", "toys", "people", "shirts", "glasses", "candy", "cards", "blocks", "cookies", "beads"], "input": {"head": "PersonX divides ___ into groups", "relation": "isFilledBy"}}
{"generation": "PersonX makes PersonY concessions. PersonX is a bit of a jerk, but he's a", "references": ["diplomatic", "helpful", "friendly", "kind", "thoughtful", "caring"], "input": {"head": "PersonX makes PersonY concessions", "relation": "xAttr"}}
{"generation": "PersonX paints the town red. The effect on PersonX will be similar to the effect of the \"Red\" effect", "references": ["maintains the red painted walls", "sees the red town", "vomits", "has a headache"], "input": {"head": "PersonX paints the town red", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person Y stays out at all hours of the night", "PersonY's work is bad.", "It is not PersonX's passion.", "Person Y gets hit on all the time"], "input": {"head": "PersonX loves PersonY's work", "relation": "HinderedBy"}}
{"generation": "PersonX makes a budget. Before that, he's been working on a new game, and", "references": ["PersonX checks bank account", "PersonX has an overdrawn checking account"], "input": {"head": "PersonX makes a budget", "relation": "isAfter"}}
{"generation": "PersonX gives PersonY instruction. The effect on PersonX will be the same as the effect on PersonY", "references": ["is paid attention to", "none", "is trusted"], "input": {"head": "PersonX gives PersonY instruction", "relation": "xEffect"}}
{"generation": "PersonX prevents ___ from working. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX prevents ___ from working", "relation": "oReact"}}
{"generation": "PersonX rides ___ every day. After, others will want to know what you're doing", "references": ["to stop having to tote personx around everyday", "none", "personx to get his own car"], "input": {"head": "PersonX rides ___ every day", "relation": "oWant"}}
{"generation": "PersonX hangs ___ on the wall is filled by a bunch of people", "references": ["lamps", "shelf", "frames", "a clock", "vinyl", "art", "posters", "picture", "pictures", "a picture"], "input": {"head": "PersonX hangs ___ on the wall", "relation": "isFilledBy"}}
{"generation": "PersonX sets PersonY up. After, PersonX will want to set PersonY to PersonX", "references": ["give the reward", "Meet up with the new person", "to go back to work", "Make a reservation", "to go home", "get connected with person y"], "input": {"head": "PersonX sets PersonY up", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY pushed PersonX's chair against the wall", "PersonX recently injured their back and leaning would hurt.", "PersonX has a stiff back", "PersonX is sitting on the edge of a cliff", "The chair does not have a back", "PersonY push the other chair up against PersonX", "Another person is sitting behind PersonX.", "Therer is a wall right behind PersonX.", "They are standing in a line, and leaning back would hit someone."], "input": {"head": "PersonX leans back", "relation": "HinderedBy"}}
{"generation": "PersonX catches the dog. The effect on others will be similar to that of a dog's own behavior", "references": ["none"], "input": {"head": "PersonX catches the dog", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX hasn't gotten dressed yet.", "Person X is nursing an injury, and has to take it slow.", "PersonX tripped on their shoelaces.", "The neighbors are standing in front of the blocks so PersonX can't push through.", "Person X loses their footing, and stumbles.", "PersonX is hampered by an injury.", "PersonX isn't using blocks to start the race.", "PersonY stacked the blocks too high.", "PersonY is holding the blocks up."], "input": {"head": "PersonX storms out of the blocks", "relation": "HinderedBy"}}
{"generation": "PersonX doesn't get along. Before that, he was a very good friend of mine", "references": ["PersonX cannot work", "PersonX meets a new co-worker at lunch"], "input": {"head": "PersonX does n't get along", "relation": "isAfter"}}
{"generation": "a realty agency can be used for the purpose of providing a service to the public", "references": ["buy a home", "help find a house", "get a job", "complain about", "advertise a house", "sell your house", "get ideas for making a house more presentable", "meet a date"], "input": {"head": "realty agency", "relation": "ObjectUse"}}
{"generation": "PersonX waits all day. After that, he's just a regular guy", "references": ["PersonX goes to bed"], "input": {"head": "PersonX waits all day", "relation": "isBefore"}}
{"generation": "PersonX draws another ___. PersonX did this to me", "references": ["to understand the situation.", "statue"], "input": {"head": "PersonX draws another ___", "relation": "xIntent"}}
{"generation": "PersonX skips class. As a result, others feel that the class is too \"classy\" and", "references": ["none"], "input": {"head": "PersonX skips class", "relation": "oReact"}}
{"generation": "PersonX knows PersonY name. PersonX will be the one who will be the one who will be", "references": ["informed"], "input": {"head": "PersonX knows PersonY name", "relation": "xReact"}}
{"generation": "PersonX gets back to sleep. After that, he goes to the bathroom and finds a bag of", "references": ["PersonX sleeps soundly", "PersonX sleeps until morning"], "input": {"head": "PersonX gets back to sleep", "relation": "isBefore"}}
{"generation": "a tool kit contains a set of tools for the use of the user", "references": ["wrench"], "input": {"head": "tool kit", "relation": "MadeUpOf"}}
{"generation": "PersonX dries the clothes. After that, he goes to the bathroom and gets a shower", "references": ["PersonX hangs up the clothes after drying"], "input": {"head": "PersonX dries the clothes", "relation": "isBefore"}}
{"generation": "PersonX recently graduated. The effect on PersonX will be to make him more likely to be a good person", "references": ["takes a break", "becomes unemployed", "looks for job", "sends out applications", "stresses about loans", "stresses about job prospects", "gets a new job", "stays at home"], "input": {"head": "PersonX recently graduated", "relation": "xEffect"}}
{"generation": "PersonX has a say. The effect on others will be limited to those who are not in the same situation", "references": ["none"], "input": {"head": "PersonX has a say", "relation": "oEffect"}}
{"generation": "PersonX pushes PersonX's luck. Before, PersonX needs to be able to get a job, but now he", "references": ["to go gambling at the casino", "to ask the prom queen out on a date", "do something they have been warned not to do", "to play the lottery", "do something risky", "none"], "input": {"head": "PersonX pushes PersonX's luck", "relation": "xNeed"}}
{"generation": "PersonX spends the ___ at PersonY's house. PersonX will be able to use the ___ to summon PersonY", "references": ["wanted", "nice", "relaxed", "happy", "loved", "confident"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "xReact"}}
{"generation": "PersonX owes PersonY. PersonX did this to me", "references": ["to buy groceries", "to have money now"], "input": {"head": "PersonX owes PersonY", "relation": "xIntent"}}
{"generation": "PersonX produces another quilt. Before that, he's got a quilt of his own", "references": ["PersonX needle works all the squares"], "input": {"head": "PersonX produces another quilt", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX suffers from social anxiety.", "There are no resturants in their town", "The resturant won't hire PersonX.", "The governor shut PersonX's resturant down.", "The restaurant won't hire PersonX.", "PersonX is too young", "They cannot work the carzy hours", "PersonX is a full time student"], "input": {"head": "PersonX works as a waitress", "relation": "HinderedBy"}}
{"generation": "PersonX sleeps tonight. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sleeps tonight", "relation": "oEffect"}}
{"generation": "PersonX goes ___ first. PersonX will be the first to get the \"I'm a robot", "references": ["relaxed", "refreshed and relaxed.", "relieved"], "input": {"head": "PersonX goes ___ first", "relation": "xReact"}}
{"generation": "PersonX drives on the highway. PersonX did this to me", "references": ["to get somewhere", "to go out of state", "to save time"], "input": {"head": "PersonX drives on the highway", "relation": "xIntent"}}
{"generation": "PersonX loves riding PersonX's bike. PersonX is a very good rider", "references": ["Engaged", "fun", "active", "Possessive", "Competitive", "athletic", "Athletic"], "input": {"head": "PersonX loves riding PersonX's bike", "relation": "xAttr"}}
{"generation": "PersonX steals anything. Before that, he's a thief", "references": ["PersonX has no money"], "input": {"head": "PersonX steals anything", "relation": "isAfter"}}
{"generation": "PersonX looks like a woman. After, others will want to know what she looks like", "references": ["none"], "input": {"head": "PersonX looks like a woman", "relation": "oWant"}}
{"generation": "a door knob can be used for a door knob", "references": ["look at reflection", "open the door to the area", "Open bedroom door", "door knob", "hang a shirt", "unlock a house", "opening door", "quietly lock", "lock the house", "wipe snot", "trick someone", "turn to shut a door", "spy through a keyhole", "lock a door"], "input": {"head": "door knob", "relation": "ObjectUse"}}
{"generation": "PersonX links chain together. After that, you can use the same chain to link together the", "references": ["PersonX puts the dog into the pen"], "input": {"head": "PersonX links chain together", "relation": "isBefore"}}
{"generation": "PersonX attends PersonY's father's ___. As a result, others feel that the two are not related", "references": ["joyful", "sad", "good about person x relationship"], "input": {"head": "PersonX attends PersonY's father 's ___", "relation": "oReact"}}
{"generation": "PersonX makes a mistake. PersonX is a very good player", "references": ["clumsy", "inattentive", "ambitious", "dumb", "stupid", "bad", "regretful"], "input": {"head": "PersonX makes a mistake", "relation": "xAttr"}}
{"generation": "PersonX feels ashamed. After that, he's not happy", "references": ["PersonX returns the stolen book"], "input": {"head": "PersonX feels ashamed", "relation": "isBefore"}}
{"generation": "PersonX buys a used car. The effect on PersonX will be the same as the effect on Person X", "references": ["pays a bit less", "has transportation", "Buys car insurance", "Drives car around"], "input": {"head": "PersonX buys a used car", "relation": "xEffect"}}
{"generation": "You are likely to find a cart in a store that sells a lot of things", "references": ["supermarket"], "input": {"head": "cart", "relation": "AtLocation"}}
{"generation": "PersonX belongs to PersonX's father. After, others will want to know who he is", "references": ["they want to tell PersonX to look for a job", "their son to look up to them", "to send PersonX to school", "to keep an eye on their son"], "input": {"head": "PersonX belongs to PersonX's father", "relation": "oWant"}}
{"generation": "PersonX grants women the ___. After, others will want to know what the ___", "references": ["to vote", "to have equal rights"], "input": {"head": "PersonX grants women the ___", "relation": "oWant"}}
{"generation": "PersonX is getting ready. The effect on PersonX will be similar to that of a normal person", "references": ["PersonX wakes up", "PersonX is energrized for the day", "none"], "input": {"head": "PersonX is getting ready", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX broke an ankle.", "PersonX is on bedrest.", "PersonX does not have running shoes.", "PersonX is too tired.", "PersonX's doctor forbids it", "PersonX is out of shape"], "input": {"head": "PersonX starts running again", "relation": "HinderedBy"}}
{"generation": "PersonX comes of age. PersonX is a young, talented, and talented person", "references": ["mature", "responsible", "successful", "older"], "input": {"head": "PersonX comes of age", "relation": "xAttr"}}
{"generation": "PersonX buys a television. PersonX is a member of the \"The X Factor\" and", "references": ["extravagant", "capable", "a consumer", "invested", "self-indulgent", "wealthy"], "input": {"head": "PersonX buys a television", "relation": "xAttr"}}
{"generation": "PersonX waits till see. After that, he'll be able to see the rest of the", "references": ["PersonX waters the seed while waiting", "PersonX is happy that the friend feel better"], "input": {"head": "PersonX waits till see", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY hates PersonX.", "PersonY asked for space from PersonX", "PersonX is in a different state than PersonY.", "PersonY refuses to talk or see PersonX.", "PersonY is too heavy.", "PersonY didn't show up to work today.", "PersonX is too far away from PersonY.", "PersonX is making dinner."], "input": {"head": "PersonX pulls PersonY close", "relation": "HinderedBy"}}
{"generation": "PersonX wants to come back. The effect on PersonX will be to make him feel like he's not a part", "references": ["Person x is thinking about how to get back", "Person x keeps trying to come back"], "input": {"head": "PersonX wants to come back", "relation": "xEffect"}}
{"generation": "Sometimes purchase causes a lot of confusion", "references": ["having less money"], "input": {"head": "purchase", "relation": "Causes"}}
{"generation": "PersonX drives PersonX's new car. PersonX will be able to drive the car in PersonX's car", "references": ["happy", "accomplished", "content"], "input": {"head": "PersonX drives PersonX's new car", "relation": "xReact"}}
{"generation": "PersonX bribes PersonY with candy. Before that, he's a big fan of the show", "references": ["PersonX buys some candy"], "input": {"head": "PersonX bribes PersonY with candy", "relation": "isAfter"}}
{"generation": "PersonX gets nervous. After that, he gets a little nervous", "references": ["PersonX stutters during speech"], "input": {"head": "PersonX gets nervous", "relation": "isBefore"}}
{"generation": "PersonX has a say. PersonX will be the one to decide what happens to the player", "references": ["like they mean something.", "feels heard"], "input": {"head": "PersonX has a say", "relation": "xReact"}}
{"generation": "PersonX carries ___ around is filled by a large, dark, and menacing figure", "references": ["books", "a purse", "rocks", "money", "clothes", "pets", "bags", "a suitcase", "ring", "necklace"], "input": {"head": "PersonX carries ___ around", "relation": "isFilledBy"}}
{"generation": "PersonX starts training. After that, he is given a new name, \"The Man", "references": ["PersonX develops muscle tone"], "input": {"head": "PersonX starts training", "relation": "isBefore"}}
{"generation": "PersonX goes ___ to bed. After, PersonX will want to go to sleep", "references": ["to wake up", "to pray", "to have breakfast", "to cover themselves"], "input": {"head": "PersonX goes ___ to bed", "relation": "xWant"}}
{"generation": "PersonX gets everything PersonY needed. PersonX is the only one who can help PersonY", "references": ["capable", "generous", "responsible", "helpful"], "input": {"head": "PersonX gets everything PersonY needed", "relation": "xAttr"}}
{"generation": "PersonX gets shot. PersonX is shot", "references": ["untrusting", "dead", "hurt"], "input": {"head": "PersonX gets shot", "relation": "xAttr"}}
{"generation": "PersonX tells PersonY to say. After, others will want to know what's going on", "references": ["to get through the event", "to stop being told what to do", "to think for themselves more", "to listen to PersonX", "to be mad at PersonX", "to show autonomy", "to understand"], "input": {"head": "PersonX tells PersonY to say", "relation": "oWant"}}
{"generation": "PersonX takes ___ seriously is filled by the fact that he's a man who's been", "references": ["knifes", "potatos", "planes", "guitar", "cars", "fish", "drums"], "input": {"head": "PersonX takes ___ seriously", "relation": "isFilledBy"}}
{"generation": "PersonX goes to the post office. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX goes to the post office", "relation": "oReact"}}
{"generation": "PersonX makes arrangements. Before, PersonX needs to be able to use the same information on the same", "references": ["To have bought groceries", "to prepare something", "to have some time", "none", "To have invited friends for dinner"], "input": {"head": "PersonX makes arrangements", "relation": "xNeed"}}
{"generation": "PersonX is pulled over for speeding. As a result, others feel the same way", "references": ["like they need to be more concerned about driving safely", "like pertson x got what they deserved.", "none"], "input": {"head": "PersonX is pulled over for speeding", "relation": "oReact"}}
{"generation": "peach is a very good choice for a beginner", "references": ["pit"], "input": {"head": "peach", "relation": "HasProperty"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX lost their checkbook somewhere", "PersonX has no money.", "Person X's bill is not due yet.", "Person X cannot find the bill.", "PersonX ran out of checks.", "PersonX is on hold"], "input": {"head": "PersonX pays the bill", "relation": "HinderedBy"}}
{"generation": "PersonX is planning a trip. Before that, he's going to be in the middle of a", "references": ["PersonX looks at travel sites on their laptop"], "input": {"head": "PersonX is planning a trip", "relation": "isAfter"}}
{"generation": "PersonX meets PersonY's customers'___. The effect on PersonX will be the same as PersonY's effect on PersonY", "references": ["thanked", "Happy", "promoted", "Responsibly", "Excited", "gets a raise", "gets honored"], "input": {"head": "PersonX meets PersonY's customers ' ___", "relation": "xEffect"}}
{"generation": "PersonX blows this popsicle stand. Before that, he's got a bunch of other things", "references": ["PersonX goes to a popsicle stand"], "input": {"head": "PersonX blows this popsicle stand", "relation": "isAfter"}}
{"generation": "PersonX pulls PersonY's car. As a result, others feel the same way", "references": ["grateful."], "input": {"head": "PersonX pulls PersonY's car", "relation": "oReact"}}
{"generation": "PersonX loves PersonX's dog. PersonX is a very nice dog", "references": ["animal lover", "friendly", "kind", "loving", "caring"], "input": {"head": "PersonX loves PersonX's dog", "relation": "xAttr"}}
{"generation": "PersonX sits behind PersonY. After, PersonX will want to know who is the person who is the person who", "references": ["to listen", "tap PersonY", "Set sideways to see around them.", "to observe", "Try to be quiet.", "say hello"], "input": {"head": "PersonX sits behind PersonY", "relation": "xWant"}}
{"generation": "PersonX takes PersonY along. After that, they go to the main room and talk to the", "references": ["PersonX pays for PersonY to see the movie"], "input": {"head": "PersonX takes PersonY along", "relation": "isBefore"}}
{"generation": "PersonX improves PersonY's appearance. PersonX is a character who is a member of the same family", "references": ["professional", "clever", "knowledgeable", "vain"], "input": {"head": "PersonX improves PersonY's appearance", "relation": "xAttr"}}
{"generation": "PersonX visits PersonX's cousin. The effect on PersonX will be similar to that of the effect of the effect of", "references": ["gest", "person vist x's"], "input": {"head": "PersonX visits PersonX's cousin", "relation": "xEffect"}}
{"generation": "PersonX owes PersonY's ___ to the fact. Before, PersonX needs to know that PersonY is a person, and Person", "references": ["to tell personY thats why they think that", "to think thats why"], "input": {"head": "PersonX owes PersonY's ___ to the fact", "relation": "xNeed"}}
{"generation": "PersonX pisses money up the wall. Before, PersonX needs to be able to get a job, and he's", "references": ["to go shopping", "none", "spend a lot", "to make money"], "input": {"head": "PersonX pisses money up the wall", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is working overtime.", "PersonX doesn't know how to write music", "Someone stole PersonX's guitar.", "PersonX doesn't know how to write music.", "PersonX has no sheet music", "PersonX can never remember the notes on the scale."], "input": {"head": "PersonX writes music", "relation": "HinderedBy"}}
{"generation": "PersonX stretches out PersonX's hand. PersonX is holding a handkerchief", "references": ["flexible", "mean", "friendly", "observant", "sore", "tired"], "input": {"head": "PersonX stretches out PersonX's hand", "relation": "xAttr"}}
{"generation": "PersonX stays clean. After that, he's a bit of a jerk", "references": ["PersonX is proud of PersonX's accomplishments"], "input": {"head": "PersonX stays clean", "relation": "isBefore"}}
{"generation": "a volleyball can be used for a variety of purposes, including:\n\n\u2022", "references": ["talk with when stranded on an island", "hit over the net", "playing volleyball", "play dodgeball", "hit an enemy", "play the game with", "throw at the annoying person", "hide and spoil the game", "dominate the game", "hit accross the net", "play a game of soccer", "practice the game", "spike the ball", "Win the title"], "input": {"head": "volleyball", "relation": "ObjectUse"}}
{"generation": "PersonX thanks PersonY's profusely. Before, PersonX needs to be able to talk to PersonY, but now", "references": ["for them to do something for them", "to accept a favor", "to go to PersonY's house", "to see PersonY", "to accept a gift", "for them to be grateful for it"], "input": {"head": "PersonX thanks PersonY's profusely", "relation": "xNeed"}}
{"generation": "a wife can be used for a child", "references": ["cuddle with", "provide support", "help do chores", "answer phone to avoid relatives", "have children with", "make dinner", "have as a business partner", "fold clothes", "kiss and love", "borrow clothes to cross dress"], "input": {"head": "wife", "relation": "ObjectUse"}}
{"generation": "PersonX orders delivery food. After that, he orders a pizza", "references": ["PersonX listens for the doorbell"], "input": {"head": "PersonX orders delivery food", "relation": "isBefore"}}
{"generation": "PersonX defines ___ as real. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX defines ___ as real", "relation": "oEffect"}}
{"generation": "PersonX finally worked. Before that, he was a programmer at Microsoft", "references": ["PersonX troubleshoots a problem"], "input": {"head": "PersonX finally worked", "relation": "isAfter"}}
{"generation": "PersonX performs PersonY analysis. PersonX is a Python program that can be used to perform a", "references": ["subservient", "observant", "useful", "detail oriented"], "input": {"head": "PersonX performs PersonY analysis", "relation": "xAttr"}}
{"generation": "PersonX calls the ambulance. As a result, others feel the same way", "references": ["concerned", "helped", "helpful", "nervous", "hurried", "businesslike", "determined"], "input": {"head": "PersonX calls the ambulance", "relation": "oReact"}}
{"generation": "PersonX becomes frustrated. The effect on others will be felt by the player", "references": ["none"], "input": {"head": "PersonX becomes frustrated", "relation": "oEffect"}}
{"generation": "PersonX plays a ___ in the system. PersonX did this to me", "references": ["to be a part of things", "none"], "input": {"head": "PersonX plays a ___ in the system", "relation": "xIntent"}}
{"generation": "PersonX uses the ___ effectively. After, PersonX will want to use the ___ to get the next item", "references": ["to teach others", "to do a good job", "to make sure nothing is wasted", "to be efficient", "to complete a task", "to train others"], "input": {"head": "PersonX uses the ___ effectively", "relation": "xWant"}}
{"generation": "PersonX finishes PersonY's meal. The effect on others will be reversed", "references": ["yell at PersonX", "they stay healthy", "raise their fist to hit PersonX", "none", "don't have to clean so much off their plate"], "input": {"head": "PersonX finishes PersonY's meal", "relation": "oEffect"}}
{"generation": "PersonX eats ___ quickly is filled by the fact that he's a very good player", "references": ["pudding", "yogurt", "steak", "chocolate", "hotdog", "banana", "lunch", "candybar", "burger", "dinner", "beans", "apple", "cereal", "gelatin"], "input": {"head": "PersonX eats ___ quickly", "relation": "isFilledBy"}}
{"generation": "PersonX begins school. PersonX will be a student at the University of California, Berkeley", "references": ["hopeful", "determined", "tired", "satisfied"], "input": {"head": "PersonX begins school", "relation": "xReact"}}
{"generation": "PersonX pulls ___ out of the water. After, others will want to know what happened to the other two", "references": ["none"], "input": {"head": "PersonX pulls ___ out of the water", "relation": "oWant"}}
{"generation": "PersonX plays PersonX's favorite songs. Before, PersonX needs to play a song to get the song to play", "references": ["to make a playlist", "to turn on an mp3 player", "none"], "input": {"head": "PersonX plays PersonX's favorite songs", "relation": "xNeed"}}
{"generation": "PersonX brings ___ to PersonY's mouth. PersonX will be able to tell PersonY that she's a good", "references": ["happy", "hopeful.", "less worried.", "satisfied"], "input": {"head": "PersonX brings ___ to PersonY's mouth", "relation": "xReact"}}
{"generation": "You are likely to find a cosmic radiation in a small amount of water", "references": ["space"], "input": {"head": "cosmic radiation", "relation": "AtLocation"}}
{"generation": "PersonX takes PersonY's stand. The effect on others will be different", "references": ["nods head", "thanks Person X", "none"], "input": {"head": "PersonX takes PersonY's stand", "relation": "oEffect"}}
{"generation": "PersonX makes ___ that day. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX makes ___ that day", "relation": "oWant"}}
{"generation": "PersonX takes ___ out for a ride is filled by a bunch of people who are all drunk and have", "references": ["bikes", "the scooter", "the dog", "cars", "the car", "scooters"], "input": {"head": "PersonX takes ___ out for a ride", "relation": "isFilledBy"}}
{"generation": "a personal information can be used for any purpose, including, but not limited to,", "references": ["prove they're credit-worthy", "fill out application", "use to get approved for a loan", "log-in to a website", "apply for a job", "get stolen", "blackmail someone with", "secure passage", "claim social security benefits", "switch identities at a border", "sell to a data collection firm", "steal to take on someones identity", "To prove your identity when getting a new job."], "input": {"head": "personal information", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's grandmother has passed away.", "PersonX does not want to hurt PersonX's grandmother's feelings.", "PersonX's grandmother is on vacation.", "PersonX's  grandmother doesn't have a telephone.", "PersonX's grandmother stays far away in a nursing home.", "PersonX's grandmother does not remember anything because of Alzheimer's disease.", "PersonX's grandmother doesn't have a phone.", "PersonX's grandmother has dementia."], "input": {"head": "PersonX asks PersonX's grandmother", "relation": "HinderedBy"}}
{"generation": "PersonX nurses PersonY back to health. The effect on PersonX will be reversed if PersonY is not in the same class", "references": ["accomplished", "receives gratitude for healing", "worried", "is appreciated", "gets tired", "gets a gift"], "input": {"head": "PersonX nurses PersonY back to health", "relation": "xEffect"}}
{"generation": "PersonX drops PersonY off at home. The effect on others will be different", "references": ["and he gets out of the car", "and he goes inside"], "input": {"head": "PersonX drops PersonY off at home", "relation": "oEffect"}}
{"generation": "PersonX waits for PersonY's answer. The effect on others will be different", "references": ["PersonY thinks about their options", "none", "PersonY gives answer"], "input": {"head": "PersonX waits for PersonY's answer", "relation": "oEffect"}}
{"generation": "PersonX would work. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX would work", "relation": "oEffect"}}
{"generation": "PersonX shakes the pagoda tree. The effect on PersonX will be visible to the user", "references": ["gets gift", "leaves fall on him", "gets hit on head", "gets hurt"], "input": {"head": "PersonX shakes the pagoda tree", "relation": "xEffect"}}
{"generation": "PersonX puts PersonY's phone. After that, you can use the phone to call the person you", "references": ["PersonX gives back the phone"], "input": {"head": "PersonX puts PersonY's phone", "relation": "isBefore"}}
{"generation": "PersonX uses PersonX's skills. The effect on PersonX will be applied to the player", "references": ["finishes the work", "sad", "learns a new skill", "gets high salary", "they are successful", "they learn even more"], "input": {"head": "PersonX uses PersonX's skills", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is paralyzed", "PersonX has carpal tunnel.", "PersonX has no hands", "PersonX's dad did not let him learn.", "PersonX has a bad memory", "Person X has no yarn.", "Person X is broke.", "Person X has a phobia of needles.", "PersonX's mom never taught him.", "PersonX is needlephobic."], "input": {"head": "PersonX learns to knit", "relation": "HinderedBy"}}
{"generation": "PersonX slides PersonY's fingers. After that, they both slide the finger on the left side of", "references": ["PersonX successfully teaches another student", "PersonX helps PersonY find the right buttons"], "input": {"head": "PersonX slides PersonY's fingers", "relation": "isBefore"}}
{"generation": "PersonX distributes in forms without permission. PersonX did this to prevent the user from using the same name as the", "references": ["be rebellious", "to be rogue"], "input": {"head": "PersonX distributes in forms without permission", "relation": "xIntent"}}
{"generation": "PersonX looks like men. PersonX will be the one who gets the most attention", "references": ["sad", "embarrassed", "happy"], "input": {"head": "PersonX looks like men", "relation": "xReact"}}
{"generation": "PersonX looks in PersonY's cupboard. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX looks in PersonY's cupboard", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX cannot find a knife.", "PersonX doesn't have a knife", "PersonX is wearing a straight jacket", "The cops put PersonX in handcuffs", "PersonX is in handcuffs.", "The doctors put PersonX in a straight Jacket", "PersonX is in a padded cell.", "PersonX is handcuffed."], "input": {"head": "PersonX cuts PersonX's throat", "relation": "HinderedBy"}}
{"generation": "PersonX tests PersonX's ability. PersonX is able to use the PersonX test to determine whether", "references": ["firm", "motivated", "Able", "eager", "Active", "skilled"], "input": {"head": "PersonX tests PersonX's ability", "relation": "xAttr"}}
{"generation": "PersonX looks in PersonX's cupboard. The effect on PersonX will be visible to the player", "references": ["exclaims in surprise", "breaks a dish", "pancake syrup spills on him", "finds what looking for", "a can of peas falls on his head", "sees a mouse"], "input": {"head": "PersonX looks in PersonX's cupboard", "relation": "xEffect"}}
{"generation": "PersonX gets PersonY's hands. PersonX is the one who gets PersonY's hands", "references": ["controlling", "agressive", "demanding", "physical"], "input": {"head": "PersonX gets PersonY's hands", "relation": "xAttr"}}
{"generation": "PersonX steals PersonY's car. After that, he steals PersonY's car", "references": ["PersonX drives away in PersonY's car"], "input": {"head": "PersonX steals PersonY's car", "relation": "isBefore"}}
{"generation": "PersonX brings ___ to the eyes. Before, PersonX needs to be able to see the person in question", "references": ["none"], "input": {"head": "PersonX brings ___ to the eyes", "relation": "xNeed"}}
{"generation": "PersonX performs every ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["PersonX sweats from exercise", "PersonX is tired from exercising", "get tired", "is concentrated"], "input": {"head": "PersonX performs every ___", "relation": "xEffect"}}
{"generation": "PersonX convinces PersonY's parents. Before, PersonX needs to convince PersonY to join the team", "references": ["to want to do something", "ask if he can speak to the parents", "To talk to them", "to be convincing", "To have a conversation with them", "go to the parents' house"], "input": {"head": "PersonX convinces PersonY's parents", "relation": "xNeed"}}
{"generation": "PersonX eventually died. Before that, he was a member of the team that helped the", "references": ["PersonX gets sick"], "input": {"head": "PersonX eventually died", "relation": "isAfter"}}
{"generation": "PersonX buys a new car. Before that, he's a regular customer", "references": ["PersonX had their car break down", "PersonX needs a car", "PersonX visits the dealership"], "input": {"head": "PersonX buys a new car", "relation": "isAfter"}}
{"generation": "PersonX must fix manually. After, others will want to use the same script", "references": ["none"], "input": {"head": "PersonX must fix manually", "relation": "oWant"}}
{"generation": "a box of cereal can be used for a day or two", "references": ["store papers in", "Eat for breakfast", "put in cookies", "use as percussion", "make treats", "display on a store shelf", "read the back", "make marshmallow treats with", "take the cereal from", "eat as a snack"], "input": {"head": "box of cereal", "relation": "ObjectUse"}}
{"generation": "PersonX buys ___ for PersonX's house. PersonX did this to PersonX's house", "references": ["to have an aquarium for the living room in her house.", "paper towels for its home", "dinner to eat"], "input": {"head": "PersonX buys ___ for PersonX's house", "relation": "xIntent"}}
{"generation": "PersonX has a lot of work to do. Before that, he was a programmer at Microsoft", "references": ["PersonX plans a big party"], "input": {"head": "PersonX has a lot of work to do", "relation": "isAfter"}}
{"generation": "PersonX quickly fell in love. The effect on others will be different", "references": ["has butterflies", "is loved", "loves person X", "get engaged", "get a boyfriend", "goes out with person X"], "input": {"head": "PersonX quickly fell in love", "relation": "oEffect"}}
{"generation": "PersonX grabs PersonY by the hair. Before, PersonX needs to be able to get PersonY to stop talking", "references": ["to be in fight", "get close to the person", "wrap hair around their fist", "to be angry", "none"], "input": {"head": "PersonX grabs PersonY by the hair", "relation": "xNeed"}}
{"generation": "PersonX helps PersonX's brother. After that, PersonX is able to talk to PersonX about", "references": ["PersonX pat PersonX's brother on the back"], "input": {"head": "PersonX helps PersonX's brother", "relation": "isBefore"}}
{"generation": "PersonX is pretty happy. After, others will want to know what he's doing", "references": ["FEELS HAPPY", "to relax for a while", "to be happy too", "HAVE FUN", "none"], "input": {"head": "PersonX is pretty happy", "relation": "oWant"}}
{"generation": "PersonX says grace. PersonX is a very good person", "references": ["religious", "thankful", "consciencious"], "input": {"head": "PersonX says grace", "relation": "xAttr"}}
{"generation": "PersonX tricks or treat. Before that, you should be able to get a good idea of", "references": ["PersonX walks through the quiet town"], "input": {"head": "PersonX tricks or treat", "relation": "isAfter"}}
{"generation": "PersonX hits PersonY's friend. The effect on PersonX will be reversed", "references": ["clutches hand in pain", "Person x shakes hand in pain.", "Person x hands swell.", "is arrested", "shakes its hands", "releases anger", "hurts its fist"], "input": {"head": "PersonX hits PersonY's friend", "relation": "xEffect"}}
{"generation": "PersonX never been to one before. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX never been to one before", "relation": "oEffect"}}
{"generation": "PersonX rewards every ___ according. PersonX will be rewarded with a new item", "references": ["proud", "satisfied"], "input": {"head": "PersonX rewards every ___ according", "relation": "xReact"}}
{"generation": "PersonX makes PersonY part. The effect on others will be different", "references": ["person y smiles", "none", "person y breathes easier"], "input": {"head": "PersonX makes PersonY part", "relation": "oEffect"}}
{"generation": "PersonX sets the thames on fire. As a result, others feel the same way", "references": ["mistreated", "none"], "input": {"head": "PersonX sets the thames on fire", "relation": "oReact"}}
{"generation": "PersonX usually took ___ is filled by the same person", "references": ["a lunchbox", "pills", "tea", "crayons", "aspirin", "Sunglasses", "toys", "money", "cough syrup", "a sweatshirt", "runs", "walks", "Keys", "Lipstick", "jewelry", "Money"], "input": {"head": "PersonX usually took ___", "relation": "isFilledBy"}}
{"generation": "PersonX can care less. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX can care less", "relation": "oReact"}}
{"generation": "PersonX burns badly. After that, he's a bit of a jerk", "references": ["PersonX goes to the doctor"], "input": {"head": "PersonX burns badly", "relation": "isBefore"}}
{"generation": "PersonX invites PersonY to play. PersonX did this to make sure PersonY was not playing", "references": ["to be friendly with the other person", "because they like persony", "to build a team"], "input": {"head": "PersonX invites PersonY to play", "relation": "xIntent"}}
{"generation": "PersonX takes PersonY's stand. Before that, he's been a bit of a dick", "references": ["PersonX goes to a shop"], "input": {"head": "PersonX takes PersonY's stand", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have any spare money to give their son.", "PersonX is too far away to be of help.", "PersonX does not know how to help.", "PersonX's son won't accept help."], "input": {"head": "PersonX helps PersonX's son", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX isn't trained well enough to train someone else.", "PersonY is transferring to another office", "PersonY isn't interested in training.", "PersonY does not have enough money.", "PersonX isn't advanced enough to teach PersonY", "PersonX does not have time for PersonY."], "input": {"head": "PersonX gives PersonY training", "relation": "HinderedBy"}}
{"generation": "PersonX eventually moved. Before that, he was a member of the team that won the", "references": ["PersonX is in an bad community"], "input": {"head": "PersonX eventually moved", "relation": "isAfter"}}
{"generation": "PersonX considers briefly the ___ is filled by the ___, and the ___ is filled by the", "references": ["cell phone", "newspaper", "tv", "television"], "input": {"head": "PersonX considers briefly the ___", "relation": "isFilledBy"}}
{"generation": "PersonX laughs PersonY's asses. PersonX did this to me", "references": ["body-shame", "to laugh", "mean", "funny"], "input": {"head": "PersonX laughs PersonY's asses", "relation": "xIntent"}}
{"generation": "PersonX prevents ___ from coming. Before, PersonX needs to be able to use the \"I\" button to", "references": ["call the other party", "have an excuse", "think of a way to prevent people coming", "think of a excuse /reason", "none"], "input": {"head": "PersonX prevents ___ from coming", "relation": "xNeed"}}
{"generation": "PersonX enters PersonX's home. After that, she leaves", "references": ["PersonX takes dog off leash"], "input": {"head": "PersonX enters PersonX's home", "relation": "isBefore"}}
{"generation": "a passport case can be used for a passport application", "references": ["carrying travel papers", "carrying passport", "keeping passport safe", "hold papers", "keep passport in", "protecting passport", "keeping passport clean"], "input": {"head": "passport case", "relation": "ObjectUse"}}
{"generation": "PersonX loves to garden. PersonX did this to me", "references": ["none", "to enjoy a rewarding hobby"], "input": {"head": "PersonX loves to garden", "relation": "xIntent"}}
{"generation": "PersonX loves the ___ with PersonX's heart. The effect on others will be similar to that of a person who is in love", "references": ["The writers gain knowledge about PersonX's history", "The writers receive a letter from PersonX", "none"], "input": {"head": "PersonX loves the ___ with PersonX's heart", "relation": "oEffect"}}
{"generation": "PersonX misses ___ at work. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX misses ___ at work", "relation": "xIntent"}}
{"generation": "PersonX puts snowplow to work. Before that, he's been working on the snowplow", "references": ["PersonX buys a snowplow"], "input": {"head": "PersonX puts snowplow to work", "relation": "isAfter"}}
{"generation": "PersonX decides to order a pizza. The effect on others will be similar to that of a normal pizza", "references": ["none", "has to take their order", "has to make the pizza"], "input": {"head": "PersonX decides to order a pizza", "relation": "oEffect"}}
{"generation": "PersonX makes a move. After that, he's able to get a few more points", "references": ["PersonX goes to dinner with the girl"], "input": {"head": "PersonX makes a move", "relation": "isBefore"}}
{"generation": "You are likely to find a dollar bill in a store that is not a dollar bill", "references": ["pocket", "purse", "bank", "wallet"], "input": {"head": "dollar bill", "relation": "AtLocation"}}
{"generation": "PersonX finishes PersonX's test. After, others will want to know if PersonX is a good person", "references": ["none", "to grade the test", "to give out results"], "input": {"head": "PersonX finishes PersonX's test", "relation": "oWant"}}
{"generation": "PersonX thanks ___ profusely. PersonX will be the one to get the most out of this", "references": ["grateful for something that was done for him", "satisfied, grateful", "good"], "input": {"head": "PersonX thanks ___ profusely", "relation": "xReact"}}
{"generation": "PersonX pours PersonX's heart. The effect on PersonX will be felt by the player", "references": ["none", "PersonX becomes nervous at the idea of rejection", "PersonX blushes at the thought of wearing a heart on their sleeve."], "input": {"head": "PersonX pours PersonX's heart", "relation": "xEffect"}}
{"generation": "PersonX plays PersonX's new game. Before that, he played the game with his brother, who is", "references": ["PersonX receives a new game for christmas"], "input": {"head": "PersonX plays PersonX's new game", "relation": "isAfter"}}
{"generation": "PersonX makes PersonY's smile. Before that, she's just a little bit more serious", "references": ["PersonX give flowers to PersonY"], "input": {"head": "PersonX makes PersonY's smile", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY kept PersonX up very late", "PersonX is too tired.", "PersonX took too much sleeping medication.", "PersonX is depressed.", "PersonY shut off the alarm clock"], "input": {"head": "PersonX wakes up the next morning", "relation": "HinderedBy"}}
{"generation": "PersonX helps PersonY in PersonZ way. Before, PersonX needs to be able to use PersonY's abilities to get", "references": ["to learn from personZ", "none", "to want to help personY"], "input": {"head": "PersonX helps PersonY in PersonZ way", "relation": "xNeed"}}
{"generation": "PersonX sees PersonY frequently. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sees PersonY frequently", "relation": "oEffect"}}
{"generation": "PersonX gets everything PersonY needed. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets everything PersonY needed", "relation": "oEffect"}}
{"generation": "PersonX joins a gym. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX joins a gym", "relation": "oReact"}}
{"generation": "PersonX puts PersonY's ___ to death is filled by the same thing", "references": ["dog", "fish", "cat"], "input": {"head": "PersonX puts PersonY's ___ to death", "relation": "isFilledBy"}}
{"generation": "PersonX sneaks around. After that, he's a little more aggressive", "references": ["PersonX knocks over a glass", "PersonX steals the watch"], "input": {"head": "PersonX sneaks around", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X ripped their tent.", "It's too cold this time of year.", "PersonX can't find the tent.", "PersonX's boss is making him work.", "PersonX couldn't take time off.", "PersonX has to work.", "PersonX's wife will not let him go.", "There is a rainstorm so PersonX can't camp.", "A park officer told personX to stay out of the woods."], "input": {"head": "PersonX is camping in the woods", "relation": "HinderedBy"}}
{"generation": "While professional, you would think that the best way to get a job is", "references": ["abide by ethical rules"], "input": {"head": "professional", "relation": "HasSubEvent"}}
{"generation": "PersonX has a long way to go. Before that, he was a very good player, but he's", "references": ["PersonX is driving across the country"], "input": {"head": "PersonX has a long way to go", "relation": "isAfter"}}
{"generation": "PersonX prevents PersonY from entering. PersonX is the only one who can enter", "references": ["brave", "foreceful", "obnoxious", "secretive", "a bully", "rude", "protective"], "input": {"head": "PersonX prevents PersonY from entering", "relation": "xAttr"}}
{"generation": "You are likely to find a string in a file that contains a number of characters", "references": ["surveyor's kit", "guitar", "atom", "junk drawer", "peice of clothing", "kite", "quark", "spool", "bird's nest"], "input": {"head": "string", "relation": "AtLocation"}}
{"generation": "PersonX hurts like hell. The effect on others will be much more pronounced", "references": ["none"], "input": {"head": "PersonX hurts like hell", "relation": "oEffect"}}
{"generation": "PersonX gets a small loan. After, PersonX will want to buy a house", "references": ["to start his business", "to repay loan"], "input": {"head": "PersonX gets a small loan", "relation": "xWant"}}
{"generation": "PersonX is rather upset. Before that, he says that he's not sure if he's", "references": ["PersonX finds out PersonY and PersonZ are talking about them"], "input": {"head": "PersonX is rather upset", "relation": "isAfter"}}
{"generation": "PersonX turns PersonX's ___ elsewhere. PersonX did this to PersonX's ___", "references": ["to stop seeing a thing", "to stop thinking a thing", "to not be involved", "change there mind"], "input": {"head": "PersonX turns PersonX's ___ elsewhere", "relation": "xIntent"}}
{"generation": "PersonX has to take care of PersonY. Before that, you have to take care of PersonZ", "references": ["PersonX hears that PersonY is sick", "PersonX founds out that PersonY is sick", "PersonX gets a job as a health aide"], "input": {"head": "PersonX has to take care of PersonY", "relation": "isAfter"}}
{"generation": "PersonX maintains PersonY equilibrium. Before that, PersonX is the only one who can be considered", "references": ["PersonX holds up PersonY while ice skating"], "input": {"head": "PersonX maintains PersonY equilibrium", "relation": "isAfter"}}
{"generation": "PersonX makes the team ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX makes the team ___", "relation": "oEffect"}}
{"generation": "PersonX pays ___ at the rate. After, others will want to pay more", "references": ["none"], "input": {"head": "PersonX pays ___ at the rate", "relation": "oWant"}}
{"generation": "PersonX doesn't know what to expect. After, PersonX will want to know what to expect", "references": ["He fights in the war.", "to hope for the best", "to ask questions", "They call him in.", "to read about what they are abou to do", "to add certainty to the situation", "to wait and learn"], "input": {"head": "PersonX does n't know what to expect", "relation": "xWant"}}
{"generation": "a computer program can be used for the purpose of determining the number of people who are", "references": ["take lessons", "carrying out computer tasks", "solve problems people cannot", "teach how to hack", "decipher a code", "program a robot", "sell in a yardsale", "solve a problem", "teach children math skills", "play a game"], "input": {"head": "computer program", "relation": "ObjectUse"}}
{"generation": "You are likely to find a brake in a car that has a brake lever", "references": ["car"], "input": {"head": "brake", "relation": "AtLocation"}}
{"generation": "PersonX loves soccer. Before that, he was a soccer player", "references": ["PersonX goes to a soccer game"], "input": {"head": "PersonX loves soccer", "relation": "isAfter"}}
{"generation": "PersonX increases women's ___. As a result, others feel that women are more likely to be 'empowered", "references": ["happy", "glad", "grateful"], "input": {"head": "PersonX increases women 's ___", "relation": "oReact"}}
{"generation": "PersonX gives PersonX's presentation. The effect on others will be similar to that of a \"good\" person", "references": ["none"], "input": {"head": "PersonX gives PersonX's presentation", "relation": "oEffect"}}
{"generation": "PersonX always made. As a result, others feel that he is a bit too much of a jerk", "references": ["none"], "input": {"head": "PersonX always made", "relation": "oReact"}}
{"generation": "PersonX gathers the ingredients. Before that, he's going to have to figure out how to", "references": ["PersonX looks at a recipe"], "input": {"head": "PersonX gathers the ingredients", "relation": "isAfter"}}
{"generation": "PersonX gets right. PersonX will be the one who gets the most votes", "references": ["faithful", "excited"], "input": {"head": "PersonX gets right", "relation": "xReact"}}
{"generation": "PersonX moves to cambridge in 2013. After that, he moved to the city of New York, where", "references": ["PersonX organized their dorm room", "PersonX settles into a new house"], "input": {"head": "PersonX moves to cambridge in 2013", "relation": "isBefore"}}
{"generation": "PersonX casts ___ before swine. The effect on PersonX will be the same as the effect on PersonX", "references": ["does better for themselves", "they get their heart broken", "gains positive long term results", "they are taken for granted", "none"], "input": {"head": "PersonX casts ___ before swine", "relation": "xEffect"}}
{"generation": "a conviction can be used for a criminal conviction", "references": ["communicate wrongdoing", "overturn", "stand by your beliefs", "give a sermon", "To enhance a lie", "convince another person", "determine guilt", "show your faith", "be determined", "to be sentenced"], "input": {"head": "conviction", "relation": "ObjectUse"}}
{"generation": "PersonX puts PersonX's phone. The effect on PersonX will be the same as the effect on PersonX", "references": ["checks voice mail", "none", "returns calls"], "input": {"head": "PersonX puts PersonX's phone", "relation": "xEffect"}}
{"generation": "PersonX chooses among alternatives. As a result, others feel that the game is too complex and too complex to", "references": ["none"], "input": {"head": "PersonX chooses among alternatives", "relation": "oReact"}}
{"generation": "PersonX spends PersonX's ___ making. PersonX will be able to make a lot of money, but he", "references": ["dedicated"], "input": {"head": "PersonX spends PersonX's ___ making", "relation": "xReact"}}
{"generation": "PersonX becomes a lawyer. Before that, he was a lawyer for the American Civil Liberties Union", "references": ["PersonX goes to law school"], "input": {"head": "PersonX becomes a lawyer", "relation": "isAfter"}}
{"generation": "PersonX gets frustrated. After, PersonX will want to know what's going on", "references": ["to express anger", "to hit the wall", "to solve the problem that's frustrating them", "to be understood", "to calm down"], "input": {"head": "PersonX gets frustrated", "relation": "xWant"}}
{"generation": "PersonX waits all day. After, others will want to see him", "references": ["none"], "input": {"head": "PersonX waits all day", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has been told to leave it alone.", "PersonX isn't educated enough to do it.", "PersonX's security clearance has been revoked", "PersonX doesn't have the passcode", "PersonX doesn't know how to fix the situation.", "PersonX is in jail and not allowed to have contact with others."], "input": {"head": "PersonX takes matters into PersonX's hands", "relation": "HinderedBy"}}
{"generation": "PersonX comes of age. The effect on PersonX will be similar to that of a normal person", "references": ["They celebrate", "gets older", "They do what they are now legal to do.", "They have a party", "can buy alcohol"], "input": {"head": "PersonX comes of age", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX just met Taylor Swift.", "PersonX's friend closed the window.", "it is too hot outside", "PersonX's mother turned the air conditioner off.", "their pool water has been drained", "Y is just too irritating", "PersonX just found out PersonX won the lottery.", "They have a short fuse", "PersonX's spouse turned the heat up."], "input": {"head": "PersonX stays cool", "relation": "HinderedBy"}}
{"generation": "townhouse is a place where you can meet people from all over", "references": ["rather large house"], "input": {"head": "townhouse", "relation": "HasProperty"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has a bed against the wall.", "PersonX sleeps on the ground.", "PersonX's spouse is on that side and is blocking the way.", "PersonX's dog  is sleeping on the wrong side of the bed.", "PersonX has only one side to get out of bed.", "PersonX does not know which side is the wrong side.", "PersonX sleeps on a floor."], "input": {"head": "PersonX gets out of bed on the wrong side", "relation": "HinderedBy"}}
{"generation": "PersonX pulls PersonY's car over. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to give someone a ticket", "inform them of an infraction", "to give persony a ticket"], "input": {"head": "PersonX pulls PersonY's car over", "relation": "xIntent"}}
{"generation": "PersonX gives PersonY a small smile. PersonX is a bit more reserved, but he's still a", "references": ["Cute", "Nice", "ecstatic", "love"], "input": {"head": "PersonX gives PersonY a small smile", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has never studied the material.", "PersonX is too busy with their job.", "PersonY can't afford to take lessons.", "PersonX has not studied enough.", "PersonY does not want to be taught by PersonX.", "PersonX isn't ready to teach lessons yet."], "input": {"head": "PersonX gives PersonY lessons", "relation": "HinderedBy"}}
{"generation": "PersonX talks to PersonY on the phone. PersonX will be able to talk to PersonY and PersonX will", "references": ["happy", "happy to know how everyone is"], "input": {"head": "PersonX talks to PersonY on the phone", "relation": "xReact"}}
{"generation": "PersonX leans PersonY's head back. As a result, others feel the same way", "references": ["indebted.", "nervous", "thankful."], "input": {"head": "PersonX leans PersonY's head back", "relation": "oReact"}}
{"generation": "PersonX falls between two stools. Before that, he's in a wheelchair", "references": ["PersonX drinks too much at the bar", "PersonX gets drunk"], "input": {"head": "PersonX falls between two stools", "relation": "isAfter"}}
{"generation": "PersonX walks PersonY's dogs. After that, they go to the bathroom", "references": ["PersonX is paid for their services", "PersonX picks up dog droppings", "PersonX cleans up poop left behind by the dog"], "input": {"head": "PersonX walks PersonY's dogs", "relation": "isBefore"}}
{"generation": "PersonX loses PersonX's ___ in the war. The effect on others will be similar to that of a normal person", "references": ["loses life", "cries", "help with the prostetic", "na", "none"], "input": {"head": "PersonX loses PersonX's ___ in the war", "relation": "oEffect"}}
{"generation": "PersonX enters a baking competition. After that, he is given a cup of coffee and a cup", "references": ["PersonX loses the competition"], "input": {"head": "PersonX enters a baking competition", "relation": "isBefore"}}
{"generation": "PersonX catches PersonY attention. Before, PersonX needs to be able to talk to PersonY, but now", "references": ["to yell out", "to smile at PersonY", "to get someone's attention", "to talk to PersonY's friend", "to see PersonY", "to walk past someone", "to behave polished"], "input": {"head": "PersonX catches PersonY attention", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["People are judging PersonX.", "All the coupons expired that PersonX had.", "PersonX wife tells him the coupons are expired", "The store doesn't accept coupons", "The coupons are expired", "Personx forgot his coupons at home.", "the cashier tells PersonX the coupons aren't redeemable at their store", "the item PersonX wants doesn't have a coupon"], "input": {"head": "PersonX uses coupons", "relation": "HinderedBy"}}
{"generation": "PersonX wets PersonX's beak. Before that, you can use the same method to get the same", "references": ["PersonX feels thirsty"], "input": {"head": "PersonX wets PersonX's beak", "relation": "isAfter"}}
{"generation": "PersonX minds PersonX's ps and qs. Before that, PersonX was a very good programmer", "references": ["PersonX attends an elite fundraiser"], "input": {"head": "PersonX minds PersonX's ps and qs", "relation": "isAfter"}}
{"generation": "PersonX makes PersonY ___ every time. As a result, others feel like they're being punished for being a little too", "references": ["happy", "grateful"], "input": {"head": "PersonX makes PersonY ___ every time", "relation": "oReact"}}
{"generation": "PersonX enjoys PersonY's company. The effect on others will be felt by the company", "references": ["lessens heart rate.", "relax.", "create bond.", "smile.", "none"], "input": {"head": "PersonX enjoys PersonY's company", "relation": "oEffect"}}
{"generation": "PersonX starts working out. PersonX is a very good person, but he's not a", "references": ["motivated", "active", "weak", "serious", "determined"], "input": {"head": "PersonX starts working out", "relation": "xAttr"}}
{"generation": "PersonX tries to remain calm. After that, he tries to talk to her", "references": ["PersonX hides in the closet"], "input": {"head": "PersonX tries to remain calm", "relation": "isBefore"}}
{"generation": "PersonX feels relief. PersonX is a very good player, but he's not a", "references": ["joyous", "relaxed", "calm", "pain free", "peaceful", "happy", "pleasured"], "input": {"head": "PersonX feels relief", "relation": "xAttr"}}
{"generation": "PersonX runs full speed. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX runs full speed", "relation": "oEffect"}}
{"generation": "PersonX tickles the dragons tail. After, PersonX will want to see the dragon's tail", "references": ["runs away from dragon", "to run away", "sees if dragon liked it", "to put hand down", "to make it laugh", "to run in fear"], "input": {"head": "PersonX tickles the dragons tail", "relation": "xWant"}}
{"generation": "PersonX does odd jobs. After, others will want to know what he's doing", "references": ["none", "To get a job done", "to help X out"], "input": {"head": "PersonX does odd jobs", "relation": "oWant"}}
{"generation": "PersonX laughs PersonY's asses off. The effect on others will be minimal", "references": ["none", "makes a new friend", "has a good time"], "input": {"head": "PersonX laughs PersonY's asses off", "relation": "oEffect"}}
{"generation": "PersonX wouldn't fit. As a result, others feel that they are not allowed to use the game", "references": ["none"], "input": {"head": "PersonX would n't fit", "relation": "oReact"}}
{"generation": "PersonX gives you PersonY account. The effect on PersonX will be the same as PersonY", "references": ["Guilt", "yelled at", "gets call", "Fear"], "input": {"head": "PersonX gives you PersonY account", "relation": "xEffect"}}
{"generation": "PersonX expresses PersonX's belief. PersonX will be able to see the person in person, and will", "references": ["powerful", "smart", "happy", "happy they won the debate", "influential", "satisfied"], "input": {"head": "PersonX expresses PersonX's belief", "relation": "xReact"}}
{"generation": "PersonX works sick. Before that, he was a very good player", "references": ["PersonX sneezes and coughs", "PersonX wakes up coughing and sneezing", "PersonX goes to work with a cold"], "input": {"head": "PersonX works sick", "relation": "isAfter"}}
{"generation": "PersonX acts weird. After that, he's a bit of a jerk", "references": ["PersonX doesn't care that they don't have any friends", "PersonX is excluded from future parties", "PersonX ends up making a scene"], "input": {"head": "PersonX acts weird", "relation": "isBefore"}}
{"generation": "PersonX gives bob. After, others will want to know what the hell is going on", "references": ["to tell all their friends about their present", "to try on their new coat", "to have the stuff", "to take the thing", "none"], "input": {"head": "PersonX gives bob", "relation": "oWant"}}
{"generation": "PersonX spends ___ at PersonY's house. After, PersonX will want to talk to PersonY about the situation", "references": ["more enjoyment", "to go home", "night dinner", "thank them"], "input": {"head": "PersonX spends ___ at PersonY's house", "relation": "xWant"}}
{"generation": "PersonX calls an ambulance. After, PersonX will want to know if the person is okay", "references": ["to walk again", "administer first aid", "see their family", "wait for ambulence", "live", "to make sure the person is ok", "to calm them down"], "input": {"head": "PersonX calls an ambulance", "relation": "xWant"}}
{"generation": "PersonX likes cheese. After, PersonX will want to know what you're eating", "references": ["to learn how to make cheese at home", "taste a sample", "to buy more cheese", "to make grilled cheese sandwich", "grocery shop"], "input": {"head": "PersonX likes cheese", "relation": "xWant"}}
{"generation": "a phone call can be used for a number of reasons", "references": ["order a pizza", "use as a 3 way to talk to many at the same time", "call for help", "make a prank call", "lift one's spirits", "hear the good news", "call a computer to do things for you", "contact a loved one", "call emergency services", "near conclusion", "cost lot of money"], "input": {"head": "phone call", "relation": "ObjectUse"}}
{"generation": "a flower can be used for a variety of purposes, including:\n\n\u2022", "references": ["catch a rabbit/ rabbit bait", "give to their date", "boil and make tea", "make yard pretty", "give to mom on mother's day", "give PersonY when asking", "as part of clown costume", "rub on head to see if someone likes butter", "help personY notice them", "take a snapshot", "buy from a vendor to give to PersonY", "wear in hair", "give to a date", "smell a fragrance"], "input": {"head": "flower", "relation": "ObjectUse"}}
{"generation": "PersonX hits PersonX's friend. Before that, PersonX has to deal with the fact that Person", "references": ["PersonX gets in an argument", "PersonX gets in to an argument"], "input": {"head": "PersonX hits PersonX's friend", "relation": "isAfter"}}
{"generation": "PersonX doesn't want to go back. Before that, he's been doing it for a while", "references": ["PersonX leaves work after a hard day"], "input": {"head": "PersonX does n't want to go back", "relation": "isAfter"}}
{"generation": "PersonX sees PersonY's wife. The effect on others will be different", "references": ["I asked who he was", "is greeted", "is observed", "they talked together", "none"], "input": {"head": "PersonX sees PersonY's wife", "relation": "oEffect"}}
{"generation": "wage war. Before, PersonX needs to be able to get a job, but now it", "references": ["raise army", "buy weapons", "hate another group", "tell to marines", "have opponent", "use weapons to kill people", "make enemies", "build military", "send troops", "have weapons", "think again", "create army", "shoot people", "gather army", "find enemy", "use convictec felons", "head of state", "plan supply needs", "arm yourself", "stockpile weapons and gather troops", "provoke", "attack enemy", "train army", "have army", "fire missle at another country", "have weapons and cause", "hire army", "join army", "get allies", "insure have enough supplies"], "input": {"head": "wage war", "relation": "xNeed"}}
{"generation": "PersonX wants a car. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX wants a car", "relation": "oReact"}}
{"generation": "PersonX skates around. Before, PersonX needs to be able to move around", "references": ["skates", "to put on skates", "to drive to the skating ring", "to drive to the beach", "a skate rink"], "input": {"head": "PersonX skates around", "relation": "xNeed"}}
{"generation": "PersonX prevents the ___ from entering. The effect on others will be limited to the user", "references": ["none", "Try to find hold", "Try to get in"], "input": {"head": "PersonX prevents the ___ from entering", "relation": "oEffect"}}
{"generation": "You are likely to find a heavy traffic in a few minutes", "references": ["freeway"], "input": {"head": "heavy traffic", "relation": "AtLocation"}}
{"generation": "PersonX conceals PersonY's identity. As a result, others feel that PersonY is a \"fake\" and Person", "references": ["happy if they are person y and want to hide out.", "grateful.", "protected", "angry.", "unhappy if persony is concealing himself for a criminal reason."], "input": {"head": "PersonX conceals PersonY's identity", "relation": "oReact"}}
{"generation": "PersonX broadens PersonY's ___ to include. As a result, others feel more comfortable with PersonX's approach", "references": ["motivated", "educated", "enlightened", "overwhelmed"], "input": {"head": "PersonX broadens PersonY's ___ to include", "relation": "oReact"}}
{"generation": "PersonX reduces ___ in patients. PersonX is a non-invasive, non-invasive", "references": ["capable", "determind", "strong", "guilty", "glad", "successful", "talented", "caring"], "input": {"head": "PersonX reduces ___ in patients", "relation": "xAttr"}}
{"generation": "You are likely to find a butterfly in an area where you have no idea where it is", "references": ["air", "meadow"], "input": {"head": "butterfly", "relation": "AtLocation"}}
{"generation": "PersonX teaches PersonY things. Before that, he taught PersonX how to use the \"X", "references": ["PersonX is hired as a tutor"], "input": {"head": "PersonX teaches PersonY things", "relation": "isAfter"}}
{"generation": "PersonX wants to learn to cook. After, others will want to learn to cook", "references": ["none", "To eat the food", "Compliment the cook"], "input": {"head": "PersonX wants to learn to cook", "relation": "oWant"}}
{"generation": "PersonX misses school. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX misses school", "relation": "oEffect"}}
{"generation": "PersonX has tons of fun. Before, PersonX needs to be able to play with other people", "references": ["none", "to be humorous", "to be jolly"], "input": {"head": "PersonX has tons of fun", "relation": "xNeed"}}
{"generation": "PersonX transforms ___ into outputs. Before, PersonX needs to be able to use the output of a function to", "references": ["convert text into data", "to follow the diagram", "to buy the necessary wiring", "transfer the data into", "none"], "input": {"head": "PersonX transforms ___ into outputs", "relation": "xNeed"}}
{"generation": "a hair ties can be used for a variety of purposes", "references": ["hold telephone wires together", "hold the braids", "make into artwork", "put hair into a ponytail", "keep hair out of face", "use as bracelet", "style hair", "tie the braids", "make a necklace", "tie up hair", "keep it out of the eyes", "keep the hair together", "keep pant zippers up", "make tie dye shirts", "substitute for rubber bands"], "input": {"head": "hair ties", "relation": "ObjectUse"}}
{"generation": "PersonX considers carefully the ___. PersonX will be the one who is responsible for the execution of the", "references": ["more certain", "contented about the information he collected.", "better"], "input": {"head": "PersonX considers carefully the ___", "relation": "xReact"}}
{"generation": "a salon can be used for a variety of purposes, including:\n\n\u2022", "references": ["having hair styled", "get new hair style", "having nails manicured", "get a shave", "earning living", "host a birthday party", "having hair permed", "getting manicure", "do hair", "hide from an angry spouse", "hair styling", "have a wine and cheese tasting", "start a business", "exchange information with intelligent people", "getting pedicure", "get nails done", "manicures", "shampoos", "Find hair dresser", "getting perm", "having hair colored", "treat yourself", "fingernail painting", "sell pop-up items", "get hair done", "having hair cut", "gather cut hair for a wig", "getting hair colored", "meet with your book club", "hair cutting", "makeovers", "getting haircut"], "input": {"head": "salon", "relation": "ObjectUse"}}
{"generation": "PersonX bites the dust. As a result, others feel the same way", "references": ["anguish", "pity", "loss", "struck with horror", "for an opponent, he must be happy", "victorious"], "input": {"head": "PersonX bites the dust", "relation": "oReact"}}
{"generation": "PersonX casts PersonY's eyes. PersonX is a character who is a member of the group", "references": ["shy", "aware", "fearful", "vigilent", "nervous", "oubtfuld"], "input": {"head": "PersonX casts PersonY's eyes", "relation": "xAttr"}}
{"generation": "PersonX reduces ___ in patients. PersonX will be able to use the same number of doses of ___", "references": ["fulfilled", "noble"], "input": {"head": "PersonX reduces ___ in patients", "relation": "xReact"}}
{"generation": "PersonX uses a car every day. After that, he's a regular driver", "references": ["PersonX drives the car to work"], "input": {"head": "PersonX uses a car every day", "relation": "isBefore"}}
{"generation": "PersonX visits a farm. Before, PersonX needs to find a way to get a job", "references": ["to drive to the car", "learn about farm", "to get in their car", "check visiting hours", "drive to farm", "to get in the car", "to drive"], "input": {"head": "PersonX visits a farm", "relation": "xNeed"}}
{"generation": "PersonX is rather upset. PersonX will be the one to get the message", "references": ["let down", "resentful", "sad", "unenthused", "unhappy", "sad and depressed"], "input": {"head": "PersonX is rather upset", "relation": "xReact"}}
{"generation": "PersonX eats crackers. PersonX is a very good friend of mine", "references": ["starving", "nauseous", "hungry", "determined"], "input": {"head": "PersonX eats crackers", "relation": "xAttr"}}
{"generation": "PersonX thinks it was beautiful. The effect on PersonX will be different", "references": ["PersonX purchases the beautiful item.", "smiles", "falls in love with something", "admires something", "PersonX snaps a photo of the item.", "enjoys looking at it"], "input": {"head": "PersonX thinks it was beautiful", "relation": "xEffect"}}
{"generation": "spanish restaurant is a great place to get a drink", "references": ["good food"], "input": {"head": "spanish restaurant", "relation": "HasProperty"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not have enough money.", "he does not have the money", "PersonX's boss fired PersonX and now they have no money.", "he can not find one he likes", "the available lawyers won't take the case", "PersonX's spouse took all of PersonX's money.", "PersonX's parents cannot afford it.", "PersonX lacks the budget necessary", "PersonX has ruined their reputation with all nearby lawyers."], "input": {"head": "PersonX hires a lawyer", "relation": "HinderedBy"}}
{"generation": "PersonX gives PersonY's dog. Before that, PersonY gives PersonX's dog", "references": ["PersonX buys a box of dog treats"], "input": {"head": "PersonX gives PersonY's dog", "relation": "isAfter"}}
{"generation": "PersonX achieves PersonY level. After, others will want to know who is the best person to be with", "references": ["to put more efforts", "none", "to get better than him"], "input": {"head": "PersonX achieves PersonY level", "relation": "oWant"}}
{"generation": "PersonX puts PersonX's mind to it. Before, PersonX needs to know what PersonX is thinking", "references": ["to focus on it", "to have a task", "to use thought to help with it", "to want something very much", "none"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "xNeed"}}
{"generation": "PersonX convinces PersonX's parents. PersonX will be able to use the powers of the powers of the", "references": ["happy about his achievement", "happy", "eager", "excited", "grateful", "like they have some responsibility", "relieved"], "input": {"head": "PersonX convinces PersonX's parents", "relation": "xReact"}}
{"generation": "PersonX camps with PersonX's family. After, PersonX will want to know who the person is", "references": ["to grow with their family", "to make a campfire", "to do campfire", "to be in nature", "to watch nightsky", "to go hiking"], "input": {"head": "PersonX camps with PersonX's family", "relation": "xWant"}}
{"generation": "PersonX loves shoes. Before, PersonX needs to be able to wear shoes", "references": ["to have tried new shoes", "to be at shoe store", "none"], "input": {"head": "PersonX loves shoes", "relation": "xNeed"}}
{"generation": "PersonX catches PersonX's dog. PersonX did this to PersonX's dog", "references": ["it to come home safe", "to keep the dog from running away", "to catch personx's dog"], "input": {"head": "PersonX catches PersonX's dog", "relation": "xIntent"}}
{"generation": "PersonX sets PersonX's cap at ___. After, others will want to know what the cap is", "references": ["to start a new life", "none", "to marry him"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "oWant"}}
{"generation": "PersonX finds another. Before that, he's been working on a new game", "references": ["PersonX loses their book", "PersonX sees a shell", "PersonX loses their toy"], "input": {"head": "PersonX finds another", "relation": "isAfter"}}
{"generation": "PersonX starts a family. PersonX did this to her", "references": ["to have a family", "have children", "raise kids", "to share his/her life with other people and have a family"], "input": {"head": "PersonX starts a family", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is the boss", "PersonX's mom knew she was lying", "PersonX's boss was watching her", "PersonX's coworker saw her in the video", "PersonX isn't a good liar", "PersonX doesn't know what to say", "PersonX has too much integrity.", "PersonX already told the truth.", "Person X has signed an ethics agreement"], "input": {"head": "PersonX fudges the issue", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Personx can't afford to impress persony.", "PersonX has trouble trusting others.", "PersonX doesn't have their act together.", "Persony's", "PersonY has too high standards.", "PersonX has too many secrets."], "input": {"head": "PersonX is good enough for PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX brings PersonY to the doctor. After that, they go to the hospital", "references": ["PersonX goes to a pharmacy"], "input": {"head": "PersonX brings PersonY to the doctor", "relation": "isBefore"}}
{"generation": "PersonX talks to PersonY on the phone. After, PersonX will want to know if PersonY is a good person", "references": ["to converse", "say good bye", "hang up the receiver", "to ask questions"], "input": {"head": "PersonX talks to PersonY on the phone", "relation": "xWant"}}
{"generation": "PersonX gives a presentation. After, PersonX will want to know what you're doing", "references": ["finish work", "to impress others", "drives PersonX home", "go home", "relax", "packs up his papers and book", "to show his knowledge"], "input": {"head": "PersonX gives a presentation", "relation": "xWant"}}
{"generation": "PersonX leans back against the wall. PersonX did this to me", "references": ["wait in comfort", "relax their feet", "seem cool and relaxed", "to rest", "to watch people"], "input": {"head": "PersonX leans back against the wall", "relation": "xIntent"}}
{"generation": "recieving favor. After, PersonX will want to know who you are and what you're doing", "references": ["give gift"], "input": {"head": "recieving favor", "relation": "xWant"}}
{"generation": "PersonX is a freshman in college. Before that, he was a senior at the University of California,", "references": ["PersonX signs up for classes"], "input": {"head": "PersonX is a freshman in college", "relation": "isAfter"}}
{"generation": "PersonX wastes PersonX's day. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX wastes PersonX's day", "relation": "oReact"}}
{"generation": "PersonX copies PersonY. The effect on PersonX will be the same as PersonY", "references": ["becomes nervous", "looks at PersonY", "looks foolish", "none", "does a dance"], "input": {"head": "PersonX copies PersonY", "relation": "xEffect"}}
{"generation": "PersonX thanks ___ for PersonY's comments. After, others will want to know what you think", "references": ["shake hands", "say you are welcome", "to listen to comments", "to object to comments"], "input": {"head": "PersonX thanks ___ for PersonY's comments", "relation": "oWant"}}
{"generation": "PersonX makes PersonY well. After, others will want to know what's going on", "references": ["to watch tv together", "to get out of bed", "to express gratitude", "to play a board game", "to go outside"], "input": {"head": "PersonX makes PersonY well", "relation": "oWant"}}
{"generation": "PersonX touches wood. Before that, he was a very good painter", "references": ["PersonX sees the wood"], "input": {"head": "PersonX touches wood", "relation": "isAfter"}}
{"generation": "PersonX puts PersonY together. PersonX will be the one who gets the most points", "references": ["kind", "useful", "helpful"], "input": {"head": "PersonX puts PersonY together", "relation": "xReact"}}
{"generation": "PersonX pries open ___ is filled by a random number of people", "references": ["the hatch", "a jar", "doors", "locks", "the door", "the jar", "a case", "a can"], "input": {"head": "PersonX pries open ___", "relation": "isFilledBy"}}
{"generation": "PersonX divides ___ into groups. Before, PersonX needs to be able to talk to other people", "references": ["games", "enjoy"], "input": {"head": "PersonX divides ___ into groups", "relation": "xNeed"}}
{"generation": "PersonX rides bikes. Before that, he was a mechanic", "references": ["PersonX puts a helmet on"], "input": {"head": "PersonX rides bikes", "relation": "isAfter"}}
{"generation": "PersonX wants to clean it. Before that, he's been working on it for a while", "references": ["PersonX buys an old couch"], "input": {"head": "PersonX wants to clean it", "relation": "isAfter"}}
{"generation": "PersonX gets sunburned. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX gets sunburned", "relation": "oEffect"}}
{"generation": "PersonX cuts swathes. PersonX is a very good player, but he's not a", "references": ["productive", "skillful", "hardworking", "crafty", "violent", "creative"], "input": {"head": "PersonX cuts swathes", "relation": "xAttr"}}
{"generation": "PersonX surmounts every ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX surmounts every ___", "relation": "oEffect"}}
{"generation": "PersonX borrows some money. After that, he's going to have to pay for the rest", "references": ["PersonX buys the new car"], "input": {"head": "PersonX borrows some money", "relation": "isBefore"}}
{"generation": "a list of candidates can be used for the election", "references": ["learn about up and comers", "select an applicant", "send thank you cards to", "cast a vote", "see who is best", "make prank calls to", "see who is to blackmail", "evaluate options", "find a date", "pick a leader", "vote", "compare atributes"], "input": {"head": "list of candidates", "relation": "ObjectUse"}}
{"generation": "PersonX drags PersonY along. After, others will want to know what's going on", "references": ["to look around", "to enjoy party", "to go back home", "to stay home", "to avoid PersonX"], "input": {"head": "PersonX drags PersonY along", "relation": "oWant"}}
{"generation": "PersonX asks PersonY's little brother. PersonX is a little older than PersonY, and he's", "references": ["social", "aware", "inquisitive", "friendly", "caring", "commanding"], "input": {"head": "PersonX asks PersonY's little brother", "relation": "xAttr"}}
{"generation": "PersonX climbs the fence. Before that, he's been in the middle of a fight with", "references": ["PersonX almost runs into a fence"], "input": {"head": "PersonX climbs the fence", "relation": "isAfter"}}
{"generation": "PersonX lands on PersonY's leg. The effect on PersonX will be reversed", "references": ["gets yelled at", "none", "Get's slapped"], "input": {"head": "PersonX lands on PersonY's leg", "relation": "xEffect"}}
{"generation": "PersonX sends PersonY to the showers. Before, PersonX needs to get a shower, but PersonY needs to get", "references": ["none"], "input": {"head": "PersonX sends PersonY to the showers", "relation": "xNeed"}}
{"generation": "PersonX steps up PersonX's game. Before that, he's been a very good player", "references": ["PersonX is talked to by their manager"], "input": {"head": "PersonX steps up PersonX's game", "relation": "isAfter"}}
{"generation": "PersonX is really disappointed. After that, he's been doing a lot of work on the", "references": ["PersonX onx gets back on the bike"], "input": {"head": "PersonX is really disappointed", "relation": "isBefore"}}
{"generation": "PersonX takes ___ to heal is filled by the power of the power of the power of the", "references": ["pills", "vitamins", "squirrels", "cats", "dogs", "medicine", "rabbits"], "input": {"head": "PersonX takes ___ to heal", "relation": "isFilledBy"}}
{"generation": "PersonX wants to play. Before that, he's been playing with his friends", "references": ["PersonX is bored"], "input": {"head": "PersonX wants to play", "relation": "isAfter"}}
{"generation": "PersonX buys a car. After, PersonX will want to buy a car", "references": ["to show it to friends", "take a picture", "drive it home", "to register and insure the car", "to take it driving", "to drive the car home"], "input": {"head": "PersonX buys a car", "relation": "xWant"}}
{"generation": "PersonX turns in PersonX's grave. Before that, he's in the middle of a conversation with a", "references": ["PersonX is dead"], "input": {"head": "PersonX turns in PersonX's grave", "relation": "isAfter"}}
{"generation": "PersonX calls PersonX's work. The effect on others will be different", "references": ["pick up phone", "respond to information"], "input": {"head": "PersonX calls PersonX's work", "relation": "oEffect"}}
{"generation": "PersonX breaks free. Before that, he's got a new friend, a new friend", "references": ["PersonX has tangled their foot on a barb wire fence"], "input": {"head": "PersonX breaks free", "relation": "isAfter"}}
{"generation": "PersonX hosts a party. After that, he goes to the party and asks the party to", "references": ["PersonX mixes drinks for guests"], "input": {"head": "PersonX hosts a party", "relation": "isBefore"}}
{"generation": "PersonX loses PersonY's wallet. After that, PersonX loses PersonY's wallet", "references": ["PersonX goes home to look for wallet"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "isBefore"}}
{"generation": "PersonX arches PersonY's body. PersonX will be able to see PersonY's body", "references": ["refreshed", "more limber", "helpful"], "input": {"head": "PersonX arches PersonY's body", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is the only person authorized to get the order.", "PersonX cannot hear the order.", "PersonY would not allow them to get their order.", "PersonX is handling another customer.", "PersonX has to be at a wedding in ten minutes.", "PersonX does not know how."], "input": {"head": "PersonX gets PersonY's order", "relation": "HinderedBy"}}
{"generation": "PersonX meets PersonY's father. The effect on others will be different", "references": ["meet PersonX", "tell X to stay away", "those people are luckey persons", "have more information about PersonX", "those persons can develope their relationship", "welcome X into the family"], "input": {"head": "PersonX meets PersonY's father", "relation": "oEffect"}}
{"generation": "PersonX also stopped. Before, PersonX needs to be able to use the \"X\" key to", "references": ["none"], "input": {"head": "PersonX also stopped", "relation": "xNeed"}}
{"generation": "PersonX desperately needed ___. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX desperately needed ___", "relation": "oWant"}}
{"generation": "PersonX makes a date. As a result, others feel that they are being treated unfairly", "references": ["happy", "interested"], "input": {"head": "PersonX makes a date", "relation": "oReact"}}
{"generation": "PersonX likes a girl. After that, she's a girl", "references": ["PersonX invites the girl on a date", "PersonX xonx asks the girl out to dinner"], "input": {"head": "PersonX likes a girl", "relation": "isBefore"}}
{"generation": "PersonX loves to surf. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX loves to surf", "relation": "oEffect"}}
{"generation": "PersonX accidentally kicked. PersonX is now a member of the team", "references": ["sorrowful", "clumsy", "not careful", "uncoordinated", "Clumsy", "regretful"], "input": {"head": "PersonX accidentally kicked", "relation": "xAttr"}}
{"generation": "PersonX takes ___ daily. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX takes ___ daily", "relation": "oEffect"}}
{"generation": "PersonX corrects PersonY errors. After that, PersonX will be able to correct PersonY errors", "references": ["PersonX instructs PersonY to proceed again", "PersonX returns PersonY's paper"], "input": {"head": "PersonX corrects PersonY errors", "relation": "isBefore"}}
{"generation": "PersonX pushes it. PersonX did this to me", "references": ["none", "to achieve", "to succeed", "to move the object"], "input": {"head": "PersonX pushes it", "relation": "xIntent"}}
{"generation": "PersonX babysits PersonX's cousin. The effect on PersonX will be similar to that of a normal person", "references": ["waves hands", "gets paid", "yells", "sings songs", "IT CUTENESS", "gets shocked"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "xEffect"}}
{"generation": "PersonX puts it under PersonX's pillow. After that, he's back in the room", "references": ["PersonX is waiting for the tooth fairy"], "input": {"head": "PersonX puts it under PersonX's pillow", "relation": "isBefore"}}
{"generation": "PersonX kisses PersonY's way. As a result, others feel the same way", "references": ["happy"], "input": {"head": "PersonX kisses PersonY's way", "relation": "oReact"}}
{"generation": "PersonX finds what PersonY wanted. PersonX will be able to use the same abilities as PersonY", "references": ["happy about it", "gratified"], "input": {"head": "PersonX finds what PersonY wanted", "relation": "xReact"}}
{"generation": "PersonX assigns ___ to groups. After, PersonX will want to assign the group to a specific person", "references": ["to exercise leadership", "commited", "fun", "to make sure everything goes smoothly", "to divide properly", "to stay in control"], "input": {"head": "PersonX assigns ___ to groups", "relation": "xWant"}}
{"generation": "PersonX wants ___ so badly. PersonX will be the one to get the ___", "references": ["apprehensive", "like it would greatly improve their life"], "input": {"head": "PersonX wants ___ so badly", "relation": "xReact"}}
{"generation": "PersonX feels closer. After, PersonX will want to know what you're doing, and you'll want", "references": ["move a step back", "get closer still"], "input": {"head": "PersonX feels closer", "relation": "xWant"}}
{"generation": "PersonX stops but PersonY didn't listen. PersonX did this to me", "references": ["to follow instructions", "none"], "input": {"head": "PersonX stops but PersonY did n't listen", "relation": "xIntent"}}
{"generation": "PersonX saves PersonY's ___ from PersonX's sins. After, PersonX will want to kill PersonY", "references": ["to yell at personY", "them to be sorry for their sins", "to tell PersonY the truth", "to sacrifice themselves", "to approach personY", "them to live a good life"], "input": {"head": "PersonX saves PersonY's ___ from PersonX's sins", "relation": "xWant"}}
{"generation": "PersonX pays PersonY well. After, PersonX will want to know who is the best person to be with", "references": ["to give a bonus", "to hire them for more work"], "input": {"head": "PersonX pays PersonY well", "relation": "xWant"}}
{"generation": "PersonX is also nervous. As a result, others feel that he is not as good as he thinks he", "references": ["none"], "input": {"head": "PersonX is also nervous", "relation": "oReact"}}
{"generation": "PersonX leaves PersonY's alone. The effect on others will be limited to the person who is the most likely to", "references": ["wants to feel better", "looks groggy", "looks around", "exits room", "none"], "input": {"head": "PersonX leaves PersonY's alone", "relation": "oEffect"}}
{"generation": "PersonX stops being friends with PersonY. The effect on PersonX will be reversed", "references": ["ignores Y's call", "Unfriend them on Facebook", "Call blocks", "blocks Person Y on facebook"], "input": {"head": "PersonX stops being friends with PersonY", "relation": "xEffect"}}
{"generation": "PersonX starts working out every day. PersonX did this to help him get through the day", "references": ["feel confident", "to be in shape", "to be healthy.", "to be healthy"], "input": {"head": "PersonX starts working out every day", "relation": "xIntent"}}
{"generation": "PersonX attention whores. PersonX will be the one who gets the most attention", "references": ["needy", "neglected"], "input": {"head": "PersonX attention whores", "relation": "xReact"}}
{"generation": "a white wine can be used for a variety of purposes, including:\n\n\u2022", "references": ["give a toast", "allow to turn to vinegar", "put on the red to stop staining", "serve to guests", "drink in a glass", "serve at wedding", "uncork in the middle of the street", "get drunk quickly", "pour on a cloth", "drink", "serve at a party"], "input": {"head": "white wine", "relation": "ObjectUse"}}
{"generation": "PersonX is hot and humid. After, others will want to take a shower", "references": ["none"], "input": {"head": "PersonX is hot and humid", "relation": "oWant"}}
{"generation": "PersonX reaches PersonY's destination. Before that, you can use the same method to get PersonX", "references": ["PersonX drives for an hour"], "input": {"head": "PersonX reaches PersonY's destination", "relation": "isAfter"}}
{"generation": "PersonX learns how to bake a cake. PersonX is a very good baker", "references": ["curious", "Sweet tooth", "ambitious", "Creative", "interested", "creative"], "input": {"head": "PersonX learns how to bake a cake", "relation": "xAttr"}}
{"generation": "PersonX doeth all ___ well is filled by the same people", "references": ["testing", "baskets", "pottery", "frames", "sports", "cleaning", "reading", "things", "portraits"], "input": {"head": "PersonX doeth all ___ well", "relation": "isFilledBy"}}
{"generation": "PersonX reduces PersonY's dependence. As a result, others feel less dependent on PersonX", "references": ["jelous,unhappy", "pressured"], "input": {"head": "PersonX reduces PersonY's dependence", "relation": "oReact"}}
{"generation": "PersonX tells PersonY must be. PersonX did this to me", "references": ["a cheater"], "input": {"head": "PersonX tells PersonY must be", "relation": "xIntent"}}
{"generation": "PersonX writes music. After that, he writes music for the band", "references": ["PersonX plays the music"], "input": {"head": "PersonX writes music", "relation": "isBefore"}}
{"generation": "PersonX opens PersonX's legs. As a result, others feel the same way", "references": ["attracted", "none", "aroused"], "input": {"head": "PersonX opens PersonX's legs", "relation": "oReact"}}
{"generation": "PersonX kisses PersonY's way. After that, they kiss PersonX again", "references": ["PersonX waves goodbye to PersonY"], "input": {"head": "PersonX kisses PersonY's way", "relation": "isBefore"}}
{"generation": "PersonX conducts PersonY investigation. As a result, others feel that PersonX is not doing enough to protect the", "references": ["suspicious", "none"], "input": {"head": "PersonX conducts PersonY investigation", "relation": "oReact"}}
{"generation": "PersonX escorts PersonY back. Before, PersonX needs to be able to get PersonY to leave", "references": ["to have taken PersonY to court", "to have arrested personY", "to have asked PersonY to go with them", "to lead PersonY", "none", "to tell PersonY to follow them"], "input": {"head": "PersonX escorts PersonY back", "relation": "xNeed"}}
{"generation": "PersonX replaces PersonX's old one. After that, PersonX will be replaced by PersonX's new", "references": ["PersonX enjoys their new car"], "input": {"head": "PersonX replaces PersonX's old one", "relation": "isBefore"}}
{"generation": "PersonX does a wonderful job. PersonX did this to me", "references": ["to be appreciated", "wants to be a good employee", "to fulfill needs", "to make money"], "input": {"head": "PersonX does a wonderful job", "relation": "xIntent"}}
{"generation": "PersonX argues with PersonY's boyfriend. PersonX did this to PersonY, and PersonY did this to Person", "references": ["does not agree with person y's boyfriend", "they are cheating on persony", "to right a wrong", "to be in charge", "the boyfriend won't breakup with persony"], "input": {"head": "PersonX argues with PersonY's boyfriend", "relation": "xIntent"}}
{"generation": "PersonX sees PersonY thing. As a result, others feel that PersonX is a bad person", "references": ["surprised"], "input": {"head": "PersonX sees PersonY thing", "relation": "oReact"}}
{"generation": "PersonX burns the ___ at both ends. PersonX will be able to use the ___ to kill PersonX", "references": ["happy", "tired", "excited", "the problem in solution"], "input": {"head": "PersonX burns the ___ at both ends", "relation": "xReact"}}
{"generation": "PersonX builds castles in the air. As a result, others feel that the game is too complex and too complex to", "references": ["none"], "input": {"head": "PersonX builds castles in the air", "relation": "oReact"}}
{"generation": "You are likely to find a perserves in a salad, but I don't think you'll find", "references": ["pantry"], "input": {"head": "perserves", "relation": "AtLocation"}}
{"generation": "PersonX misses PersonY a lot. PersonX is a bit of a jerk, but he's a", "references": ["lonely", "desolate", "remorseful"], "input": {"head": "PersonX misses PersonY a lot", "relation": "xAttr"}}
{"generation": "PersonX attends college. After, others will want to know what she's doing", "references": ["to help Person X study.", "to help Person X pay.", "to help Person X move."], "input": {"head": "PersonX attends college", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is a cat person.", "PersonY's dog is too mean", "PersonY does not have a dog", "PersonY's dog always bites him.", "PersonX is allergic to dogs", "PersonX is allergic to dogs.", "PersonY has a really mean dog."], "input": {"head": "PersonX loves PersonY's dog", "relation": "HinderedBy"}}
{"generation": "PersonX changes PersonX's hairstyle. Before that, it was a simple hairstyle", "references": ["PersonX needs a haircut"], "input": {"head": "PersonX changes PersonX's hairstyle", "relation": "isAfter"}}
{"generation": "PersonX takes PersonX's outside. Before, PersonX needs to be able to see PersonX's outside", "references": ["go through door", "to walk to the door.", "to open the door", "to open the door.", "to wear proper clothes", "be inside a building"], "input": {"head": "PersonX takes PersonX's outside", "relation": "xNeed"}}
{"generation": "PersonX looks awful. As a result, others feel that the game is too much of a mess", "references": ["none"], "input": {"head": "PersonX looks awful", "relation": "oReact"}}
{"generation": "PersonX makes PersonY resistance. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX makes PersonY resistance", "relation": "oEffect"}}
{"generation": "While play chess, you would have to be a master of the game to be", "references": ["controlling diagonal", "calculate variations", "move pieces", "capture of queen", "setting up figures", "concentrate strongly", "win or lose game", "set up board", "move pawn", "capture of rook", "middle game", "drawn game", "say checkmate", "determine who plays white", "loosing knight", "guarding pawn", "checking", "being part of tournament", "promoting pawn", "concentrate", "protecting piece", "castling kingside", "unexpected move", "following rules", "capture of bishop", "set up pieces", "checkmate opponent", "concerntrate on chess game", "move chess pieces", "winning", "set up chess board", "castling queenside", "loosing queen", "think", "loosing rook", "run out of time", "move white pawn", "intellectual stimulation", "put away pieces", "promotion", "capture pawns", "time expires", "might win", "capture of pawn", "contemplate move", "controlling square", "travel arrangements", "castling", "checkmate", "openning variation", "try to win", "time moves", "having passed pawn", "pack away chessboard", "thinking", "lose", "put set away", "lose track of time", "en passant", "would win", "capturing en passant", "use timer", "move white knight", "defending piece", "artificially intelligent opponent", "loosing bishop", "controlling row", "visualizing patterns", "textbook move", "controlling file", "getting beat by prodigy", "patience", "trap", "move piece", "win", "discovered attack", "focus attention", "touch piece", "put opponent's king in checkmate", "end game reached", "discovered check", "capture of knight", "make opening move", "castling king", "think ahead", "loosing pawn", "kibitzers gather", "being watched by kibitzers", "attacking and defending", "computer wins", "forced move", "kill opponent's queen", "pieces get knocked over", "end game", "compete against another player", "set up game pieces"], "input": {"head": "play chess", "relation": "HasSubEvent"}}
{"generation": "PersonX looks both ways. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX looks both ways", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is experiencing PersonX's worst fear", "Is having a panic attack", "PersonX had an accident.", "PersonX has severe anxiety", "Has adrenaline flowing", "PersonX has an emergency.", "Is worked up"], "input": {"head": "PersonX tries to remain calm", "relation": "HinderedBy"}}
{"generation": "PersonX finds PersonX's ball. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX finds PersonX's ball", "relation": "oEffect"}}
{"generation": "PersonX brings the puppy. Before, PersonX needs to be able to walk, but now he can walk", "references": ["to go to the place in question", "to have a little dog", "Puts him in the car.", "select the pet", "go to pet store", "She puts him in crate."], "input": {"head": "PersonX brings the puppy", "relation": "xNeed"}}
{"generation": "PersonX lights another ___ is filled by a ___", "references": ["cigarette", "cigar", "firework", "lighter", "bonfire", "match", "fire", "candle"], "input": {"head": "PersonX lights another ___", "relation": "isFilledBy"}}
{"generation": "PersonX avoids every ___. The effect on others will be the same", "references": ["find he is cold.", "none", "avoid personx also."], "input": {"head": "PersonX avoids every ___", "relation": "oEffect"}}
{"generation": "PersonX always beat. PersonX will be the one who wins", "references": ["accomplished", "competitive", "competent"], "input": {"head": "PersonX always beat", "relation": "xReact"}}
{"generation": "PersonX asks anyone. PersonX is a very nice guy", "references": ["desperate", "inquisitive", "curious", "persistent", "determined"], "input": {"head": "PersonX asks anyone", "relation": "xAttr"}}
{"generation": "PersonX walks to the car. After, PersonX will want to talk to the other two", "references": ["insert the key", "start the car", "sit in car", "Gets her keys out.", "Cranks up the engine."], "input": {"head": "PersonX walks to the car", "relation": "xWant"}}
{"generation": "PersonX doesn't have a lot of money. After, PersonX will want to buy a lot of things", "references": ["to get another job", "to get a new job to make money", "to make some", "to save whatever little they have", "to save it", "to ask someone for help", "to borrow money from another person"], "input": {"head": "PersonX does n't have a lot of money", "relation": "xWant"}}
{"generation": "PersonX catches my eye. Before that, I was a kid, and I was a kid", "references": ["PersonX watches a woman from afar", "PersonX buys a new outfit"], "input": {"head": "PersonX catches my eye", "relation": "isAfter"}}
{"generation": "PersonX meets PersonY's husband. PersonX is a very nice guy, but he's not a", "references": ["on time", "bold", "happy", "straightforward", "honored", "responsible"], "input": {"head": "PersonX meets PersonY's husband", "relation": "xAttr"}}
{"generation": "PersonX buys a parrot. Before, PersonX needs to buy a parrot", "references": ["to find petshop", "to buy parrot supplies", "have the money for one", "to find a pet store", "to want a parrot", "buy a cage", "buy parrot food", "to have money to buy it"], "input": {"head": "PersonX buys a parrot", "relation": "xNeed"}}
{"generation": "have physical exam. Before, PersonX needs to be able to perform a physical exam", "references": ["go see doctor", "make doctor's appointment", "schedule appointment with doctor", "have rendez vous", "kill yourself", "make appointment with doctor", "reserve doctors appointment", "have wash", "strip", "join army", "find name of doctor", "ask doctor", "set up appointment", "go to doctors", "wear clean underwear", "call doctor for appointment", "see doctor", "at doctor's office", "call doctor", "get prepared for exam"], "input": {"head": "have physical exam", "relation": "xNeed"}}
{"generation": "PersonX buys ___ for PersonX's wife. After, PersonX will want to buy ___ for PersonX's wife", "references": ["hug and kiss her", "to celebrate with them", "to see the person open their present", "give the gift to his wife", "get ready for the occasion he is going to give his wife the gift at", "wrap the gift or bring her to the gift"], "input": {"head": "PersonX buys ___ for PersonX's wife", "relation": "xWant"}}
{"generation": "PersonX likes to fish. Before, PersonX needs to be able to fish", "references": ["none", "to go to the water", "to get some worms", "get a fishing hook and line"], "input": {"head": "PersonX likes to fish", "relation": "xNeed"}}
{"generation": "PersonX goes down the pan. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX goes down the pan", "relation": "oReact"}}
{"generation": "a construction contains a number of features that are not present in the", "references": ["plumbing", "painting"], "input": {"head": "construction", "relation": "MadeUpOf"}}
{"generation": "PersonX thanks the ___ for PersonY's contributions. PersonX did this to help me understand the difference between the two", "references": ["to show gratitude", "to show appreciation.", "to show appreciation"], "input": {"head": "PersonX thanks the ___ for PersonY's contributions", "relation": "xIntent"}}
{"generation": "PersonX gets sunburned. The effect on PersonX will be similar to that of a sunburn", "references": ["starts to peel", "experiences pain", "feels pain", "gets treatment", "has rashes", "TO BE A NEED AS GET"], "input": {"head": "PersonX gets sunburned", "relation": "xEffect"}}
{"generation": "PersonX flees the scene. Before, PersonX needs to be able to talk to the other person, but", "references": ["none"], "input": {"head": "PersonX flees the scene", "relation": "xNeed"}}
{"generation": "PersonX sends text messages. After that, he sends a message to the other players", "references": ["PersonX gets no response"], "input": {"head": "PersonX sends text messages", "relation": "isBefore"}}
{"generation": "PersonX slides PersonY's tongue. PersonX will be able to see PersonY's tongue", "references": ["aroused", "helpful"], "input": {"head": "PersonX slides PersonY's tongue", "relation": "xReact"}}
{"generation": "PersonX makes pasta. Before that, he made pasta for the kids", "references": ["PersonX prepares for dinner"], "input": {"head": "PersonX makes pasta", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["It is night time out", "PersonY's ball went far into the ocean.", "The rain washed the ball miles away.", "It is raining out", "The ball is in the neighords yard", "The ball dropped into the water"], "input": {"head": "PersonX finds PersonY's ball", "relation": "HinderedBy"}}
{"generation": "PersonX grabs PersonX's gun. PersonX will be killed by PersonX", "references": ["secure", "glad to have acted on time.", "remorseful", "guilty", "safe", "traumatized", "safer"], "input": {"head": "PersonX grabs PersonX's gun", "relation": "xReact"}}
{"generation": "a spanish restaurant can be used for a meal", "references": ["ordering food to take out", "eating spanish food", "eating", "spanish food", "eating spanish foods", "meeting other people", "supply food", "getting heartburn", "traditional spanish food", "big cities", "obtaining nourishment", "eating spanish meals", "get to eat", "selling ethnic food", "social interactions", "taking women out", "enjoying spanish foods", "eat spanish food", "enjoying foreign cuisine", "serving food", "spending money", "hearing spanish music", "meeting people who speak spanish", "having meal", "spicy food", "tacos", "having fun", "listening to spanish music"], "input": {"head": "spanish restaurant", "relation": "ObjectUse"}}
{"generation": "PersonX arches PersonY back. PersonX will be able to see PersonY's face", "references": ["like they are doing their job"], "input": {"head": "PersonX arches PersonY back", "relation": "xReact"}}
{"generation": "PersonX comes into PersonY's eyes. The effect on PersonX will be similar to that of PersonY's", "references": ["to comes to eyes", "talked long time", "unlike", "sees clearly", "get to other problem", "to open eyes"], "input": {"head": "PersonX comes into PersonY's eyes", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is contractually obligated to stay at their current job.", "PersonX is too nervous.", "PersonX doesn't have the money to relocate for the opportunity.", "PersonX cannot get an interview.", "PersonX has no time for this.", "PersonX has no transportation.", "Their dad will not pay for it.", "Their brother took the opportunity."], "input": {"head": "PersonX takes advantage of this opportunity", "relation": "HinderedBy"}}
{"generation": "PersonX takes my first bite. Before that, I'm just a kid", "references": ["PersonX orders a burger"], "input": {"head": "PersonX takes my first bite", "relation": "isAfter"}}
{"generation": "PersonX turns PersonX's ___ elsewhere is filled by the same person", "references": ["eyes", "feet"], "input": {"head": "PersonX turns PersonX's ___ elsewhere", "relation": "isFilledBy"}}
{"generation": "PersonX catches PersonY's dog. After that, PersonY is able to get a new dog", "references": ["PersonX returns dog back to PersonY"], "input": {"head": "PersonX catches PersonY's dog", "relation": "isBefore"}}
{"generation": "PersonX always makes. PersonX will be the one who gets the most votes", "references": ["great"], "input": {"head": "PersonX always makes", "relation": "xReact"}}
{"generation": "PersonX turns PersonX's ___ to the wall. PersonX is now a member of the group", "references": ["shy", "withdrwan", "playful", "bashful", "secretive", "punishing"], "input": {"head": "PersonX turns PersonX's ___ to the wall", "relation": "xAttr"}}
{"generation": "PersonX serves ___ in prison. Before, PersonX needs to be in prison to be able to work", "references": ["to commit a crime", "commit a crime", "to turn themselves in", "plead guilty", "be convicted", "go to court"], "input": {"head": "PersonX serves ___ in prison", "relation": "xNeed"}}
{"generation": "PersonX follows the recipe exactly. The effect on PersonX will be the same as the effect on Person X", "references": ["invite friends", "salivates", "getting job", "improves understanding of cooking", "eating a lot", "blinks at loose flour", "gets kitchen dirty", "gets bad reults", "earning money", "sneezes at spices"], "input": {"head": "PersonX follows the recipe exactly", "relation": "xEffect"}}
{"generation": "PersonX pursues another ___ is filled by a new ___", "references": ["juice", "car", "career", "pig", "dish", "horse", "apartment", "deer", "dog", "bottle", "bicycle", "sheep", "book"], "input": {"head": "PersonX pursues another ___", "relation": "isFilledBy"}}
{"generation": "PersonX finds PersonX's car. After that, he goes to the car and finds the car's", "references": ["PersonX enters the car"], "input": {"head": "PersonX finds PersonX's car", "relation": "isBefore"}}
{"generation": "PersonX changes PersonX's lives. After, others will want to know who you are", "references": ["none"], "input": {"head": "PersonX changes PersonX's lives", "relation": "oWant"}}
{"generation": "a beautiful dress can be used for a wedding dress", "references": ["wear at the fashion show", "wear to work", "perform in", "hang in the display", "keep them warm like a blanket", "dress up a pet dog", "wear to prom", "hold over their head like an umbrella to keep them dry in the rain", "wear at funeral", "buy for prom"], "input": {"head": "beautiful dress", "relation": "ObjectUse"}}
{"generation": "a roll book can be used for this purpose", "references": ["wipe down a surface", "keep track of the students", "keep notes on participation", "start a fire", "keep different types of records", "soak up a liquid", "keep records of classes", "doodle cartoons", "burn as fuel", "notate the data", "keep attendance", "roll tobacco"], "input": {"head": "roll book", "relation": "ObjectUse"}}
{"generation": "PersonX calls PersonY at work. After, others will want to know who you are", "references": ["to make plans", "to make plans for later", "to chat", "to do something fun"], "input": {"head": "PersonX calls PersonY at work", "relation": "oWant"}}
{"generation": "a formal shirt can be used for a formal shirt", "references": ["place in a dogs bed so it does not itch", "wear on a date", "look nice at work", "to look snazzy", "wipe down a car", "wear in public", "protect inside shirt", "raise as a flag", "war to a work event", "stuff into a wall and use as insulation"], "input": {"head": "formal shirt", "relation": "ObjectUse"}}
{"generation": "PersonX understands fully the ___. Before, PersonX needs to know the ___", "references": ["research the discussion", "learn about the nature", "Learn of the play", "Read the paper", "to learn something", "to gather information", "none", "observe and form opinions"], "input": {"head": "PersonX understands fully the ___", "relation": "xNeed"}}
{"generation": "a ball field contains a number of different types of ball fields", "references": ["box", "outfield", "baseball diamond"], "input": {"head": "ball field", "relation": "MadeUpOf"}}
{"generation": "PersonX calls ___ immediately. Before, PersonX needs to call PersonX to get the information about the person", "references": ["dial the number", "to make a decision to call", "to pick up the phone", "find the phone"], "input": {"head": "PersonX calls ___ immediately", "relation": "xNeed"}}
{"generation": "PersonX takes PersonY on a hike. PersonX will be able to see the world through PersonY's eyes", "references": ["productive", "happy", "peaceful"], "input": {"head": "PersonX takes PersonY on a hike", "relation": "xReact"}}
{"generation": "PersonX catches flies. After, PersonX will want to get a new one", "references": ["buy fly traps", "to keep flies from coming in", "to have fun", "to enjoy", "to dispose of the flies", "dump outside"], "input": {"head": "PersonX catches flies", "relation": "xWant"}}
{"generation": "PersonX throws ___ in PersonY's face. As a result, others feel that they are being punished for their actions", "references": ["upset.", "angry", "upset", "scared"], "input": {"head": "PersonX throws ___ in PersonY's face", "relation": "oReact"}}
{"generation": "PersonX stops and get vegetables. After that, he goes to the kitchen and gets a cup of", "references": ["PersonX puts the vegetables in the car"], "input": {"head": "PersonX stops and get vegetables", "relation": "isBefore"}}
{"generation": "PersonX reads the note. The effect on PersonX will be the same as the effect on Person X", "references": ["Thinks about note", "Puts note away", "PersonX gets directions", "PersonX learns new information"], "input": {"head": "PersonX reads the note", "relation": "xEffect"}}
{"generation": "PersonX endures ___ and free. PersonX is a game that is a game of chance", "references": ["strong", "democratic", "made of steel", "resilient", "patient"], "input": {"head": "PersonX endures ___ and free", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's child has locked the bathroom door.", "The water main is broken", "The faucet is broken.", "The faucet is broken", "Their roommate is taking a shower.", "PersonX doesn't have the strength to turn the handle.", "The landlord has asked that renters keep the faucet dripping to avoid frozen pipes.", "The water pressure is too high.", "Their roommate is washing the dishes."], "input": {"head": "PersonX turns the water off", "relation": "HinderedBy"}}
{"generation": "PersonX has a big test tomorrow. After that, we'll be able to test the new features", "references": ["PersonX receives the highest grade"], "input": {"head": "PersonX has a big test tomorrow", "relation": "isBefore"}}
{"generation": "PersonX saves PersonX's ___ from PersonY's sins. As a result, others feel that PersonX is a bad person", "references": ["wronged", "happy and satisfied", "also happy satisfied"], "input": {"head": "PersonX saves PersonX's ___ from PersonY's sins", "relation": "oReact"}}
{"generation": "PersonX doesn't want to waste it. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX does n't want to waste it", "relation": "oWant"}}
{"generation": "PersonX tells PersonX's daughter. After that, she tells PersonX that she's going to be", "references": ["PersonX takes PersonX's daughter to visit"], "input": {"head": "PersonX tells PersonX's daughter", "relation": "isBefore"}}
{"generation": "PersonX has done something wrong. Before, PersonX needs to be able to do something about the fact that he", "references": ["none"], "input": {"head": "PersonX has done something wrong", "relation": "xNeed"}}
{"generation": "PersonX wants to learn how to play the piano. After that, he'll be able to play the piano in his", "references": ["PersonX signs up for lessons"], "input": {"head": "PersonX wants to learn how to play the piano", "relation": "isBefore"}}
{"generation": "You are likely to find a snack food in a restaurant that is not a snack food", "references": ["backpack"], "input": {"head": "snack food", "relation": "AtLocation"}}
{"generation": "PersonX takes a step. After that, he's going to have to figure out how to", "references": ["PersonX stumbles and falls on the floor"], "input": {"head": "PersonX takes a step", "relation": "isBefore"}}
{"generation": "PersonX babysits PersonY's cousin. PersonX did this to PersonY's cousin", "references": ["money", "to help persony", "to be helpful to their cousin", "helpful"], "input": {"head": "PersonX babysits PersonY's cousin", "relation": "xIntent"}}
{"generation": "PersonX plays PersonX's favorite songs. PersonX will be playing the song \"I'm a Man\" on", "references": ["happy", "lively", "energized"], "input": {"head": "PersonX plays PersonX's favorite songs", "relation": "xReact"}}
{"generation": "PersonX loves cake. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX loves cake", "relation": "oEffect"}}
{"generation": "PersonX bites PersonX's ___ to keep. As a result, others feel like they're being punished for their actions", "references": ["none"], "input": {"head": "PersonX bites PersonX's ___ to keep", "relation": "oReact"}}
{"generation": "PersonX likes a girl. PersonX did this to me", "references": ["to establish a relationship", "none"], "input": {"head": "PersonX likes a girl", "relation": "xIntent"}}
{"generation": "PersonX brings the ___ into disrepute. The effect on PersonX will be that PersonX will be able to use the ___", "references": ["receives praise for his work", "They are black balled", "They are censured", "gets tired", "Is challenged by others for their view", "receives complaint for his work", "Gets yelled at"], "input": {"head": "PersonX brings the ___ into disrepute", "relation": "xEffect"}}
{"generation": "PersonX bows the ___ to baal. As a result, others feel that the game is too easy", "references": ["none"], "input": {"head": "PersonX bows the ___ to baal", "relation": "oReact"}}
{"generation": "PersonX adores PersonY. As a result, others feel that PersonX is a better fit for PersonY", "references": ["happy", "none", "cherished", "loved"], "input": {"head": "PersonX adores PersonY", "relation": "oReact"}}
{"generation": "PersonX finds a dress. Before that, she finds a dress", "references": ["PersonX looks online for a dress"], "input": {"head": "PersonX finds a dress", "relation": "isAfter"}}
{"generation": "PersonX does very well in school. PersonX did this to me", "references": ["to get on the dean's honor roll", "to get a reward from their parents", "to be a success", "to get good grades", "to get a good job", "to get into a good college"], "input": {"head": "PersonX does very well in school", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["person x's neighbor keeps stealing their supplies", "PersonX is indecisive.", "the store owner hoarded his stock leaving none for person x", "Person X cannot change who they are.", "PersonX lacks initiative.", "PersonX is dissatisfied with themselves", "Person X doesn't know what Person X wants.", "PersonX is afraid of physical contact"], "input": {"head": "PersonX fits PersonX's needs", "relation": "HinderedBy"}}
{"generation": "PersonX tells PersonY's friend. PersonX will be able to see the person's face and will be", "references": ["accomplished", "stressless"], "input": {"head": "PersonX tells PersonY's friend", "relation": "xReact"}}
{"generation": "PersonX takes a stand. After, others will want to know what the hell is going on", "references": ["they see what he does", "they support him in his efforts"], "input": {"head": "PersonX takes a stand", "relation": "oWant"}}
{"generation": "PersonX helps ___ along. Before, PersonX needs to be able to talk to ___, and then Person", "references": ["reach out hand", "to see a turtle on the road", "to know how to speed them up", "to have things to do", "guide", "to encounter a person"], "input": {"head": "PersonX helps ___ along", "relation": "xNeed"}}
{"generation": "PersonX puts PersonY's ___ in execution. After, others will want to know what the hell is going on", "references": ["to aid him in it", "to support him", "to help him win", "to go secret against person X", "to retaliate person X", "none"], "input": {"head": "PersonX puts PersonY's ___ in execution", "relation": "oWant"}}
{"generation": "PersonX kisses ___ on the cheek is filled by a lot of people", "references": ["the cat", "her", "the dog", "cats", "dogs", "him"], "input": {"head": "PersonX kisses ___ on the cheek", "relation": "isFilledBy"}}
{"generation": "PersonX seeks first the ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["They celebrate finding what they seek", "They eventually find it", "talks to the masses", "tries to influence the masses", "none"], "input": {"head": "PersonX seeks first the ___", "relation": "xEffect"}}
{"generation": "PersonX enjoys swimming. The effect on PersonX will be similar to that of a swimmer", "references": ["he is doing excercise", "he want more fun", "he want to be fit", "get wet", "get tired", "he practicing swimming"], "input": {"head": "PersonX enjoys swimming", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's apartment doesn't allow dogs.", "PersonX likes dogs and cats.", "PersonX doesn't have a fenced yard for a dog.", "PersonX's property doesn't allow dogs", "PersonX already has 3 dogs.", "PersonX is allergic to dogs.", "PersonX is broke."], "input": {"head": "PersonX decides to get a dog", "relation": "HinderedBy"}}
{"generation": "PersonX watches for PersonY opportunity. After, others will want to see what you're doing", "references": ["to celebrate", "apply for the job", "to get the chance", "none", "send a complaint"], "input": {"head": "PersonX watches for PersonY opportunity", "relation": "oWant"}}
{"generation": "PersonX pulls the ___ open. PersonX will be able to see the ___ and the ___ will be", "references": ["safe", "happy and dutiful"], "input": {"head": "PersonX pulls the ___ open", "relation": "xReact"}}
{"generation": "PersonX gets a call from PersonX's boss. As a result, others feel that they are being treated unfairly", "references": ["pleased", "overwhelmed with work and the boss want him to work overtime.", "upset", "commanding", "none"], "input": {"head": "PersonX gets a call from PersonX's boss", "relation": "oReact"}}
{"generation": "PersonX wipes the ___ from PersonX's forehead. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX wipes the ___ from PersonX's forehead", "relation": "oReact"}}
{"generation": "PersonX prevents the ___ from breaking. PersonX is a subclass of PersonX", "references": ["Careful", "cautious", "careful", "Protective", "responsible"], "input": {"head": "PersonX prevents the ___ from breaking", "relation": "xAttr"}}
{"generation": "PersonX throws ___ in the way. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX throws ___ in the way", "relation": "oEffect"}}
{"generation": "PersonX would take care of it. PersonX is a very good person, and I'm sure he", "references": ["dutiful", "effective", "generous", "willing", "helpful", "reliable"], "input": {"head": "PersonX would take care of it", "relation": "xAttr"}}
{"generation": "PersonX sees PersonY thing. PersonX is a bit of a jerk, but he's a", "references": ["Attentive", "aware", "Nosey", "surprised", "lucky", "Watchful", "observant", "Perceptive"], "input": {"head": "PersonX sees PersonY thing", "relation": "xAttr"}}
{"generation": "PersonX puts out to pasture. After, others will want to see what they can do to help", "references": ["none"], "input": {"head": "PersonX puts out to pasture", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX knows that the time is now.", "PersonX is mellowed out by valium.", "PersonX's doctor has him taking mood stabilizing medication.", "PersonX is a naturally patient person.", "PersonX knows that getting impatient will not lead to anything good.", "PersonX's spouse reminds them to be patient because their child is young."], "input": {"head": "PersonX gets impatient", "relation": "HinderedBy"}}
{"generation": "PersonX holds on for dear life. PersonX did this to me", "references": ["to prevent death", "to protect themselves", "to keep from falling", "none"], "input": {"head": "PersonX holds on for dear life", "relation": "xIntent"}}
{"generation": "a scoreboard can be used for this purpose", "references": ["see the score", "count down as a timer", "send a message", "display the score", "throw things at", "keep score", "take pics of", "use as a table", "display as art"], "input": {"head": "scoreboard", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They hold grudges.", "The other person does not want to forget the wrong.", "PersonX found a video of his girlfriend having sex with his father", "PersonX is still upset their boyfriend was stolen.", "PersonY stepped on PersonX's foot and broke it", "The other person does not forgive PersonX.", "PersonX had his wallet stolen by Sam", "PersonX holds grudges easily.", "They're very angry."], "input": {"head": "PersonX lets bygones be bygones", "relation": "HinderedBy"}}
{"generation": "PersonX looks like a fool. Before that, he was a very good player", "references": ["PersonX gets extremely drunk at dinner"], "input": {"head": "PersonX looks like a fool", "relation": "isAfter"}}
{"generation": "PersonX drives straight. PersonX did this to me", "references": ["to stay uninjured", "to be safe"], "input": {"head": "PersonX drives straight", "relation": "xIntent"}}
{"generation": "PersonX feels very nervous. The effect on PersonX will be very noticeable", "references": ["shakes", "hides their feelings", "looks flustered", "sweats", "puts on a calm front", "delays starting the task"], "input": {"head": "PersonX feels very nervous", "relation": "xEffect"}}
{"generation": "PersonX stares back at PersonY. After, others will want to know what's going on", "references": ["to say something funny", "for them to stop", "to laugh", "to leave"], "input": {"head": "PersonX stares back at PersonY", "relation": "oWant"}}
{"generation": "PersonX puts the eggs. Before that, he's got a bunch of other people who are", "references": ["PersonX pulls a plate from the cupboard"], "input": {"head": "PersonX puts the eggs", "relation": "isAfter"}}
{"generation": "solar system is a very important part of the solar system", "references": ["planets"], "input": {"head": "solar system", "relation": "HasProperty"}}
{"generation": "PersonX employs another ___. After, PersonX will want to know if the user is a member of the group", "references": ["to demonstrate something", "help", "them to start working", "contact HR", "to teach", "give training"], "input": {"head": "PersonX employs another ___", "relation": "xWant"}}
{"generation": "PersonX would be fun. As a result, others feel that the game is too easy", "references": ["fond of x."], "input": {"head": "PersonX would be fun", "relation": "oReact"}}
{"generation": "PersonX casts ___ before swine is filled by the dragon", "references": ["silver", "gold", "diamonds", "pearls"], "input": {"head": "PersonX casts ___ before swine", "relation": "isFilledBy"}}
{"generation": "PersonX knows PersonY's name. The effect on PersonX will be the same as PersonY's effect on PersonX", "references": ["name is stored in memory", "think about someone with the same name", "none"], "input": {"head": "PersonX knows PersonY's name", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is babysitting PersonY.", "PersonY has thrown wild parties before when left alone.", "PersonY is a baby", "PersonY gets into trouble when they stay home alone.", "PersonY is senile", "PersonY isn't old enough to be left home alone.", "PersonX needs to use PersonY's car, so they have to tag along.", "PersonX and PersonY are going to the same place and there's only one car in the family to share.", "PersonY has been known to steal stuff."], "input": {"head": "PersonX leaves PersonY at home", "relation": "HinderedBy"}}
{"generation": "PersonX loses track of the time. PersonX did this to me, and I'm not sure if it was", "references": ["none"], "input": {"head": "PersonX loses track of the time", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is a woman.", "PersonX is a woman", "Their mother makes them shave.", "Their boss will fire them.", "Person X is 15.", "Person Xs work won't allow it.", "Person X has a medical condition.", "PersonX is too young.", "PersonX is a woman.", "PersonX is too young to grow facial hair", "PersonX is too old."], "input": {"head": "PersonX grows a beard", "relation": "HinderedBy"}}
{"generation": "PersonX works PersonY's way. PersonX did this to me, and I'm not sure if it's", "references": ["to be obedient", "approval"], "input": {"head": "PersonX works PersonY's way", "relation": "xIntent"}}
{"generation": "PersonX finds another. After, others will want to know what the hell is going on", "references": ["see where he was looking", "they find one themself", "none"], "input": {"head": "PersonX finds another", "relation": "oWant"}}
{"generation": "PersonX places ___ in the microwave is filled by the microwave", "references": ["spaghetti", "hotdog", "meat", "dinner", "chicken", "popcorn"], "input": {"head": "PersonX places ___ in the microwave", "relation": "isFilledBy"}}
{"generation": "PersonX feels ___ inside PersonY. PersonX will be able to see PersonY's face and will be", "references": ["more spiritual"], "input": {"head": "PersonX feels ___ inside PersonY", "relation": "xReact"}}
{"generation": "PersonX puts it in PersonY's purse. PersonX is the one who gets the money", "references": ["Caring", "Considerate", "helpful", "devious"], "input": {"head": "PersonX puts it in PersonY's purse", "relation": "xAttr"}}
{"generation": "PersonX loves to skateboard. The effect on PersonX will be similar to that of a skateboarder", "references": ["wins a tournament", "goes to skatepark", "breaks their wrist", "skateboards with friends", "buys a board", "practices", "learns new tricks"], "input": {"head": "PersonX loves to skateboard", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is babysitting", "The dance club is closed", "The party is over.", "PersonX's body is shutting down.", "PersonX is too sleepy.", "PersonX broke their leg."], "input": {"head": "PersonX dances the night away", "relation": "HinderedBy"}}
{"generation": "PersonX feels better soon. The effect on PersonX will be more pronounced in the future", "references": ["none"], "input": {"head": "PersonX feels better soon", "relation": "xEffect"}}
{"generation": "PersonX takes ___ out of the box is filled by the same thing that makes the game so great", "references": ["pens", "food", "papers", "apples", "snacks", "dishes", "bottles", "tools", "clothes", "money", "the food", "the laptop"], "input": {"head": "PersonX takes ___ out of the box", "relation": "isFilledBy"}}
{"generation": "You are likely to find a brownstone in a lot of places, but it's not a good", "references": ["subdivision", "new york city", "brooklyn", "new york", "ring"], "input": {"head": "brownstone", "relation": "AtLocation"}}
{"generation": "PersonX drives all the way. PersonX will be the only one who can drive the car", "references": ["warmth", "happy"], "input": {"head": "PersonX drives all the way", "relation": "xReact"}}
{"generation": "PersonX gains PersonY's confidence. The effect on PersonX will be determined by the following:\n\nPersonX's", "references": ["gets more things done.", "gets good name", "gets PersonY's trust and hope", "feels much more bold.", "gains favors from persony", "gets what they want frmo persony"], "input": {"head": "PersonX gains PersonY's confidence", "relation": "xEffect"}}
{"generation": "PersonX promptly fired. After that, he was fired from the company", "references": ["PersonX reloaded the gun"], "input": {"head": "PersonX promptly fired", "relation": "isBefore"}}
{"generation": "PersonX meets someone new. After that, they're going to have to figure out how to", "references": ["PersonX goes to dinner with PersonY"], "input": {"head": "PersonX meets someone new", "relation": "isBefore"}}
{"generation": "PersonX gets PersonY's ticket. Before that, you have to go to the next room and talk", "references": ["PersonX invites PersonY to a concert"], "input": {"head": "PersonX gets PersonY's ticket", "relation": "isAfter"}}
{"generation": "PersonX orders delivery food. After, others will want to take a look at the food", "references": ["none"], "input": {"head": "PersonX orders delivery food", "relation": "oWant"}}
{"generation": "PersonX studies as much. After, others will want to know what the hell you're talking about", "references": ["none"], "input": {"head": "PersonX studies as much", "relation": "oWant"}}
{"generation": "PersonX understands PersonY's nature. PersonX did this to her, and she's not going to let it", "references": ["none"], "input": {"head": "PersonX understands PersonY's nature", "relation": "xIntent"}}
{"generation": "PersonX replaces PersonY's old one. PersonX is the same as PersonY, but PersonY is", "references": ["heartless", "flippant", "generous", "active", "thoughtful", "shopoholic"], "input": {"head": "PersonX replaces PersonY's old one", "relation": "xAttr"}}
{"generation": "PersonX orders a cake. Before, PersonX needs to get a cake from a friend", "references": ["find a cake shop", "go to the bakery", "takes his mobile", "tells the type of cake", "choose a cake to order", "pay for a cake"], "input": {"head": "PersonX orders a cake", "relation": "xNeed"}}
{"generation": "PersonX tells ___ PersonY had a surprise. The effect on PersonX will be different for PersonY", "references": ["none", "shows the suprise", "explains the surprise"], "input": {"head": "PersonX tells ___ PersonY had a surprise", "relation": "xEffect"}}
{"generation": "PersonX gets frustrated. After, others will want to know why he's not doing this", "references": ["none"], "input": {"head": "PersonX gets frustrated", "relation": "oWant"}}
{"generation": "PersonX does a good deed. Before that, he was a very good guy", "references": ["PersonX buys some bread and peanut butter"], "input": {"head": "PersonX does a good deed", "relation": "isAfter"}}
{"generation": "PersonX goes to the post office. After, others will want to see her", "references": ["none"], "input": {"head": "PersonX goes to the post office", "relation": "oWant"}}
{"generation": "PersonX finds PersonX's dad. After that, he's gone", "references": ["PersonX goes home with PersonX's dad"], "input": {"head": "PersonX finds PersonX's dad", "relation": "isBefore"}}
{"generation": "PersonX makes friendship bracelets. Before that, she was a member of the group of people who", "references": ["PersonX goes to the store to get some supplies", "PersonX buys items for friendship bracelets", "PersonX starts a summer camp"], "input": {"head": "PersonX makes friendship bracelets", "relation": "isAfter"}}
{"generation": "PersonX gets everything. Before, PersonX needs to be able to do things like get a job,", "references": ["to pray every morning", "to work hard", "to have enough money", "to  make a list", "to start buying things", "none"], "input": {"head": "PersonX gets everything", "relation": "xNeed"}}
{"generation": "PersonX sets PersonY up. After, others will want to know who you are", "references": ["to thank PersonX", "get the reward", "Meet the new person", "enjoy it", "Ask for their number", "to meet PersonZ"], "input": {"head": "PersonX sets PersonY up", "relation": "oWant"}}
{"generation": "PersonX endures ___ and free. PersonX did this to me", "references": ["i likr this free", "none"], "input": {"head": "PersonX endures ___ and free", "relation": "xIntent"}}
{"generation": "PersonX starts cooking. PersonX is a very good cook", "references": ["skilled with their hands", "talented", "hot", "hungry", "adventurous", "industrious", "creative"], "input": {"head": "PersonX starts cooking", "relation": "xAttr"}}
{"generation": "PersonX brings ___ to the people. PersonX will be the one who will be the one who will be", "references": ["satisfied, proud to materially contributing to own community growth, well-being & progress.", "like achieve"], "input": {"head": "PersonX brings ___ to the people", "relation": "xReact"}}
{"generation": "PersonX offer ___ to god. PersonX did this to me", "references": ["trying to get students'", "to feel closer to god"], "input": {"head": "PersonX offer ___ to god", "relation": "xIntent"}}
{"generation": "PersonX teaches ___ to use. After, PersonX will want to use the same thing as you", "references": ["to share their knowledge", "to see others succeed", "to test someone", "to continue teaching"], "input": {"head": "PersonX teaches ___ to use", "relation": "xWant"}}
{"generation": "PersonX takes PersonY in PersonY's arms. As a result, others feel the same way", "references": ["helped", "cared about and comfortable."], "input": {"head": "PersonX takes PersonY in PersonY's arms", "relation": "oReact"}}
{"generation": "PersonX puts together a ___. Before, PersonX needs to know the name of the person who is the target", "references": ["picture", "love", "to take it", "to fix it"], "input": {"head": "PersonX puts together a ___", "relation": "xNeed"}}
{"generation": "with enough practice person can do it, but it's not enough to be", "references": ["set record"], "input": {"head": "with enough practice person", "relation": "CapableOf"}}
{"generation": "PersonX makes a salad. The effect on PersonX will be similar to that of a salad", "references": ["gets messy", "smiles", "PersonX is energized from the salad", "PersonX's hand gets dirty from salad dressing"], "input": {"head": "PersonX makes a salad", "relation": "xEffect"}}
{"generation": "PersonX works last night. After, PersonX will want to know if you're a member of the group", "references": ["to make some money", "to go to sleep"], "input": {"head": "PersonX works last night", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY isn't sitting down.", "PersonX can't find PersonY.", "PersonX is at the wrong location.", "PersonX has an assigned seat in class.", "PersonX can't place a call to PersonY.", "PersonY is at the wrong restaurant.", "PersonY keeps moving away from PersonX.", "PersonX has a fractured tailbone."], "input": {"head": "PersonX sits down across from PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX agrees on anything. After, PersonX will want to know what the other person thinks of you", "references": ["to support the cause", "Go home", "to join the group", "to enjoy life", "Agree some more", "avoid confrontation", "to get along", "to avoid arguments with anyone"], "input": {"head": "PersonX agrees on anything", "relation": "xWant"}}
{"generation": "PersonX affords every electronic. Before that, it was a simple, simple, simple, simple", "references": ["PersonX worked hard to raise money"], "input": {"head": "PersonX affords every electronic", "relation": "isAfter"}}
{"generation": "a baseball diamond can be used for a variety of purposes, including:\n\n\u2022", "references": ["become a coach", "write names in the dirt", "run around the bases", "create a team", "sit on in the dirt", "walk a dog", "play baseball", "play a game", "run laps"], "input": {"head": "baseball diamond", "relation": "ObjectUse"}}
{"generation": "PersonX gets frustrated. Before, PersonX needs to be able to talk to the other person", "references": ["none"], "input": {"head": "PersonX gets frustrated", "relation": "xNeed"}}
{"generation": "PersonX gets ___ first is filled by the fact that he's a guy who's been", "references": ["prizes", "test answers", "pizza", "food", "projects", "the toy", "the hose", "cash", "money", "chicken", "drink", "medals", "drinks"], "input": {"head": "PersonX gets ___ first", "relation": "isFilledBy"}}
{"generation": "PersonX keeps PersonY from starving. PersonX is a bit of a mess, but it's not", "references": ["generous", "compassionate", "helpful", "kind", "caring"], "input": {"head": "PersonX keeps PersonY from starving", "relation": "xAttr"}}
{"generation": "PersonX cranes PersonY's neck. After that, you can use the same technique to get the same", "references": ["PersonX receives thanks from PersonY"], "input": {"head": "PersonX cranes PersonY's neck", "relation": "isBefore"}}
{"generation": "thaw roast. Before, PersonX needs to be able to get a good roast", "references": ["remove from freezer"], "input": {"head": "thaw roast", "relation": "xNeed"}}
{"generation": "PersonX orders a cake. As a result, others feel that the cake is too expensive", "references": ["happy, hungry, thankful", "none"], "input": {"head": "PersonX orders a cake", "relation": "oReact"}}
{"generation": "PersonX pumps PersonX's gas. After, others will want to know what's going on", "references": ["to greet X with  kiss (Y).", "none", "to yell at X for being late (boss at work)."], "input": {"head": "PersonX pumps PersonX's gas", "relation": "oWant"}}
{"generation": "PersonX holds PersonY's attention. After, others will want to know what's going on", "references": ["to help him", "to respond verbally.", "walk away.", "to serve him", "none"], "input": {"head": "PersonX holds PersonY's attention", "relation": "oWant"}}
{"generation": "You are likely to find a cpu in a different location than you are", "references": ["computer", "motherboard"], "input": {"head": "cpu", "relation": "AtLocation"}}
{"generation": "PersonX leaves the class. The effect on others will be limited to those who are not members of the class", "references": ["none"], "input": {"head": "PersonX leaves the class", "relation": "oEffect"}}
{"generation": "PersonX is playing ball. After, PersonX will want to play ball", "references": ["to take some rest", "to eat", "to keep playing", "stop playing", "put the ball away", "to go home", "to rest"], "input": {"head": "PersonX is playing ball", "relation": "xWant"}}
{"generation": "PersonX gets PersonX's shorts in a knot. PersonX is a very good friend of PersonX's", "references": ["mean", "playful", "clumsy", "worrisome", "careless", "fussy", "fastidious"], "input": {"head": "PersonX gets PersonX's shorts in a knot", "relation": "xAttr"}}
{"generation": "PersonX finds another place. After that, he's back in the same place", "references": ["PersonX packs up his belongings"], "input": {"head": "PersonX finds another place", "relation": "isBefore"}}
{"generation": "PersonX enters PersonX's car. PersonX did this to her", "references": ["to drive home.", "to go somewhere", "to steal something from personx"], "input": {"head": "PersonX enters PersonX's car", "relation": "xIntent"}}
{"generation": "a colored frosting can be used for a variety of purposes", "references": ["cover cardboard cake display", "write scary messages on mirrors for Hallowe'en parties", "write on a birthday cake", "fill donuts", "paint your face in your team colors, yummy.", "decorate a cake", "decorate a treat", "use as a prop; like guts!", "frost cupcakes with", "put on my body for my lover to lick off", "see the design", "write words on a cake"], "input": {"head": "colored frosting", "relation": "ObjectUse"}}
{"generation": "PersonX catches my attention. PersonX is a very nice guy, and I'm sure he", "references": ["confused", "interested", "Attractive", "Mesmerizing", "special", "intriuging"], "input": {"head": "PersonX catches my attention", "relation": "xAttr"}}
{"generation": "PersonX enjoys PersonY's company. After, others will want to know what's going on", "references": ["to spend time with PersonX", "to share conversation with PersonX", "to stay with PersonX", "to go to an event with PersonX"], "input": {"head": "PersonX enjoys PersonY's company", "relation": "oWant"}}
{"generation": "PersonX becomes scared. After, others will want to kill her", "references": ["to comfort him", "none", "to help him"], "input": {"head": "PersonX becomes scared", "relation": "oWant"}}
{"generation": "PersonX meets PersonX's husband. After, PersonX will want to know who the other person is", "references": ["to thank their husband for helping", "to live with him from now on", "to ask him for help", "them to do all the tasks on the list", "to check to make sure all is ready", "to give their husband a kiss", "to get to know their husband", "to grow with their husband"], "input": {"head": "PersonX meets PersonX's husband", "relation": "xWant"}}
{"generation": "PersonX puts PersonX's phone away. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX puts PersonX's phone away", "relation": "oWant"}}
{"generation": "PersonX brings ___ to PersonY's house is filled by a group of people who are all about the same", "references": ["lasagna", "food", "a movie", "DVD", "lunch", "clothes", "gifts", "dinner", "Food", "cookies", "cake", "water"], "input": {"head": "PersonX brings ___ to PersonY's house", "relation": "isFilledBy"}}
{"generation": "PersonX gives PersonY a account. PersonX will be able to access the account through the Account Manager", "references": ["vindicated", "satisfied"], "input": {"head": "PersonX gives PersonY a account", "relation": "xReact"}}
{"generation": "PersonX cleans PersonY's bedroom. Before that, she cleans PersonX's bedroom", "references": ["PersonX starts a new cleaning business"], "input": {"head": "PersonX cleans PersonY's bedroom", "relation": "isAfter"}}
{"generation": "PersonX faces the ___ alone. PersonX is the only one who can stop the ___", "references": ["motivated", "strong", "brave", "a leader", "independent"], "input": {"head": "PersonX faces the ___ alone", "relation": "xAttr"}}
{"generation": "PersonX walks in the park. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX walks in the park", "relation": "oReact"}}
{"generation": "PersonX looks like someone. After, PersonX will want to know who you are", "references": ["to ignore it", "Looks in mirror", "reflects on it", "change there look", "to keep looking like them", "to impersonate someone"], "input": {"head": "PersonX looks like someone", "relation": "xWant"}}
{"generation": "PersonX always makes. PersonX is a very good player, but he's not a", "references": ["skillful", "consistent", "hard working", "Mobile", "Active", "dependable"], "input": {"head": "PersonX always makes", "relation": "xAttr"}}
{"generation": "PersonX catches PersonX's bus. After, others will want to know who is the person who is the person who", "references": ["none"], "input": {"head": "PersonX catches PersonX's bus", "relation": "oWant"}}
{"generation": "PersonX has to take care of PersonY. After, others will want to take care of PersonZ", "references": ["to be cared for", "to thank", "totake medicine", "to have someone else take care of them", "to be independent again", "to let PersonX go"], "input": {"head": "PersonX has to take care of PersonY", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know how to do makeup", "PersonX's parent forbid the wearing of makeup", "because person x has no makeup to wear", "because person x has a strict dress code at work", "PersonX does not own makeup.", "PersonX doesn't own makeup", "PersonX is too young.", "PersonX's religious leader forbids the wearing of makeup."], "input": {"head": "PersonX wears makeup", "relation": "HinderedBy"}}
{"generation": "PersonX takes PersonY up on the offer. As a result, others feel that PersonX is too much of a jerk to", "references": ["none", "companionable"], "input": {"head": "PersonX takes PersonY up on the offer", "relation": "oReact"}}
{"generation": "PersonX leaves the class. Before that, he is the only one who can see the class", "references": ["PersonX gets sick in class"], "input": {"head": "PersonX leaves the class", "relation": "isAfter"}}
{"generation": "PersonX becomes very ill. After that, he is able to get back to normal", "references": ["PersonX coughs and sneezes a lot"], "input": {"head": "PersonX becomes very ill", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's wife kicked him out.", "PersonX's boss fired him so he cannot afford the mortgage.", "PersonX has to wait until they get a new job.", "They were outbid on the house they wanted", "Can't afford to move.", "The movers never showed up.", "PersonX's girlfriend dumped him so he had to leave.", "PersonX can't get a loan.", "PersonX is busy at work."], "input": {"head": "PersonX moves to a new house", "relation": "HinderedBy"}}
{"generation": "PersonX gets PersonY's mother. PersonX is the only person who can see the other person's", "references": ["capable", "nice", "helpful", "kind", "caring"], "input": {"head": "PersonX gets PersonY's mother", "relation": "xAttr"}}
{"generation": "PersonX misses class. As a result, others feel that they are not allowed to participate in the class", "references": ["none"], "input": {"head": "PersonX misses class", "relation": "oReact"}}
{"generation": "PersonX hightails it. PersonX will be able to use the same abilities as the other characters", "references": ["like they've accomplished their goal", "eager to get away", "anxious"], "input": {"head": "PersonX hightails it", "relation": "xReact"}}
{"generation": "a golf club contains a large number of small, small, and large", "references": ["golf club head"], "input": {"head": "golf club", "relation": "MadeUpOf"}}
{"generation": "PersonX brings ___ to PersonY's eyes. PersonX will be able to see the person's face and will be", "references": ["sad", "happy and delightful", "relaxed"], "input": {"head": "PersonX brings ___ to PersonY's eyes", "relation": "xReact"}}
{"generation": "PersonX expresses PersonX's ___ in words. As a result, others feel that PersonX is a \"bad person\" and", "references": ["none"], "input": {"head": "PersonX expresses PersonX's ___ in words", "relation": "oReact"}}
{"generation": "PersonX obtains a ___ as possible. After, PersonX will want to know if PersonX has a ___", "references": ["to show off", "to take possession", "to sell it", "to hang the picture in the office", "to study it", "to paste the picture in the home", "to ask questions about it"], "input": {"head": "PersonX obtains a ___ as possible", "relation": "xWant"}}
{"generation": "PersonX gets the call. PersonX will be the one who calls the call", "references": ["great"], "input": {"head": "PersonX gets the call", "relation": "xReact"}}
{"generation": "PersonX waits for PersonY. After, PersonX will want to see PersonY", "references": ["to wonder about PersonY", "go out with PersonY", "to keep themselves busy", "to see Person Y", "meet PersonY", "to do something with Person Y"], "input": {"head": "PersonX waits for PersonY", "relation": "xWant"}}
{"generation": "PersonX attains PersonX's goals. The effect on PersonX will be applied to all other PersonX's", "references": ["Works towards his goals", "smiles", "needs a rest", "Learns new things that might help him"], "input": {"head": "PersonX attains PersonX's goals", "relation": "xEffect"}}
{"generation": "PersonX sees PersonY away. Before, PersonX needs to get PersonY to stop talking", "references": ["to make sure PersonY has everything they need", "to go with PersonY to the depot or airport", "to say goodbye", "none"], "input": {"head": "PersonX sees PersonY away", "relation": "xNeed"}}
{"generation": "PersonX waves PersonY. The effect on PersonX will be applied to PersonY", "references": ["gets waved at", "gets greeted", "Are ignored", "Are greeted", "hide his hand", "smile at PersonY"], "input": {"head": "PersonX waves PersonY", "relation": "xEffect"}}
{"generation": "PersonX sees PersonY alone. Before that, he's seen the two of them together", "references": ["PersonX walks into a cafeteria"], "input": {"head": "PersonX sees PersonY alone", "relation": "isAfter"}}
{"generation": "PersonX understands the ___ fully. Before, PersonX needs to know that the ___ is a part of the ___", "references": ["to study something well", "none", "to analyze something"], "input": {"head": "PersonX understands the ___ fully", "relation": "xNeed"}}
{"generation": "PersonX tries to relax. PersonX is a little bit nervous, but she's not really", "references": ["Active", "tired", "Hyper", "stressed"], "input": {"head": "PersonX tries to relax", "relation": "xAttr"}}
{"generation": "PersonX gives PersonY treatment. After that, PersonX is given a new name, PersonY", "references": ["PersonX sees their next patient"], "input": {"head": "PersonX gives PersonY treatment", "relation": "isBefore"}}
{"generation": "PersonX makes it through the day. PersonX will be able to get through the day without any problems", "references": ["calm", "relieved", "proud"], "input": {"head": "PersonX makes it through the day", "relation": "xReact"}}
{"generation": "an alloy contains a high-density polymer that is highly conductive", "references": ["at least one metal"], "input": {"head": "alloy", "relation": "MadeUpOf"}}
{"generation": "PersonX waits at the bus stop. Before, PersonX needs to get to the bus stop", "references": ["get dressed", "shoes", "to walk to the bus stop", "none", "to find out which bus stop to go there"], "input": {"head": "PersonX waits at the bus stop", "relation": "xNeed"}}
{"generation": "PersonX brings PersonY into conflict. The effect on others will be felt by the player", "references": ["got in an argument", "become an accessory to a crime", "had to defend stance", "lose their livelihood"], "input": {"head": "PersonX brings PersonY into conflict", "relation": "oEffect"}}
{"generation": "PersonX measures ___ directly. The effect on PersonX will be the same as the effect on PersonX", "references": ["personX has gained knowledge.", "personX can move on to their next step.", "Makes error", "Gets exhausted", "gets good grades", "rewarded"], "input": {"head": "PersonX measures ___ directly", "relation": "xEffect"}}
{"generation": "PersonX wins every ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX wins every ___", "relation": "oEffect"}}
{"generation": "PersonX sends money ___ is filled by the same person who sent you ___", "references": ["jar"], "input": {"head": "PersonX sends money ___", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX will get fired if they do.", "Someone put superglue on it as a prank before PersonX picked it up.", "PersonX's mom has tied it down.", "If PersonX drops it, then the boss will fire them.", "PersonX is being watched by others.", "PersonX is holding on to the item.", "PersonX is giving the item to another person safely.", "The hotel manager had it bolted to the table."], "input": {"head": "PersonX drops it on the floor", "relation": "HinderedBy"}}
{"generation": "PersonX helps PersonY stay awake. After, others will want to know what's going on", "references": ["eventually go to sleep", "to be generous", "to sleep", "thank them for their help", "to study for the test", "to pass the class"], "input": {"head": "PersonX helps PersonY stay awake", "relation": "oWant"}}
{"generation": "PersonX enters an art contest. Before that, he is asked to write a short story about a", "references": ["PersonX paints very well"], "input": {"head": "PersonX enters an art contest", "relation": "isAfter"}}
{"generation": "PersonX accidentally ran. After, PersonX will want to know if you're a member of the group", "references": ["to run away", "move quickly", "lift legs", "to go somewhere", "to get somewhere fast", "to get something done"], "input": {"head": "PersonX accidentally ran", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They are safety conscious", "PersonX is not smart.", "PersonX has been restrained by hospital staff.", "PersonX is weak.", "Nurses have administered sedatives to PersonX.", "They take good care of themselves"], "input": {"head": "PersonX breaks PersonX's hip", "relation": "HinderedBy"}}
{"generation": "PersonX wants to be an actor. The effect on PersonX will be to make him look like a character", "references": ["takes acting classes", "tries to learn acting", "gets interested in cinema", "none", "watches movies"], "input": {"head": "PersonX wants to be an actor", "relation": "xEffect"}}
{"generation": "PersonX passes ___ around is filled by a lot of people", "references": ["food", "the phone", "a ball", "snacks", "toys", "the drinks", "the food", "drink", "drinks"], "input": {"head": "PersonX passes ___ around", "relation": "isFilledBy"}}
{"generation": "PersonX offers ___ on this book when ordered. After, PersonX will want to know if you have any questions about the book", "references": ["to make money", "to offer more discounts", "sell", "to sell more books to others"], "input": {"head": "PersonX offers ___ on this book when ordered", "relation": "xWant"}}
{"generation": "PersonX abuses PersonX's power. PersonX did this to PersonX by using the power of the person he", "references": ["to get ahead by cheating", "to profit from his position"], "input": {"head": "PersonX abuses PersonX's power", "relation": "xIntent"}}
{"generation": "PersonX pulls PersonY's car over. After, PersonX will want to know who is driving the car", "references": ["energy", "to walk up to PersonY's car", "key", "to give PersonY a ticket", "to quesiton him", "to get his license and registration"], "input": {"head": "PersonX pulls PersonY's car over", "relation": "xWant"}}
{"generation": "PersonX bestows ___ upon PersonY. PersonX will be the one who is the most powerful person in the", "references": ["happy", "kind"], "input": {"head": "PersonX bestows ___ upon PersonY", "relation": "xReact"}}
{"generation": "PersonX sits on PersonY's bed. Before that, she's on the couch", "references": ["PersonX goes into PersonY's room"], "input": {"head": "PersonX sits on PersonY's bed", "relation": "isAfter"}}
{"generation": "PersonX gets the shot. PersonX is the only one who can't get the shot", "references": ["careful", "Hurt", "Scared", "not sickly", "healthy", "responsible"], "input": {"head": "PersonX gets the shot", "relation": "xAttr"}}
{"generation": "PersonX comes to PersonY house. Before that, she's in the middle of the night", "references": ["PersonX wanted to meet up with PersonY"], "input": {"head": "PersonX comes to PersonY house", "relation": "isAfter"}}
{"generation": "PersonX takes things for granted. PersonX will be able to do things that are not possible in the", "references": ["complacent", "happy", "ambivalent", "good about himself"], "input": {"head": "PersonX takes things for granted", "relation": "xReact"}}
{"generation": "PersonX chooses one's ___. After, others will want to know what the's ___", "references": ["none"], "input": {"head": "PersonX chooses one 's ___", "relation": "oWant"}}
{"generation": "PersonX loves PersonY's ___ well is filled by the fact that he's a very good person", "references": ["glasses", "jacket", "dishware", "dog", "bunny", "cat"], "input": {"head": "PersonX loves PersonY's ___ well", "relation": "isFilledBy"}}
{"generation": "PersonX plays PersonY's favorite song. After that, she plays the song \"I'm a Man\"", "references": ["PersonX begins to dance"], "input": {"head": "PersonX plays PersonY's favorite song", "relation": "isBefore"}}
{"generation": "PersonX gets PersonY hands on. PersonX is the one who gets PersonY hands on", "references": ["friendly", "passionate", "touchy"], "input": {"head": "PersonX gets PersonY hands on", "relation": "xAttr"}}
{"generation": "PersonX nurses it back to health. Before, PersonX needs to be able to use its powers to heal itself", "references": ["take care of it", "buy medicine to help it heal", "to see a doctor", "get nursing supplies"], "input": {"head": "PersonX nurses it back to health", "relation": "xNeed"}}
{"generation": "PersonX gets PersonX's juices flowing. After that, PersonX gets a little bit of a kick out", "references": ["PersonX shows PersonY more exercises"], "input": {"head": "PersonX gets PersonX's juices flowing", "relation": "isBefore"}}
{"generation": "PersonX loves the cake. After, others will want to eat it too", "references": ["none"], "input": {"head": "PersonX loves the cake", "relation": "oWant"}}
{"generation": "PersonX takes ___ of things. PersonX did this to me", "references": ["to be responsible", "none"], "input": {"head": "PersonX takes ___ of things", "relation": "xIntent"}}
{"generation": "PersonX wants a car. After, others will want to buy it", "references": ["none"], "input": {"head": "PersonX wants a car", "relation": "oWant"}}
{"generation": "PersonX makes ___ the other day is filled by a lot of people who are not even aware of", "references": ["pie", "bread", "eggs", "meatloaf", "cake", "pasta"], "input": {"head": "PersonX makes ___ the other day", "relation": "isFilledBy"}}
{"generation": "PersonX becomes very happy. PersonX is a very good person", "references": ["merry", "gleeful", "emotional", "excited", "elated", "joyful"], "input": {"head": "PersonX becomes very happy", "relation": "xAttr"}}
{"generation": "PersonX tells PersonY to give. Before that, she tells PersonX to give", "references": ["PersonX talks to PersonY about the spirit of christmas"], "input": {"head": "PersonX tells PersonY to give", "relation": "isAfter"}}
{"generation": "PersonX puts PersonX's phone. PersonX will be able to see the phone's location and the number", "references": ["good"], "input": {"head": "PersonX puts PersonX's phone", "relation": "xReact"}}
{"generation": "PersonX tries again next year. PersonX will be the first person to win the title of \"Best", "references": ["sad", "happy", "acomplished", "proud about his non stop efforts"], "input": {"head": "PersonX tries again next year", "relation": "xReact"}}
{"generation": "an encyclopedia can be used for this purpose", "references": ["research ancestry", "display so people think you're smart", "find out about people", "put down in a bibliography", "sit a child on to reach the table", "research movies", "look over for reference", "start a fire", "research for an essay", "read so you can pretend to be busy", "read about past events", "identify what is seen", "put in the library", "learn information"], "input": {"head": "encyclopedia", "relation": "ObjectUse"}}
{"generation": "PersonX draws ___ to the need. After, others will want to know what you're doing", "references": ["thank PersonX", "none", "accept the help"], "input": {"head": "PersonX draws ___ to the need", "relation": "oWant"}}
{"generation": "PersonX sees if could make. As a result, others feel that he is a good fit for the team", "references": ["none"], "input": {"head": "PersonX sees if could make", "relation": "oReact"}}
{"generation": "a washer can be used for cleaning the water", "references": ["wash clothing", "put it into the wash", "wash them before wearing", "wash the clothing", "use as a chair", "bleach shoes.", "tiedye outfits.", "clean clothes", "ensure clothes are clean before packing", "clean dirty items", "clean the clothes", "put the shirt in", "use as a large doorstop", "store items in the home", "lay on for massage", "put the clothing in", "put pots and pans in", "do laundry"], "input": {"head": "washer", "relation": "ObjectUse"}}
{"generation": "PersonX puts it in PersonX's purse. After that, he says, \"I'm going to go get", "references": ["PersonX leaves store", "PersonX throws the gift away when they see it again"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's father was a skydiver and taught him not to be afraid.", "PersonX doesn't have a fear in their brain.", "Everyone is going hill climbing and being afraid would have been the best excuse to not go", "PersonX has been a pilot for far too long", "PersonX is too short to ride rollercoasters.", "PersonX has mental issues.", "PersonX's dad exposed him to heights all his life.", "PersonX's mom told him he can never be afraid.", "PersonX is stuck in a wheelchair."], "input": {"head": "PersonX has a fear of heights", "relation": "HinderedBy"}}
{"generation": "PersonX rains on PersonX's parade. The effect on PersonX will be similar to that of a rain on a parade", "references": ["gets reprimanded", "none", "disappoints a person"], "input": {"head": "PersonX rains on PersonX's parade", "relation": "xEffect"}}
{"generation": "PersonX eats ___ in one is filled by a demon", "references": ["potatoes", "cherries", "pudding", "pizza", "sandwich", "food", "a kiwi", "spaghetti", "dessert", "fruit", "ice cream", "carrots", "egg", "chicken", "beef", "a pizza"], "input": {"head": "PersonX eats ___ in one", "relation": "isFilledBy"}}
{"generation": "PersonX lands the job. The effect on others will be minimal", "references": ["none", "has a needed employee", "pays their salary"], "input": {"head": "PersonX lands the job", "relation": "oEffect"}}
{"generation": "PersonX buys one for PersonY. After, PersonX will want to buy another one", "references": ["to wrap the present.", "give it to PersonY.", "to surprise them with it", "to deliver the gift", "to give it to Y", "to wrap the present"], "input": {"head": "PersonX buys one for PersonY", "relation": "xWant"}}
{"generation": "PersonX exerts PersonX's influence. PersonX will be able to influence PersonX's actions", "references": ["influential"], "input": {"head": "PersonX exerts PersonX's influence", "relation": "xReact"}}
{"generation": "PersonX dates for years. After, others will want to know what they are doing", "references": ["to go on another date", "none", "to call PersonX"], "input": {"head": "PersonX dates for years", "relation": "oWant"}}
{"generation": "PersonX retains PersonX's position. After, others will want to know who is the person who is the person who", "references": ["none", "to listen to PersonX", "to follow PersonX's orders"], "input": {"head": "PersonX retains PersonX's position", "relation": "oWant"}}
{"generation": "PersonX gets warm. After, PersonX will want to talk to you", "references": ["to take some cloths off to cool down", "to cool off", "to take a cold shower to cool off", "to turn on the A/C", "to fall asleep"], "input": {"head": "PersonX gets warm", "relation": "xWant"}}
{"generation": "PersonX sees PersonY away. After, others will want to see PersonY", "references": ["not to cry", "to thank PersonX for being considerate", "to call PersonX later and tell them that they made it to their destination", "to enjoy these last moments"], "input": {"head": "PersonX sees PersonY away", "relation": "oWant"}}
{"generation": "PersonX gets shot. The effect on PersonX will be similar to that of a bullet", "references": ["Gets rushed to hospital", "they die", "bleeds a lot", "Needs a blood transfusion"], "input": {"head": "PersonX gets shot", "relation": "xEffect"}}
{"generation": "PersonX drags through the mud. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX drags through the mud", "relation": "oEffect"}}
{"generation": "PersonX finds a ring. PersonX is a member of the group", "references": ["watchful", "lucky", "hopeful", "persistent", "helpful", "determined"], "input": {"head": "PersonX finds a ring", "relation": "xAttr"}}
{"generation": "PersonX catches the bus. PersonX is a little confused", "references": ["rushed", "prompt", "excited", "In need", "serious", "responsible", "Punctual"], "input": {"head": "PersonX catches the bus", "relation": "xAttr"}}
{"generation": "PersonX swims in the lake. After that, he goes to the beach", "references": ["PersonX drys off with a towel"], "input": {"head": "PersonX swims in the lake", "relation": "isBefore"}}
{"generation": "PersonX calls PersonY's son. After, PersonX will want to know who the son is", "references": ["to talk", "to take Y's son to principal", "to tell son to get out of their house", "to tell son to mow the yard", "to tell son that PersonY is dead", "to tell son that PersonY got into an accident", "to teach", "to make plans"], "input": {"head": "PersonX calls PersonY's son", "relation": "xWant"}}
{"generation": "PersonX scrambles eggs for breakfast. The effect on PersonX will be similar to that of a normal egg", "references": ["Cleans the dishes", "is full", "has a good meal", "dirties a pan"], "input": {"head": "PersonX scrambles eggs for breakfast", "relation": "xEffect"}}
{"generation": "PersonX tells ___ about PersonX's day. As a result, others feel that PersonX is a bad person", "references": ["interested.", "none", "informed"], "input": {"head": "PersonX tells ___ about PersonX's day", "relation": "oReact"}}
{"generation": "You are likely to find a place setting in a different location than the one you are looking for", "references": ["table"], "input": {"head": "place setting", "relation": "AtLocation"}}
{"generation": "PersonX sits together. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX sits together", "relation": "oWant"}}
{"generation": "PersonX buys ___ for my wife. After, PersonX will want to buy ___ for my wife", "references": ["to wrap up the item as a gift.", "to surprise his wife with the item.", "to give the gift to the wife", "to get a thank you"], "input": {"head": "PersonX buys ___ for my wife", "relation": "xWant"}}
{"generation": "PersonX gives PersonX's opinion. After, PersonX will want to know what the other person thinks of PersonX", "references": ["to feel better", "to part ways", "to finish with the meeting", "to continue giving advice"], "input": {"head": "PersonX gives PersonX's opinion", "relation": "xWant"}}
{"generation": "PersonX works really hard. PersonX will be able to do a lot of things, but he", "references": ["happy", "accomplished", "proud", "confident"], "input": {"head": "PersonX works really hard", "relation": "xReact"}}
{"generation": "PersonX walks in the park. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX walks in the park", "relation": "oEffect"}}
{"generation": "PersonX finds cockroaches at home. After that, he goes to the bathroom and finds a cockroach", "references": ["PersonX puts down roach motels under the cupboards"], "input": {"head": "PersonX finds cockroaches at home", "relation": "isBefore"}}
{"generation": "an opponent can be used for a number of reasons", "references": ["be a political rival", "play cards against", "beat in chess", "compete against", "play against", "to talk with", "teach PersonX", "play football against", "find common ground"], "input": {"head": "opponent", "relation": "ObjectUse"}}
{"generation": "PersonX gives it PersonX's name. PersonX did this to make it easier to find the person you want to", "references": ["to continue his names importance"], "input": {"head": "PersonX gives it PersonX's name", "relation": "xIntent"}}
{"generation": "PersonX makes ___ every morning. The effect on PersonX will be similar to the effect on Person X", "references": ["Gets fat", "gets nourished", "aC", "Wastes resources", "is organized", "B"], "input": {"head": "PersonX makes ___ every morning", "relation": "xEffect"}}
{"generation": "PersonX suits PersonY. The effect on others will be similar to that of PersonX", "references": ["got their match", "none", "are attracted to PersonX"], "input": {"head": "PersonX suits PersonY", "relation": "oEffect"}}
{"generation": "PersonX wants ___ very badly. After, others will want to kill him", "references": ["none"], "input": {"head": "PersonX wants ___ very badly", "relation": "oWant"}}
{"generation": "PersonX spends the ___ at PersonY's house. PersonX did this to PersonY's house", "references": ["to take a break from his own house", "to spend more time with persony", "to be close to persony", "to visit with person y"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "xIntent"}}
{"generation": "PersonX puts the phone. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX puts the phone", "relation": "oEffect"}}
{"generation": "PersonX sees ___ away. As a result, others feel that they are being treated unfairly", "references": ["shunned", "saddened", "none"], "input": {"head": "PersonX sees ___ away", "relation": "oReact"}}
{"generation": "PersonX disposes of PersonX's property. PersonX will be notified of the change", "references": ["happy", "happy it's gone.", "relief"], "input": {"head": "PersonX disposes of PersonX's property", "relation": "xReact"}}
{"generation": "PersonX sits on PersonY's lap. The effect on others will be different", "references": ["gets more burdened", "lose circulation in legs.", "feel the weight of PersonX", "none", "sink into couch more."], "input": {"head": "PersonX sits on PersonY's lap", "relation": "oEffect"}}
{"generation": "PersonX cann't believe PersonX's luck. After, PersonX will want to know who the other person is", "references": ["to collect their raffle prize", "to cash in their lottery ticket", "pick up the money on the ground"], "input": {"head": "PersonX can n't believe PersonX's luck", "relation": "xWant"}}
{"generation": "PersonX finds PersonY's ring. PersonX did this to her, and she's been trying to find it", "references": ["to be helpful", "to be a friend", "none", "to help them"], "input": {"head": "PersonX finds PersonY's ring", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Someone else in the house has taken all the kleenex from PersonX", "PersonX's hands are tied behind their back.", "PersonX has nothing to dry them with.", "PersonX was chopping jalepeno peppers and got the juice on their hands.", "PersonX's girlfriend already did it for him.", "PersonX can't stop crying.", "PersonX has no tissues.", "PersonX got his tissues stolen by a stranger.", "PersonY keeps putting pepper up PersonX's nose, making him sneeze.", "PersonX is so hysterical that they cannot stop crying."], "input": {"head": "PersonX dries PersonX's eyes", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX was just born.", "Person X is already older.", "Person X can't turn back time.", "PersonX is a senior."], "input": {"head": "PersonX is 5 years old", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not have enough money", "PersonY does not want the item.", "PersonX doesn't have enough money.", "PersonX doesn't have any money", "PersonX doesn't trust the item's warranty.", "The product has been sold out", "The item has sold out.", "PersonX doesn't know what they like"], "input": {"head": "PersonX buys one for PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX rests PersonX's ___ on PersonY's shoulder. PersonX will be able to move PersonY's shoulder", "references": ["less alone in the world", "happy to be helped by someone", "grateful to have someone to rely on"], "input": {"head": "PersonX rests PersonX's ___ on PersonY's shoulder", "relation": "xReact"}}
{"generation": "PersonX looks awful. After, PersonX will want to know what you're doing", "references": ["comb hair", "change clothes", "to feel better", "for others to not see them", "to rest"], "input": {"head": "PersonX looks awful", "relation": "xWant"}}
{"generation": "PersonX finds PersonY at home. After that, she's back at the office", "references": ["PersonX asks where PersonY was all day"], "input": {"head": "PersonX finds PersonY at home", "relation": "isBefore"}}
{"generation": "PersonX gets it to work. PersonX will be able to see the current state of the game and", "references": ["happy", "satisfied", "accomlished"], "input": {"head": "PersonX gets it to work", "relation": "xReact"}}
{"generation": "PersonX relaxes and watch ___ is filled by the same people who are the most important to him", "references": ["birds", "cars", "the news", "dogs", "television"], "input": {"head": "PersonX relaxes and watch ___", "relation": "isFilledBy"}}
{"generation": "PersonX walks to PersonY's car. PersonX will be able to see PersonY's car and PersonY", "references": ["happy that he or she is on the way to the destination", "happy he was able to get a ride.", "sheltered and safe.", "reassured that the person is safe", "satisfied that person made it home safely."], "input": {"head": "PersonX walks to PersonY's car", "relation": "xReact"}}
{"generation": "PersonX tests PersonY's ability. As a result, others feel that PersonY is more capable than PersonX", "references": ["tested", "stressed"], "input": {"head": "PersonX tests PersonY's ability", "relation": "oReact"}}
{"generation": "PersonX finds PersonY explanation. After, others will want to know why PersonX is so upset", "references": ["tells them if that was a good explanation", "to part ways", "talks to person x", "to keep explaining to PersonX", "none"], "input": {"head": "PersonX finds PersonY explanation", "relation": "oWant"}}
{"generation": "PersonX reluctantly accepted. Before, PersonX needs to be able to talk to the other members of the", "references": ["to think about something", "to converse with someone", "none"], "input": {"head": "PersonX reluctantly accepted", "relation": "xNeed"}}
{"generation": "a garbage disposal can be used for the disposal of garbage", "references": ["grind lemons to make the room smell nice", "get rid of the body parts with", "fix when it breaks down because the kids put the wrong stuff in it", "chop off someone's hand", "pretend to be a monster growl", "flush the cake away", "keep the drain clear", "keep pipes from clogging", "dispose of leftovers", "toss it down the drain", "grind up bones", "cover the sound of a burp", "suffocate an enemy when their tie gets caught"], "input": {"head": "garbage disposal", "relation": "ObjectUse"}}
{"generation": "PersonX borrows PersonY's car. Before, PersonX needs to get a car from PersonY", "references": ["to go to PersonY", "to go somewheree", "relationship with PersonY", "none", "to ask to borrow PersonY's car"], "input": {"head": "PersonX borrows PersonY's car", "relation": "xNeed"}}
{"generation": "PersonX buys a new motorcycle. After that, he buys a new car", "references": ["PersonX rides the back roads with the wind in their hair"], "input": {"head": "PersonX buys a new motorcycle", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is dumb.", "The teacher thinks PersonX needs a tutor.", "PersonX is failing a class.", "PersonX got sick for a long time.", "Their mom held them back too much.", "PersonX skipped too many school days.", "PersonX didn't study hard enough.", "Other people voted for the top person.", "Someone else got the spot."], "input": {"head": "PersonX graduates top of PersonX's class", "relation": "HinderedBy"}}
{"generation": "a chess pawn can be used for a number of reasons", "references": ["game of chess", "chess games", "playing chess", "offensive strategy", "sacrificing", "moving around", "defensive strategy", "defensive strategy in chess", "game playing", "helping to win game", "limiting opponent", "play chess", "blocking", "play world's greatest game", "capture opponent's piece", "attack via pawn storm", "attacking other pawns", "cat toy"], "input": {"head": "chess pawn", "relation": "ObjectUse"}}
{"generation": "PersonX holds PersonY in place. PersonX did this to PersonY, and PersonY did this to Person", "references": ["make sure his baby child didn't fall off", "to contain him"], "input": {"head": "PersonX holds PersonY in place", "relation": "xIntent"}}
{"generation": "PersonX decides to order a pizza. Before, PersonX needs to order a pizza", "references": ["go to hotel", "none", "need money"], "input": {"head": "PersonX decides to order a pizza", "relation": "xNeed"}}
{"generation": "PersonX gets more exercise. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX gets more exercise", "relation": "oWant"}}
{"generation": "PersonX plans PersonX's trip. Before that, he's been working on a new project", "references": ["PersonX prepares for a vacation"], "input": {"head": "PersonX plans PersonX's trip", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know their real name.", "PersonY isn't a person."], "input": {"head": "PersonX derives PersonY's name", "relation": "HinderedBy"}}
{"generation": "PersonX gets a call ___. After, others will want to know what the hell is going on", "references": ["to have a conversation", "to hang up", "to speak", "to leave a message"], "input": {"head": "PersonX gets a call ___", "relation": "oWant"}}
{"generation": "PersonX retains PersonX's position. Before, PersonX needs to be able to use the same functions as PersonX", "references": ["go through a company wide lay off", "have a fight with boss", "to gain an advantage", "to gain power", "none"], "input": {"head": "PersonX retains PersonX's position", "relation": "xNeed"}}
{"generation": "PersonX gives PersonY instruction. Before that, PersonX tells PersonY to go to the bathroom", "references": ["PersonX teaches a class"], "input": {"head": "PersonX gives PersonY instruction", "relation": "isAfter"}}
{"generation": "a cake knife can be used for cutting the cake", "references": ["stab an intruder in your house", "cut watermelon", "apply paint to wall", "stab someone", "Cut the cake", "serve cake with", "scrape off icing", "cut up cardboard to recycle", "stir batter", "cut the cake up with", "remove slice from full cake"], "input": {"head": "cake knife", "relation": "ObjectUse"}}
{"generation": "PersonX makes ___ more often. PersonX will be more likely to be able to use the same abilities", "references": ["productive", "happy"], "input": {"head": "PersonX makes ___ more often", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["No one will throw them the ball.", "PersonX can't throw very far.", "PersonX is in a wheelchair.", "PersonX misses the basket every time.", "PersonX isn't on the basketball court.", "PersonX does not have a basketball.", "PersonX isn't very good at aiming the basketball.", "The other team keeps getting the ball.", "PersonX can't see the hoop."], "input": {"head": "PersonX shoots a three pointer", "relation": "HinderedBy"}}
{"generation": "PersonX eats a hamburger. PersonX will be able to see the menu and the menu items", "references": ["full", "like they are full.", "satisfied"], "input": {"head": "PersonX eats a hamburger", "relation": "xReact"}}
{"generation": "PersonX skates around. PersonX did this to me", "references": ["to waste time", "to have fun", "to enjoy their time", "to exlore"], "input": {"head": "PersonX skates around", "relation": "xIntent"}}
{"generation": "PersonX smiles broadly. The effect on PersonX will be felt by the user, and the user will be", "references": ["laughs", "they get's smiled back at", "they laugh", "People smile back"], "input": {"head": "PersonX smiles broadly", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have the keys", "PersonX locked the keys in the car.", "The car won't start.", "Their mother is blocking them in.", "The keys are lost.", "PersonX was blocked in by two other cars.", "There is too much snow around.", "It has a flat tire", "Their brother lost their keys."], "input": {"head": "PersonX moves PersonX's car", "relation": "HinderedBy"}}
{"generation": "PersonX practices hard every day. After, others will want to know what you're doing", "references": ["none"], "input": {"head": "PersonX practices hard every day", "relation": "oWant"}}
{"generation": "PersonX develops along lines. The effect on others will be different", "references": ["none", "their life is better", "they like being around him"], "input": {"head": "PersonX develops along lines", "relation": "oEffect"}}
{"generation": "PersonX lands safely. As a result, others feel the same way", "references": ["none", "calm"], "input": {"head": "PersonX lands safely", "relation": "oReact"}}
{"generation": "fireplace is a very good place to start", "references": ["chimney"], "input": {"head": "fireplace", "relation": "HasProperty"}}
{"generation": "PersonX helps ___ along. After, PersonX will want to know what you're doing", "references": ["improve lives", "ask for guidance", "to finish the task", "to pick up the turtle and place it on the other side of the road", "to help more", "to escort the lady across the road"], "input": {"head": "PersonX helps ___ along", "relation": "xWant"}}
{"generation": "PersonX looks like new. Before that, he was a very good player", "references": ["PersonX gets a face lift", "PersonX goes to the makeover salon"], "input": {"head": "PersonX looks like new", "relation": "isAfter"}}
{"generation": "PersonX brings ___ to PersonY's eyes. After, PersonX will want to know what's going on", "references": ["to apologize to PersonY", "to hug PersonY", "to smile at PersonY", "to hold PersonY", "to give PersonY tissue"], "input": {"head": "PersonX brings ___ to PersonY's eyes", "relation": "xWant"}}
{"generation": "PersonX offers ___ on this book when ordered is filled by the customer", "references": ["signatures", "autographs"], "input": {"head": "PersonX offers ___ on this book when ordered", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The snakes are hibernating", "PersonX lives in high sea.", "PersonX can't see.", "PersonX doesn't have a snake.", "PersonX lives in Canada.", "their mother won't let person x out of the car to look at the snake", "They missed the trip to the zoo", "person z says the snake is too poisonous to be around"], "input": {"head": "PersonX sees a snake", "relation": "HinderedBy"}}
{"generation": "a long rope can be used for this purpose", "references": ["hang yourself", "save someone stuck in a tunnel", "climb a mountain", "play tag of war", "play tug of war", "make lots of knots", "secure the rock", "create holder", "play a game of tug of war", "tow a boat in", "pull a car"], "input": {"head": "long rope", "relation": "ObjectUse"}}
{"generation": "PersonX studies as much. After that, he's been working on his own projects", "references": ["PersonX finishes with an overall grade of a"], "input": {"head": "PersonX studies as much", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The chef washed PersonX's food throughly.", "PersonX wants to get sympathy.", "PersonX ate at the restaurant that was very sanitary.", "PersonX's mom prepared meals diligently.", "PersonX can't find contaminated food.", "PersonX wants to be sick so they can miss work.", "PersonX has a strong stomach.", "PersonX would feel foolish getting sick with friends just to show solidarity."], "input": {"head": "PersonX has food poisoning", "relation": "HinderedBy"}}
{"generation": "PersonX takes ___ at the end. As a result, others feel that they are being punished for their actions", "references": ["finished", "none"], "input": {"head": "PersonX takes ___ at the end", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX was told to work late this evening.", "The weather has been foggy for two days.", "PersonX is in a thick forest.", "An attacker blinded PersonX.", "PersonX is blind.", "It's night outside.", "PersonY closed the blinds.", "PersonX was blinded in an accident.", "PersonX's doctor was unable to restore PersonX's sight.", "they are stuck inside", "they are blind and can't see"], "input": {"head": "PersonX watches the sunset", "relation": "HinderedBy"}}
{"generation": "PersonX becomes scared. PersonX did this to her", "references": ["none"], "input": {"head": "PersonX becomes scared", "relation": "xIntent"}}
{"generation": "PersonX always beat. The effect on others will be different", "references": ["none", "gets defeated", "cries"], "input": {"head": "PersonX always beat", "relation": "oEffect"}}
{"generation": "PersonX pushes PersonX's luck. The effect on PersonX will be the same as the effect on PersonX", "references": ["wins it all", "loses it all"], "input": {"head": "PersonX pushes PersonX's luck", "relation": "xEffect"}}
{"generation": "PersonX exerts PersonX's influence. PersonX did this to me, and I'm not going to let it", "references": ["to dominate others"], "input": {"head": "PersonX exerts PersonX's influence", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person Y is no where to be found.", "Nothing has happened that needs to happen.", "PersonX has not finished painting the sign.", "Y is blindfolded.", "X's hands are tied behind his back.", "Person Y moved away.", "Person X lost the sign.", "Person X kept the sign."], "input": {"head": "PersonX gives PersonY a sign", "relation": "HinderedBy"}}
{"generation": "PersonX gives PersonY light. Before, PersonX needs to be able to use the light to move", "references": ["to find out what the light is for", "know where PersonY is", "have something for the light", "hand the light to PersonY", "to go to the store", "has the light available"], "input": {"head": "PersonX gives PersonY light", "relation": "xNeed"}}
{"generation": "PersonX realizes PersonY was lost. As a result, others feel that PersonX is a bad person", "references": ["thankful", "noticed", "thankful.", "grateful"], "input": {"head": "PersonX realizes PersonY was lost", "relation": "oReact"}}
{"generation": "PersonX has never been happier. Before, PersonX needs to be a part of the team", "references": ["to decide to make a change", "none", "to achieve a goal"], "input": {"head": "PersonX has never been happier", "relation": "xNeed"}}
{"generation": "While feeling pain, you would feel a little bit of pain", "references": ["cry"], "input": {"head": "feel pain", "relation": "HasSubEvent"}}
{"generation": "a gas station can be used for a gas station", "references": ["buying gas", "stock the beverages", "work for your money", "meet with their co-workers", "fill up the tank of a car with gas", "to fuel a car", "gas up your car", "have a photoshoot", "buy snacks", "use the bathroom", "buy the gas", "get gas for the car"], "input": {"head": "gas station", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX can't find the hat.", "The person who owns the hat tells PersonX the hat is full", "PersonX is PersonX.", "PersonX can't write.", "PersonX does not have a hat.", "PersonX doesn't have a hat or pencil.", "Personx doesn't know what the drawing is for.", "The hat owner placed the hat out of the reach of PersonX", "PersonX is too embarrassed to add their name.", "PersonX thinks it's not the right decision."], "input": {"head": "PersonX puts PersonX's name in the hat", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is going on a vacation they already paid for", "They still love their husband.", "They want to try to make it work.", "PersonX's spouse keeps showing up everywhere", "They feel guilty about it.", "PersonX is afraid of the secrets that will come out", "PersonX's spouse won't let her go", "They are too scared of what could happen"], "input": {"head": "PersonX ends things", "relation": "HinderedBy"}}
{"generation": "PersonX is hot and humid. PersonX is also hot and humid", "references": ["dissatisfied", "Humid", "Intense", "irritable", "Hot", "Exercising"], "input": {"head": "PersonX is hot and humid", "relation": "xAttr"}}
{"generation": "PersonX has a wonderful time on PersonX's trip. PersonX is a very nice guy, and I'm sure he", "references": ["relaxed", "happy", "blessed", "content", "grateful", "satisfied"], "input": {"head": "PersonX has a wonderful time on PersonX's trip", "relation": "xAttr"}}
{"generation": "PersonX gets there early. Before that, he's got to get his hands on a few", "references": ["PersonX drives to a doctor's appointment"], "input": {"head": "PersonX gets there early", "relation": "isAfter"}}
{"generation": "PersonX gets PersonX's hands on ___. The effect on others will be the same as the effect on PersonX", "references": ["none"], "input": {"head": "PersonX gets PersonX's hands on ___", "relation": "oEffect"}}
{"generation": "PersonX asks PersonY to sit. As a result, others feel uncomfortable", "references": ["focused"], "input": {"head": "PersonX asks PersonY to sit", "relation": "oReact"}}
{"generation": "PersonX sings PersonX's heart. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX sings PersonX's heart", "relation": "oReact"}}
{"generation": "PersonX has a baby girl. PersonX will be the one who gets the baby girl", "references": ["nurturing", "blessed", "loving", "caring", "exhausted"], "input": {"head": "PersonX has a baby girl", "relation": "xReact"}}
{"generation": "PersonX stops at the store. After that, he asks if he can buy a new one", "references": ["PersonX goes into the store"], "input": {"head": "PersonX stops at the store", "relation": "isBefore"}}
{"generation": "PersonX stops calling PersonY. Before, PersonX needs to call PersonY", "references": ["none"], "input": {"head": "PersonX stops calling PersonY", "relation": "xNeed"}}
{"generation": "PersonX likes cheese. Before, PersonX needs to be able to eat cheese", "references": ["none"], "input": {"head": "PersonX likes cheese", "relation": "xNeed"}}
{"generation": "PersonX tries to keep it a secret. Before, PersonX needs to know that the person who is the most important person", "references": ["to muster willpower", "to avoid talking about it", "to make a mistake", "to shut his mouth", "to learn about it", "to cover up mistake"], "input": {"head": "PersonX tries to keep it a secret", "relation": "xNeed"}}
{"generation": "PersonX breaks PersonY's heart. As a result, others feel that PersonX is a bad person", "references": ["lost", "depressed", "sad", "greived", "hurt", "heartbroken", "rejected", "confused"], "input": {"head": "PersonX breaks PersonY's heart", "relation": "oReact"}}
{"generation": "PersonX studies extra hard. Before, PersonX needs to be able to read and write", "references": ["to drink energy drinks", "to get books", "to get stufy materials", "get rid of distractions", "get a good nights sleep", "to eat a good dinner"], "input": {"head": "PersonX studies extra hard", "relation": "xNeed"}}
{"generation": "a controllers can be used for the following purposes:\n\nThe controller can be", "references": ["move a video game character", "pause the game", "scroll through options", "manipulate the characters", "reset the console", "hammer in nails", "work the game", "play games", "trick someone to think you have video games", "use as a paper weight", "play a video game", "study electronics", "move characters", "control", "interact with the screen"], "input": {"head": "controllers", "relation": "ObjectUse"}}
{"generation": "PersonX waits for PersonY. As a result, others feel the same way", "references": ["none", "affection"], "input": {"head": "PersonX waits for PersonY", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not know the address", "Persony isn't speaking to personx", "Street workers have blocked off PersonX's view", "PersonX has laryngitis.", "PersonX can't find their phone.", "PersonX doesn't know persony phone number.", "Persony never showed up for them to tell", "PersonX has a dead cellphone", "PersonX has a dead phone.", "PersonX's brother accidentally locked them out of the house"], "input": {"head": "PersonX tells PersonY had come", "relation": "HinderedBy"}}
{"generation": "PersonX pierces PersonX's ears. PersonX will be able to hear the sound of PersonX's voice", "references": ["accomplished", "happy", "numb", "pain", "sore", "satisfied"], "input": {"head": "PersonX pierces PersonX's ears", "relation": "xReact"}}
{"generation": "PersonX buys one anyway. As a result, others feel that the game is too much of a distraction", "references": ["none"], "input": {"head": "PersonX buys one anyway", "relation": "oReact"}}
{"generation": "PersonX gives PersonY account. The effect on others will be different", "references": ["thinks about personY", "hears what is said", "gets robbed", "gets data stolen"], "input": {"head": "PersonX gives PersonY account", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's teacher wants him to finish his make-up work by midnight.", "PersonX has to work all day.", "PersonX's parents said it was time to do homework.", "It is snowing too hard and it is too cold.", "they have to much homework", "PersonX is very susceptible to sickness", "they have to do chores", "PersonX is sick with a cold"], "input": {"head": "PersonX is outside playing", "relation": "HinderedBy"}}
{"generation": "PersonX reads ___ to the class is filled by the class's name", "references": ["newspapers", "books", "notes", "a book", "magazines", "journals", "paper", "manuscripts", "book"], "input": {"head": "PersonX reads ___ to the class", "relation": "isFilledBy"}}
{"generation": "PersonX meets PersonY for dinner. As a result, others feel that they are being treated unfairly", "references": ["full", "engaged", "excited"], "input": {"head": "PersonX meets PersonY for dinner", "relation": "oReact"}}
{"generation": "PersonX sees PersonY wife. The effect on others will be different", "references": ["PersonY's muscles tense up", "none", "PersonY yells at PersonX", "PerosnY's face turns red with rage"], "input": {"head": "PersonX sees PersonY wife", "relation": "oEffect"}}
{"generation": "PersonX hangs PersonY's head. Before, PersonX needs to be able to talk to PersonY", "references": ["to hear PersonY deny any vaping", "a rope to attach to PersonY's head", "a sturdy place to hang the rope from", "to confront PersonY", "none", "to discover PersonY vaping at party", "to ask PersonY about vaping"], "input": {"head": "PersonX hangs PersonY's head", "relation": "xNeed"}}
{"generation": "PersonX restores the ___ to PersonX's condition. The effect on PersonX will be applied to the other person", "references": ["Takes steps to preserve that condition", "Rests after hard work", "to condition to pail", "to restors t cndition"], "input": {"head": "PersonX restores the ___ to PersonX's condition", "relation": "xEffect"}}
{"generation": "PersonX gets ___ to make. After, PersonX will want to make a new one", "references": ["to finish something", "to make use of items", "to get things done", "to be responsible"], "input": {"head": "PersonX gets ___ to make", "relation": "xWant"}}
{"generation": "PersonX uses the ___ effectively. As a result, others feel that the ___ is a bad idea", "references": ["none", "grateful"], "input": {"head": "PersonX uses the ___ effectively", "relation": "oReact"}}
{"generation": "PersonX looks like a tourist. After, others will want to see her", "references": ["none", "to talk about it.", "to ask questions."], "input": {"head": "PersonX looks like a tourist", "relation": "oWant"}}
{"generation": "PersonX pays ___ to anything is filled by the user", "references": ["money", "coins"], "input": {"head": "PersonX pays ___ to anything", "relation": "isFilledBy"}}
{"generation": "PersonX makes PersonY assault. PersonX did this to me", "references": ["to proceed to the next phase of a plan"], "input": {"head": "PersonX makes PersonY assault", "relation": "xIntent"}}
{"generation": "PersonX loses PersonX's ___ in the war is filled by the same person who lost PersonX's ___ in", "references": ["rifle", "watch", "town", "knapsack", "gun", "canteen", "picture", "ring", "flag"], "input": {"head": "PersonX loses PersonX's ___ in the war", "relation": "isFilledBy"}}
{"generation": "PersonX spends the ___ at PersonY's house. The effect on PersonX will be the same as the effect on PersonY", "references": ["Drives car", "feels energised", "gains a friend", "enjoys an outing", "Goes home", "feels close to the host"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "xEffect"}}
{"generation": "PersonX escorts PersonY back. After, PersonX will want to get PersonY back", "references": ["to leave PersonY somewhere", "to help PersonY with other things", "to ask them to leave", "to jail PersonY", "to see them wave from inside", "to watch them unlock their house door"], "input": {"head": "PersonX escorts PersonY back", "relation": "xWant"}}
{"generation": "PersonX looks like a PersonY. PersonX will be the one who is the most important person in the", "references": ["like an imposter because he looks like someone else", "nan"], "input": {"head": "PersonX looks like a PersonY", "relation": "xReact"}}
{"generation": "PersonX does the best PersonY could. The effect on others will be minimal", "references": ["none", "get entertained", "have fun"], "input": {"head": "PersonX does the best PersonY could", "relation": "oEffect"}}
{"generation": "PersonX lets PersonY's guard. After, others will want to take advantage of this", "references": ["tell guard to ignore person x and ask person y next time", "tell person x not to make decisions about person y's guard", "tell person x he did well", "none"], "input": {"head": "PersonX lets PersonY's guard", "relation": "oWant"}}
{"generation": "PersonX gets a call from PersonY. Before, PersonX needs to get a call from PersonY", "references": ["have a phone", "to answer their phone", "to buy a phone", "develop a friendship", "none"], "input": {"head": "PersonX gets a call from PersonY", "relation": "xNeed"}}
{"generation": "PersonX picks blueberries. PersonX did this to me", "references": ["to taste the blueberries", "to eat them"], "input": {"head": "PersonX picks blueberries", "relation": "xIntent"}}
{"generation": "PersonX sees where PersonY was going. The effect on PersonX will be similar to the effect on PersonY", "references": ["becomes aware", "gains information"], "input": {"head": "PersonX sees where PersonY was going", "relation": "xEffect"}}
{"generation": "PersonX finds another ___ is filled by a new ___", "references": ["wallet", "shell", "chair", "outlet", "road", "dollar", "key", "room", "hole", "rock", "battery", "sweater", "book"], "input": {"head": "PersonX finds another ___", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They will need to buy hair bleach first", "PersonX's job won't allow pink hair", "No hair dye will work one personX's hair.", "It is forbidden at their school", "PersonX has no access to hair dye.", "PersonX doesn't have any hair dye"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX cannot afford to go to college", "PersonX couldn't pass the bar exam.", "PersonX can't pass the bar", "PersonX is dumb.", "PersonX got kicked out of school by the principal.", "PersonX was told that he could not by his dad.", "PersonX can't afford law school.", "PersonX's professor failed him on a critical exam.", "PersonX is unemployed."], "input": {"head": "PersonX becomes a lawyer", "relation": "HinderedBy"}}
{"generation": "a photo album can be used for this purpose", "references": ["put pictures in", "burn after a break-up", "decorate for a family reunion", "collect visual memories of people", "put news clippings in", "fill with pictures and give as a gift", "put the thief's picture in with all the other thieves", "feel nostalgic", "comfort PersonX with", "use as decor for a party", "store coupons", "view embarrassing family photos from the past.", "find the picture"], "input": {"head": "photo album", "relation": "ObjectUse"}}
{"generation": "PersonX chews the cud. As a result, others feel that the game is too easy", "references": ["friendly", "none"], "input": {"head": "PersonX chews the cud", "relation": "oReact"}}
{"generation": "PersonX brings ___ to PersonY's eyes. Before, PersonX needs to be able to see PersonY's face, but", "references": ["to have performed extremely well", "to have hurt PersonY", "to have honored PersonY in their speech", "to talk to PersonY", "to find PersonY", "to have said something horrible to PersonY"], "input": {"head": "PersonX brings ___ to PersonY's eyes", "relation": "xNeed"}}
{"generation": "PersonX purchases a lottery ticket. The effect on others will be limited to those who have already purchased the ticket", "references": ["none"], "input": {"head": "PersonX purchases a lottery ticket", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X is too sad.", "PersonX can't accept the decision.", "PersonX's boss is threatening to fire him if he isn't enthusiastic", "PersonX is too angry.", "PersonX's friend made him promise he'll let her accept instead", "PersonX wants to hold a grudge."], "input": {"head": "PersonX reluctantly accepted", "relation": "HinderedBy"}}
{"generation": "PersonX enters PersonX's office. After, others will want to know what's going on", "references": ["to work", "to coordinate with PersonX", "none"], "input": {"head": "PersonX enters PersonX's office", "relation": "oWant"}}
{"generation": "PersonX wants a baby. After that, he's going to have to find a way to", "references": ["PersonX talks to her husband"], "input": {"head": "PersonX wants a baby", "relation": "isBefore"}}
{"generation": "a dye contains a protein called a protein-coupled receptor", "references": ["chromophore"], "input": {"head": "dye", "relation": "MadeUpOf"}}
{"generation": "a fund can be used for the purchase of a home or a business", "references": ["pay down payment"], "input": {"head": "fund", "relation": "ObjectUse"}}
{"generation": "PersonX loves the cake. As a result, others feel that the cake is too sweet", "references": ["none"], "input": {"head": "PersonX loves the cake", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY won't approve PersonX's advertisement.", "PersonX can't find an ad company to work with.", "They cannot afford to print out quality ads.", "There are government restrictions on displaying advertisements.", "Person X does not have internet.", "PersonY's graphic designer won't finish the advertisement.", "Person X can't afford it.", "PersonX can't afford to pay for advertisement"], "input": {"head": "PersonX advertises PersonX's business", "relation": "HinderedBy"}}
{"generation": "PersonX gets dressed for work. As a result, others feel that he is a bad person", "references": ["attracted", "none", "respectful"], "input": {"head": "PersonX gets dressed for work", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The bank manager has threatening to freeze business funding otherwise", "The situation is not threatening.", "PersonX is surrounded by strong people.", "PersonX has their stuff together.", "PersonX's business partner has thrust them into the spotlight", "PersonX is too calm."], "input": {"head": "PersonX loses PersonX's nerve", "relation": "HinderedBy"}}
{"generation": "PersonX finds a good one. The effect on PersonX will be similar to that of a normal person", "references": ["he buys it", "he shows it to his friends"], "input": {"head": "PersonX finds a good one", "relation": "xEffect"}}
{"generation": "a covering can be used for the following purposes:\n\n1", "references": ["put on head", "conceal part of a house being renovated", "keep warm with", "cover the hot tub", "keep out rain", "keep the boat safe in winter", "cover the new car", "put on a bed", "keep the plants from freezing", "wear over swimwear", "put on bed", "drape on furniture"], "input": {"head": "covering", "relation": "ObjectUse"}}
{"generation": "PersonX sees what had happened. After that, he was able to get the information from the other", "references": ["PersonX runs away", "PersonX shares the news with a friend", "PersonX calls 911"], "input": {"head": "PersonX sees what had happened", "relation": "isBefore"}}
{"generation": "PersonX performs PersonX's ___ in a manner. PersonX did this to me", "references": ["to be responsible", "responsible", "respected"], "input": {"head": "PersonX performs PersonX's ___ in a manner", "relation": "xIntent"}}
{"generation": "PersonX shows a leg. Before, PersonX needs to be able to walk", "references": ["shave", "hospital", "wax", "to pull up their pant leg", "to pull up their skirt", "injured", "to lift his leg up a bit", "to roll his pants up"], "input": {"head": "PersonX shows a leg", "relation": "xNeed"}}
{"generation": "PersonX writes poetry. Before that, he was a writer for the New York Times", "references": ["PersonX picks up a fountain pen"], "input": {"head": "PersonX writes poetry", "relation": "isAfter"}}
{"generation": "PersonX gains PersonY's confidence. Before, PersonX needs to be able to talk to PersonX", "references": ["to work hard", "to accomplish what they have been asked", "to keep PersonY's secrets", "to prove themselves", "to follow through with agreements", "to save PersonY's business"], "input": {"head": "PersonX gains PersonY's confidence", "relation": "xNeed"}}
{"generation": "PersonX looks at PersonY's face. The effect on others will be different", "references": ["stutters", "receives eye contact from another", "laughs", "must respond with a reaction", "breaths heavily", "see's what they do"], "input": {"head": "PersonX looks at PersonY's face", "relation": "oEffect"}}
{"generation": "PersonX falls on PersonY's neck. The effect on PersonX will be reversed", "references": ["go to the hospital", "yells", "hurts ribs", "none", "be in pain"], "input": {"head": "PersonX falls on PersonY's neck", "relation": "xEffect"}}
{"generation": "PersonX loves PersonY with all my heart. Before that, I was a fan of PersonY", "references": ["PersonX walks toward PersonY at school"], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "isAfter"}}
{"generation": "PersonX looks PersonY's way. The effect on PersonX will be similar to the effect on PersonY", "references": ["recognizes Person Y", "catches Person Y's stare", "none"], "input": {"head": "PersonX looks PersonY's way", "relation": "xEffect"}}
{"generation": "PersonX trails behind PersonY. Before that, he's the only one who can actually see the", "references": ["PersonX rides a bike with PersonY"], "input": {"head": "PersonX trails behind PersonY", "relation": "isAfter"}}
{"generation": "PersonX spills PersonX's coffee. The effect on PersonX will be similar to that of a normal person", "references": ["stains pants", "get burned", "MAKES A MESS", "HAS TO PICK THE COFFEE UP", "CANNOT DRINK THE COFFEE NOW", "NEEDS A NEW COFFEE"], "input": {"head": "PersonX spills PersonX's coffee", "relation": "xEffect"}}
{"generation": "PersonX grants women the ___. PersonX will be the one who is the most important person in the", "references": ["satisfied"], "input": {"head": "PersonX grants women the ___", "relation": "xReact"}}
{"generation": "PersonX brings the ___ into disrepute. After, others will want to know what he's doing", "references": ["diistance themselves from person X", "to desicredt them in return", "to maintain credibility", "file a police report on person X", "none"], "input": {"head": "PersonX brings the ___ into disrepute", "relation": "oWant"}}
{"generation": "PersonX makes a change. Before, PersonX needs to be able to use the same character in different ways", "references": ["have an epiphany about their life.", "to be a hoarder", "to have a cluttered house", "to have gone through something", "none", "to not like what they're doing."], "input": {"head": "PersonX makes a change", "relation": "xNeed"}}
{"generation": "PersonX is playing ball. After that, he's going to be a little bit more aggressive", "references": ["PersonX goes out to eat with his teammates"], "input": {"head": "PersonX is playing ball", "relation": "isBefore"}}
{"generation": "PersonX claps PersonY on the shoulder. Before, PersonX needs to be able to see PersonY's face", "references": ["get close to PersonY", "be friends", "like PersonY", "approach PersonY", "none"], "input": {"head": "PersonX claps PersonY on the shoulder", "relation": "xNeed"}}
{"generation": "PersonX owns a dog. PersonX did this to me", "references": ["to save an animal's life", "to have a companion", "to have a pet", "a friend"], "input": {"head": "PersonX owns a dog", "relation": "xIntent"}}
{"generation": "PersonX gets messy. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX gets messy", "relation": "oWant"}}
{"generation": "PersonX sends PersonY message. After that, PersonY sends PersonX message", "references": ["PersonX meets PersonY at the bar"], "input": {"head": "PersonX sends PersonY message", "relation": "isBefore"}}
{"generation": "PersonX gets the book. PersonX will be able to read it", "references": ["intelligent", "happy", "entertained", "satisfied"], "input": {"head": "PersonX gets the book", "relation": "xReact"}}
{"generation": "PersonX falls in line. PersonX will be able to use the \"X\" in the name", "references": ["regretful", "calm", "angry", "annoyed"], "input": {"head": "PersonX falls in line", "relation": "xReact"}}
{"generation": "PersonX drives all the way back. After, PersonX will want to know if you're a member of the group", "references": ["to pick up the suicase he forgot", "to get out of the car", "to get his wallet", "to get to their destination", "to go back home", "to retrieve something"], "input": {"head": "PersonX drives all the way back", "relation": "xWant"}}
{"generation": "PersonX meets PersonX's father. PersonX is a very intelligent and intelligent person", "references": ["friendly", "gregarious", "familial", "responsible son"], "input": {"head": "PersonX meets PersonX's father", "relation": "xAttr"}}
{"generation": "PersonX loses PersonY's wallet. The effect on PersonX will be reversed", "references": ["they make Person X mad", "Will be blamed", "they owe PersonX money", "Will have to cover losses"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "xEffect"}}
{"generation": "PersonX develops PersonY approach. Before that, we have to deal with the fact that PersonX", "references": ["PersonX goes to PersonY's class", "PersonX observes PersonY"], "input": {"head": "PersonX develops PersonY approach", "relation": "isAfter"}}
{"generation": "a basement can be used for a variety of purposes, including:\n\n\u2022", "references": ["playing hide and seek", "have workshop", "protection from tornadoes", "storage of produce", "storing items", "access to circuits", "access to heating unit", "providing shelter", "store old boxes", "storing things", "access to plumbing", "store wine", "store things"], "input": {"head": "basement", "relation": "ObjectUse"}}
{"generation": "PersonX takes ___ in PersonY's hands is filled by the power of the power of the power of the", "references": ["pepper", "food", "towels", "dishes", "puppy", "bread", "glasses", "card", "salt", "shoes"], "input": {"head": "PersonX takes ___ in PersonY's hands", "relation": "isFilledBy"}}
{"generation": "PersonX meets some friends. PersonX did this to me", "references": ["socialize", "to be social"], "input": {"head": "PersonX meets some friends", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is truthfully disappointed", "PersonX's mom taught him to never be satisfied.", "PersonX has seasonal affective disorder", "PersonX is stubborn.", "PersonX is angry.", "PersonX cannot decide what they want.", "PersonX's dad will not let him.", "PersonX expected better."], "input": {"head": "PersonX is quite pleased", "relation": "HinderedBy"}}
{"generation": "PersonX falls on PersonY. After, PersonX will want to get a new name", "references": ["feel ashamed", "to stand up", "to apologize", "apologize", "to go to the hospital"], "input": {"head": "PersonX falls on PersonY", "relation": "xWant"}}
{"generation": "PersonX leads PersonY into temptation. Before, PersonX needs to be able to get PersonY to stop being a", "references": ["to understand PersonY", "to entice person y", "to have bad habits", "to seduce person y", "to be a trouble maker", "to be a bad influence", "to get PersonY's attention"], "input": {"head": "PersonX leads PersonY into temptation", "relation": "xNeed"}}
{"generation": "PersonX visits the aquarium. After that, he is seen in the aquarium with the other members", "references": ["PersonX takes photos to remember the experience"], "input": {"head": "PersonX visits the aquarium", "relation": "isBefore"}}
{"generation": "PersonX puts PersonY's head down. PersonX will be able to see the person's face, but not", "references": ["guilty", "like a hero", "good", "confident", "competent"], "input": {"head": "PersonX puts PersonY's head down", "relation": "xReact"}}
{"generation": "PersonX often went. Before, PersonX needs to be able to talk to people", "references": ["to drive themselves there", "get a membership in the gym", "get a meal plan", "to take off of work", "none"], "input": {"head": "PersonX often went", "relation": "xNeed"}}
{"generation": "PersonX thanks the ___ for PersonY's comments. After, PersonX will want to know if you're a good person", "references": ["take questions", "call on people", "to give person y a gift", "to get more feedback"], "input": {"head": "PersonX thanks the ___ for PersonY's comments", "relation": "xWant"}}
{"generation": "PersonX helps PersonY move. As a result, others feel the same way", "references": ["happy", "safe", "thankful"], "input": {"head": "PersonX helps PersonY move", "relation": "oReact"}}
{"generation": "PersonX looks at PersonY like that. As a result, others feel that they are being treated unfairly", "references": ["like they are being misunderstood", "uncomfortable", "looked at"], "input": {"head": "PersonX looks at PersonY like that", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Someone else is behind PersonY.", "PersonY is to far ahead of PersonX."], "input": {"head": "PersonX closes behind PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX gets the ___ into PersonX's hands is filled by the ___", "references": ["ball", "play", "controller", "money", "plant", "dirt", "knife", "weapon"], "input": {"head": "PersonX gets the ___ into PersonX's hands", "relation": "isFilledBy"}}
{"generation": "a bigot does not desire to be a bigot", "references": ["advice"], "input": {"head": "bigot", "relation": "NotDesires"}}
{"generation": "PersonX puts it under PersonY's pillow. Before that, he says, \"I'm not going to be", "references": ["PersonX tells PersonY that the toothfairy will bring them money"], "input": {"head": "PersonX puts it under PersonY's pillow", "relation": "isAfter"}}
{"generation": "PersonX asks PersonY to sit down. The effect on others will be different", "references": ["sits in it", "gets comfortable", "pulls out a chair", "starts to learn", "none"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "oEffect"}}
{"generation": "PersonX throws PersonX's hat over the wall. After, PersonX will want to talk to PersonX", "references": ["to go home", "leave the house for the store", "buy a new headgear", "to check where it has fallen"], "input": {"head": "PersonX throws PersonX's hat over the wall", "relation": "xWant"}}
{"generation": "PersonX falls into the wrong hands. Before that, he was a very good player, but he was", "references": ["PersonX delivers a letter"], "input": {"head": "PersonX falls into the wrong hands", "relation": "isAfter"}}
{"generation": "PersonX gets the milk. PersonX will be the one who gets the milk", "references": ["happy", "accomplished", "thirsty", "satisfied"], "input": {"head": "PersonX gets the milk", "relation": "xReact"}}
{"generation": "PersonX doesn't make the cut. The effect on PersonX will be the same as the effect on Person X", "references": ["no date to the dance", "no college scholarship"], "input": {"head": "PersonX does n't make the cut", "relation": "xEffect"}}
{"generation": "PersonX misses PersonY a lot. As a result, others feel that PersonX is too much of a jerk to", "references": ["lovesick.", "appreciated , missed", "none"], "input": {"head": "PersonX misses PersonY a lot", "relation": "oReact"}}
{"generation": "PersonX grants PersonY request. Before, PersonX needs to be able to use PersonY's abilities", "references": ["to talk to PersonY", "to ask what the request is.", "consider what person y is saying", "to ask find PersonY.", "make a decision in their mind", "to see if the request if feasible", "to know the reason for PersonY's request"], "input": {"head": "PersonX grants PersonY request", "relation": "xNeed"}}
{"generation": "PersonX shakes the ___ to PersonX's foundations. The effect on PersonX will be similar to the effect on PersonX on the other", "references": ["becomes weak", "examines the results", "is put in jail", "sighs"], "input": {"head": "PersonX shakes the ___ to PersonX's foundations", "relation": "xEffect"}}
{"generation": "PersonX puts upon PersonY. After, PersonX will want to know who is the person who is the person who", "references": ["to tell PersonY to get them everything", "to not care about how PersonY feels"], "input": {"head": "PersonX puts upon PersonY", "relation": "xWant"}}
{"generation": "PersonX gets something to drink. As a result, others feel like they're being punished for their actions", "references": ["none"], "input": {"head": "PersonX gets something to drink", "relation": "oReact"}}
{"generation": "PersonX catches PersonX's bus. Before that, he's been in the middle of a fight with", "references": ["PersonX waiting", "PersonX is waiting at the bus stop", "PersonX leaves the house to go to school"], "input": {"head": "PersonX catches PersonX's bus", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They don't have time to study", "The dean expelled PersonX.", "PersonX has a low IQ", "PersonX cannot afford schooling", "The teacher kicked PersonX out.", "PersonX doesn't have a mentor to help him.", "PersonX doesn't know how to study.", "No one will tell them", "The principal suspended PersonX."], "input": {"head": "PersonX knows much", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX does not have the expertise in this area.", "PersonY is currently in prison", "PersonY does not want help.", "PersonY is too far gone.", "PersonX has given up on PersonY.", "PersonY refuses any help.", "PersonY will not listen to anyone"], "input": {"head": "PersonX turns PersonY's life around", "relation": "HinderedBy"}}
{"generation": "PersonX effects PersonX's purpose. Before that, you can use the same effect on a different person", "references": ["PersonX loses the game again", "PersonX applies to college", "PersonX thinks about their direction in life"], "input": {"head": "PersonX effects PersonX's purpose", "relation": "isAfter"}}
{"generation": "PersonX bats PersonX's eyes. PersonX will be able to see PersonX's face", "references": ["impatient", "flirtatious", "embarrassed", "excited"], "input": {"head": "PersonX bats PersonX's eyes", "relation": "xReact"}}
{"generation": "While have party, you would think that the party would be more interested in the", "references": ["talk about next time", "talk about old times", "get film developed", "people will drink", "account for cost", "find out if everyone enjoyed themselves", "but lots of food and drink", "package up unfinished food", "socialise", "clean up mess", "dog bites", "plop down", "printint sign with computer", "invite mon and dad", "thank band", "housework", "collect remembrances", "go to bed", "might get drunk", "pick up dishes", "reflect on memories", "smoke bowl", "refrigerate food", "give thanks", "pick up tab", "have reunion", "guests get drunk", "sing last song", "vacuum", "drinking and music", "dump detritus", "thank party goers for coming", "close front door", "kiss goodbye", "say goodbye", "receive departing guests at door", "create scrapbook", "tip help", "clean up place", "wonder why didn't come", "thank help", "express relief", "inquire about travel concerns", "turn off lights", "cleaning room", "send out invitations", "retrieve coats", "lawn croquet", "grumpy", "make sure drinkers don't drive", "accept congratulations", "glasses get borken", "give hug goodbye", "pay caterer", "assist departures", "throw up", "distribute goodies", "wipe off lipstick", "people spill drinks and food", "give out souvenirs", "make sure guests have directions", "pay bill", "stand at front door", "eat leftovers", "send copies of pictures", "clean everything up", "skinny dipping in backyard pool", "friends show up", "throw away used gift wrappings", "invite people", "dancing", "take aspirin", "give big cheer", "cherish moments of evening", "watching football", "send invitations", "put out snacks", "lessening of inhibitions", "sending directions", "plan", "eat perishables", "have fun", "read thank notes", "choose music", "clean up confetti", "wash dishes", "spills on carpet", "fun", "think about safe travel home", "see guests off", "pick up pieces", "pray together", "sigh in relief", "hug spouse", "get laid", "begin new life", "provide snacks", "decorating with crepe paper", "help guests get wraps", "guests open party favors", "wave goodbye", "take baby sitter home"], "input": {"head": "have party", "relation": "HasSubEvent"}}
{"generation": "PersonX puts ___ on PersonY's shoulder is filled by the same thing", "references": ["epaulets", "lotion", "backback", "medals", "scarf", "bag", "bandage", "cream", "ice packs", "armor", "padding", "ice", "jacket", "cape", "bags", "lanyard", "sweater", "his hands"], "input": {"head": "PersonX puts ___ on PersonY's shoulder", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't like the coffee available at work.", "PersonX has already drank too much coffee.", "PersonX has to go to bed soon.", "PersonX is about to have a medical procedure that requires fasting.", "PersonX needs to go to sleep right now.", "There is no coffee available at PersonX's house.", "PersonX gave up coffee for lent."], "input": {"head": "PersonX drinks some coffee", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY does not understand PersonX.", "PersonY hates learning.", "PersonY was instructed to learn it on their own", "PersonX was forbidden from assisting", "PersonX is a terrible teacher.", "PersonY is stubborn and does not listen."], "input": {"head": "PersonX gives PersonY knowledge", "relation": "HinderedBy"}}
{"generation": "PersonX accidentally cut. After that, he was able to get back to the game", "references": ["PersonX apologizes for jumping ahead of someone"], "input": {"head": "PersonX accidentally cut", "relation": "isBefore"}}
{"generation": "PersonX looks like a tourist. Before, PersonX needs to be able to talk to people", "references": ["to dress different.", "buy touristy clothes", "to dress like a tourist", "wear them", "to travel.", "to go on vacation"], "input": {"head": "PersonX looks like a tourist", "relation": "xNeed"}}
{"generation": "PersonX lands on PersonX's feet. Before that, he's on the ground, and he's trying", "references": ["PersonX jumps from the window"], "input": {"head": "PersonX lands on PersonX's feet", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The hiring manager did not accept PersonX's application.", "PersonX doesn't have time for an interview", "PersonX did not get a call back.", "PersonY cancelled PersonX's interview.", "because person x already has a job", "because person x hasnt applied anywhere", "PersonX already has a job", "because no one is hiring", "PersonX has not applied for jobs yet."], "input": {"head": "PersonX has a job interview", "relation": "HinderedBy"}}
{"generation": "PersonX lit another ___. The effect on PersonX will be the same as the one on PersonX", "references": ["burns down house", "burns self", "gets heat", "gets burned", "gets escorted out", "loses one more resource of theirs"], "input": {"head": "PersonX lit another ___", "relation": "xEffect"}}
{"generation": "PersonX expects to win. After that, he'll have to decide whether to go with the", "references": ["PersonX pays for the lottery tickets in cash"], "input": {"head": "PersonX expects to win", "relation": "isBefore"}}
{"generation": "PersonX snatches ___ away. The effect on PersonX will be similar to the effect on Person X", "references": ["is caught and put in jail", "gets thing snatched away from her", "hears a yell", "gets hit", "is chased by the police", "trips over a foot"], "input": {"head": "PersonX snatches ___ away", "relation": "xEffect"}}
{"generation": "PersonX is a little girl. The effect on PersonX will be similar to that of a normal person", "references": ["wears a dress", "grows their hair", "none", "goes for ballet dancing"], "input": {"head": "PersonX is a little girl", "relation": "xEffect"}}
{"generation": "PersonX puts PersonX's head in the sand. Before, PersonX needs to be able to see the world around him", "references": ["to dig a hole", "to go to the beach", "to make sure someone is with them", "grab their friend"], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "xNeed"}}
{"generation": "PersonX babysits PersonX's cousin. The effect on others will be similar to that of a normal person", "references": ["gets yelled at", "laughs", "screams", "plays", "none"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "oEffect"}}
{"generation": "PersonX surprises PersonX's family. The effect on PersonX will be felt by the player, and will be felt by", "references": ["misses house", "smiles", "no one home", "none", "is productive"], "input": {"head": "PersonX surprises PersonX's family", "relation": "xEffect"}}
{"generation": "PersonX gives PersonY a note. The effect on PersonX will be the same as PersonY's effect on PersonY", "references": ["none", "pulls their hand back from handing the note to PersonY", "gets a reaction from PersonY"], "input": {"head": "PersonX gives PersonY a note", "relation": "xEffect"}}
{"generation": "PersonX sees where PersonY was going. As a result, others feel that PersonX is a better person than PersonY", "references": ["unsatisfied", "sad", "sad if y hate him", "nervous", "disappointed"], "input": {"head": "PersonX sees where PersonY was going", "relation": "oReact"}}
{"generation": "PersonX affords PersonY pleasure. Before that, you can't even get a good look at the", "references": ["PersonX makes a lot of money"], "input": {"head": "PersonX affords PersonY pleasure", "relation": "isAfter"}}
{"generation": "PersonX agrees to disagree. Before, PersonX needs to know that PersonX is a member of the \"", "references": ["to be filling a online protest form", "to be asked a question", "to listen to the conversation", "have formed an opinion", "have heard an opposing opinion", "to determine a response"], "input": {"head": "PersonX agrees to disagree", "relation": "xNeed"}}
{"generation": "PersonX plays hockey. PersonX did this to me", "references": ["to exercise", "to practice", "to socialize with friends", "to have fun", "to play a game"], "input": {"head": "PersonX plays hockey", "relation": "xIntent"}}
{"generation": "PersonX interrupts PersonY. PersonX is now a member of PersonX's group", "references": ["malevolent", "inconsiderate", "quarrelsome", "classless", "unthoughtful", "rude"], "input": {"head": "PersonX interrupts PersonY", "relation": "xAttr"}}
{"generation": "PersonX takes matters into PersonX's own hands. PersonX will be able to use the power of the power of the", "references": ["in control", "glad to complete the task", "frustrated that others couldn't do it", "proactive", "successful and happy", "empowered"], "input": {"head": "PersonX takes matters into PersonX's own hands", "relation": "xReact"}}
{"generation": "an aprons can be used for a variety of purposes, including:\n\n\u2022", "references": ["To wear when cooking", "tie off a wound to slow bleeding", "keep from getting stains on  dress", "sew into curtains", "wear as a dress", "wear while catering", "keep clothes clean", "protect their clothing", "ties around head as a makeshift bonnet", "Wear when grilling", "make sure hot foods don't burn you"], "input": {"head": "aprons", "relation": "ObjectUse"}}
{"generation": "PersonX bits PersonX's lip. Before, PersonX needs to be able to speak", "references": ["to pull their lip in", "none", "to push their teeth out"], "input": {"head": "PersonX bits PersonX's lip", "relation": "xNeed"}}
{"generation": "PersonX throws ___ on the nature. After, others will want to know what's going on", "references": ["to understand what PersonX is saying", "none", "to listen to PersonX"], "input": {"head": "PersonX throws ___ on the nature", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is busy recording the scene for evidence", "Person Y is unable to hear Person X.", "PersonY is standing just out of PersonX's reach", "Person Y does not listen to Person X.", "Personx's eyes are glued open.", "PersonY is talking with someone else at the scene", "Someone is holding personx's head", "PersonY has just had eye surgery and cannot blink"], "input": {"head": "PersonX averts PersonY's eyes", "relation": "HinderedBy"}}
{"generation": "PersonX turns PersonY's life. PersonX did this to her, and she did it to her", "references": ["them to have an easier existence", "help persony have a better life"], "input": {"head": "PersonX turns PersonY's life", "relation": "xIntent"}}
{"generation": "PersonX sells PersonX's jewelry. The effect on PersonX will be the same as the effect on PersonX", "references": ["Learns other ways to impress people", "gets money", "Loses admirers", "smiles", "person x makes money", "person x misses their jewlery"], "input": {"head": "PersonX sells PersonX's jewelry", "relation": "xEffect"}}
{"generation": "PersonX brings PersonX's daughter. After that, she's going to be a part of the team", "references": ["PersonX watches the movie with PersonX's daughter"], "input": {"head": "PersonX brings PersonX's daughter", "relation": "isBefore"}}
{"generation": "PersonX gets another laptop. Before that, he's got a laptop with a keyboard and mouse", "references": ["PersonX breaks his laptop"], "input": {"head": "PersonX gets another laptop", "relation": "isAfter"}}
{"generation": "PersonX doesn't get along. The effect on others will be different", "references": ["argument.", "none", "yell"], "input": {"head": "PersonX does n't get along", "relation": "oEffect"}}
{"generation": "PersonX becomes a great basketball player. PersonX is a great basketball player", "references": ["sucessful", "talented", "hard-working", "athletic", "skilled", "driven"], "input": {"head": "PersonX becomes a great basketball player", "relation": "xAttr"}}
{"generation": "PersonX turns PersonX's music down. After that, PersonX can't play any music", "references": ["PersonX concentrated more easily"], "input": {"head": "PersonX turns PersonX's music down", "relation": "isBefore"}}
{"generation": "PersonX distributes in forms without permission. After that, you can use the following command to install the package", "references": ["PersonX gets in trouble at work"], "input": {"head": "PersonX distributes in forms without permission", "relation": "isBefore"}}
{"generation": "PersonX seeks PersonX's ___ in the world is filled by the same person", "references": ["old boyfriend", "missing cat"], "input": {"head": "PersonX seeks PersonX's ___ in the world", "relation": "isFilledBy"}}
{"generation": "PersonX finds another ___. Before, PersonX needs to know that PersonX is a member of the group", "references": ["gas", "none", "car"], "input": {"head": "PersonX finds another ___", "relation": "xNeed"}}
{"generation": "You are likely to find a rampant stupidity in a lot of things", "references": ["fraternity house"], "input": {"head": "rampant stupidity", "relation": "AtLocation"}}
{"generation": "PersonX smells nice. Before, PersonX needs to be able to smell the scent of a person", "references": ["to shower", "to apply perfume", "to put on parfume", "apply perfume", "to take a shower", "bathe"], "input": {"head": "PersonX smells nice", "relation": "xNeed"}}
{"generation": "PersonX builds something. PersonX is a tool for building a community of people who are", "references": ["dynamic", "handy", "logical", "forceful", "proud"], "input": {"head": "PersonX builds something", "relation": "xAttr"}}
{"generation": "PersonX opens doors. After, others will want to see her", "references": ["to repay the favor", "to talk with him", "to say thank you", "none", "to spend time with him"], "input": {"head": "PersonX opens doors", "relation": "oWant"}}
{"generation": "PersonX looks like an idiot. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX looks like an idiot", "relation": "xIntent"}}
{"generation": "PersonX twists PersonY's arm. PersonX will be able to use the same move twice, but Person", "references": ["mad", "nan", "guilty", "stressed"], "input": {"head": "PersonX twists PersonY's arm", "relation": "xReact"}}
{"generation": "PersonX looks at PersonY's face. PersonX is a bit more serious", "references": ["thoughtful", "surprised", "attentive", "contemplative"], "input": {"head": "PersonX looks at PersonY's face", "relation": "xAttr"}}
{"generation": "PersonX eats ___ for days. As a result, others feel like they're being punished for their actions", "references": ["none"], "input": {"head": "PersonX eats ___ for days", "relation": "oReact"}}
{"generation": "PersonX eats it. After that, he's a little bit more of a jerk", "references": ["PersonX drinks tea to wash it down"], "input": {"head": "PersonX eats it", "relation": "isBefore"}}
{"generation": "PersonX dates for years. Before, PersonX needs to be able to find a date for a new album", "references": ["to ask people for their number", "to call people to ask for a date", "to have a date", "to not want to settle down"], "input": {"head": "PersonX dates for years", "relation": "xNeed"}}
{"generation": "PersonX twists in the wind. After that, he's a little more of a \"I'm", "references": ["PersonX puts on a show for friends", "PersonX gets very dizzy"], "input": {"head": "PersonX twists in the wind", "relation": "isBefore"}}
{"generation": "PersonX does yard work. Before, PersonX needs to be able to do yard work", "references": ["to get out the tools", "to buy tools", "get dressed", "gather tools needed", "to put on boots", "to go outside"], "input": {"head": "PersonX does yard work", "relation": "xNeed"}}
{"generation": "a filters can be used for the following purposes:\n\nThe filter can be", "references": ["clean water", "filter water", "hold the grounds", "keep out toxins", "block out harsh light", "hide pimples in pictures", "make some sunglasses", "decorate your window", "breath clean air", "stop themselves saying something they should not", "make the actress look more prettier than she really is", "smoke from"], "input": {"head": "filters", "relation": "ObjectUse"}}
{"generation": "PersonX asks PersonX's dad for help. The effect on PersonX will be similar to that of a normal person", "references": ["awaits the consent", "applies advice", "looks forward to receiving the help", "listens to advice"], "input": {"head": "PersonX asks PersonX's dad for help", "relation": "xEffect"}}
{"generation": "earn money. Before, PersonX needs to be able to pay for the services of a third", "references": ["get job", "find job"], "input": {"head": "earn money", "relation": "xNeed"}}
{"generation": "PersonX enjoys PersonY's class. As a result, others feel that they are more likely to be able to use", "references": ["happy", "none", "educated"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "oReact"}}
{"generation": "PersonX smells something burning. After that, he's going to have to go to the bathroom", "references": ["PersonX removes the empty from the burner"], "input": {"head": "PersonX smells something burning", "relation": "isBefore"}}
{"generation": "PersonX dyes PersonY's hair pink. PersonX is a character in the game who is a member of", "references": ["accommodating", "helpful", "adventerous", "indulgent", "skilled", "creative"], "input": {"head": "PersonX dyes PersonY's hair pink", "relation": "xAttr"}}
{"generation": "PersonX leaves the table. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX leaves the table", "relation": "oEffect"}}
{"generation": "PersonX has a bad feeling. After, PersonX will want to kill you", "references": ["find the source of the bad feeling", "stay on a cautionary path", "don't make any sudden moves", "to escape by watching a funny tv sho", "to find out the truth", "relieve the bad feeling", "to throw up", "be reassured", "to get to the bottom of the issue", "to take a bath"], "input": {"head": "PersonX has a bad feeling", "relation": "xWant"}}
{"generation": "PersonX putts PersonY to death. After that, he was able to get the job done", "references": ["PersonX hits the gavel"], "input": {"head": "PersonX putts PersonY to death", "relation": "isBefore"}}
{"generation": "PersonX stirs within PersonY. After, PersonX will want to know who is the person who is the most important", "references": ["to relax on the couch", "to come out of PersonY", "to think about Person Y", "to laugh at PersonY"], "input": {"head": "PersonX stirs within PersonY", "relation": "xWant"}}
{"generation": "PersonX is covered in mud. After, others will want to take a look at the mud", "references": ["none"], "input": {"head": "PersonX is covered in mud", "relation": "oWant"}}
{"generation": "PersonX gets PersonX's hands dirty. After, PersonX will want to know who the other person is", "references": ["to put the plants and seeds into the holes", "to pick what grows and eat it", "to gain something", "to wash their hands", "to not be fancy", "to water them often", "to clean their hands off", "to cover them in dirt and water"], "input": {"head": "PersonX gets PersonX's hands dirty", "relation": "xWant"}}
{"generation": "PersonX blows PersonY's mind. After, PersonX will want to know who the other person is", "references": ["Gets really close to her.", "to surprise PersonY", "He shows her more dance moves.", "to learn more", "to answer PersonY's questions", "to talk to Y"], "input": {"head": "PersonX blows PersonY's mind", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is currently pregnant.", "PersonX's family only prepares unhealthy meals for them.", "PersonX eats too much", "PersonX has bad genes.", "PersonX's doctor says they need to gain weight.", "PersonX has no self control", "PersonX can't exercise due to an injury.", "PersonX is too sick to exercise."], "input": {"head": "PersonX loses thirty pounds", "relation": "HinderedBy"}}
{"generation": "PersonX pours PersonX's heart. PersonX did this to me", "references": ["to be heartfelt", "to talk to someone about it."], "input": {"head": "PersonX pours PersonX's heart", "relation": "xIntent"}}
{"generation": "PersonX turns PersonY's heads. Before that, he turns PersonX's head", "references": ["PersonX buys a new dress", "PersonX has been described as a looker"], "input": {"head": "PersonX turns PersonY's heads", "relation": "isAfter"}}
{"generation": "a w-9 can be used for the following purposes:\n\n1", "references": ["abide by the law", "rip up into small pieces to use as confetti", "use when declaring Mturk income...", "fill out incorrectly to save money", "use to start a fire", "file taxes", "prepay your taxes", "use to fan themselves with", "shred and use to stuff a pillow"], "input": {"head": "w-9", "relation": "ObjectUse"}}
{"generation": "PersonX practices ___ for weeks. PersonX will be the one who will be the one who will be", "references": ["accomplished", "motivated", "satisfied"], "input": {"head": "PersonX practices ___ for weeks", "relation": "xReact"}}
{"generation": "PersonX accomplishes god's ___. Before, PersonX needs to know that PersonX is a god", "references": ["figure out how to accomplish it", "figure out what god wants"], "input": {"head": "PersonX accomplishes god 's ___", "relation": "xNeed"}}
{"generation": "PersonX changes without notice. After that, the game will be completely unresponsive", "references": ["PersonX is a new person"], "input": {"head": "PersonX changes without notice", "relation": "isBefore"}}
{"generation": "PersonX says PersonY nay. The effect on others will be different", "references": ["answer yay", "none", "smile"], "input": {"head": "PersonX says PersonY nay", "relation": "oEffect"}}
{"generation": "a front garden can be used for a variety of purposes, including:\n\n\u2022", "references": ["plant flowers", "architectural enhancement", "impressing guests", "expressing creativity", "improving personal environment", "entertaining friends", "decoration", "enter yard", "adding attractiveness to home", "planting things in", "expressing individuality", "own pleasure"], "input": {"head": "front garden", "relation": "ObjectUse"}}
{"generation": "syrup is a very good example of a good example of a", "references": ["sticky", "sweet taste"], "input": {"head": "syrup", "relation": "HasProperty"}}
{"generation": "PersonX makes PersonY announcement. Before that, he says that he's going to make a new", "references": ["PersonX accept PersonY's request to add PersonY's announcement to the announcements"], "input": {"head": "PersonX makes PersonY announcement", "relation": "isAfter"}}
{"generation": "PersonX eventually moved. As a result, others feel that the game is too complex and too difficult to", "references": ["none"], "input": {"head": "PersonX eventually moved", "relation": "oReact"}}
{"generation": "PersonX links ___ together. PersonX did this to me", "references": ["to connect things"], "input": {"head": "PersonX links ___ together", "relation": "xIntent"}}
{"generation": "PersonX walks in front of PersonY. After, PersonX will want to talk to PersonY", "references": ["say excuse me", "get ahead of the pack", "be noticed", "apologize", "to get to class", "get somewhere", "to beat person y to the gym"], "input": {"head": "PersonX walks in front of PersonY", "relation": "xWant"}}
{"generation": "PersonX gives bob ___. PersonX did this to me", "references": ["to help bob", "to be friendly"], "input": {"head": "PersonX gives bob ___", "relation": "xIntent"}}
{"generation": "PersonX broadens PersonX's ___ to include. After, others will want to know what PersonX is doing", "references": ["none"], "input": {"head": "PersonX broadens PersonX's ___ to include", "relation": "oWant"}}
{"generation": "PersonX wants to save money. As a result, others feel that they are being cheated", "references": ["none"], "input": {"head": "PersonX wants to save money", "relation": "oReact"}}
{"generation": "PersonX runs right. Before, PersonX needs to be able to use the \"X\" key to", "references": ["to wear shoes", "to gauge the offense", "to keep eye on track", "to put on sneakers.", "to figure out where they are gonna run.", "think of a strategy"], "input": {"head": "PersonX runs right", "relation": "xNeed"}}
{"generation": "PersonX has a test tomorrow. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX has a test tomorrow", "relation": "oEffect"}}
{"generation": "PersonX takes the new job. The effect on PersonX will be similar to the one seen in the original game", "references": ["Person X commits to a big change in their life.", "drives to work", "makes more money", "Person X shows gratitude to the employer."], "input": {"head": "PersonX takes the new job", "relation": "xEffect"}}
{"generation": "PersonX looks like men. PersonX is a man", "references": ["odd", "rough", "large", "muscular"], "input": {"head": "PersonX looks like men", "relation": "xAttr"}}
{"generation": "PersonX misses work. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX misses work", "relation": "oEffect"}}
{"generation": "PersonX argues with PersonY's boyfriend. Before that, she says, \"I'm not going to be", "references": ["PersonX disagrees with PersonY's boyfriend"], "input": {"head": "PersonX argues with PersonY's boyfriend", "relation": "isAfter"}}
{"generation": "PersonX leaves the car. PersonX will be able to see the car and will be able to", "references": ["excited and happy"], "input": {"head": "PersonX leaves the car", "relation": "xReact"}}
{"generation": "PersonX looks the other way. The effect on PersonX will be similar to the effect on Person X", "references": ["TO BE IN BEST", "see good things", "NONE", "gets success", "TO FIND SELECTIVE", "none"], "input": {"head": "PersonX looks the other way", "relation": "xEffect"}}
{"generation": "PersonX loves cake. The effect on PersonX will be similar to that of a cake", "references": ["none", "gains weight", "gets hyperglycemic"], "input": {"head": "PersonX loves cake", "relation": "xEffect"}}
{"generation": "PersonX is playing with PersonY's cat. After that, she's playing with PersonZ's cat", "references": ["PersonX gives PersonY's cat a treat", "PersonX gets lots of cuts and has to clean them out"], "input": {"head": "PersonX is playing with PersonY's cat", "relation": "isBefore"}}
{"generation": "PersonX marries another man. After that, he is married to another man", "references": ["PersonX goes on a honeymoon"], "input": {"head": "PersonX marries another man", "relation": "isBefore"}}
{"generation": "PersonX gets beer. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX gets beer", "relation": "oReact"}}
{"generation": "PersonX gets sunburned. After, PersonX will want to get sunburned", "references": ["to put lotion on the burn.", "to put on lotion", "to stay out of the sun from now on.", "to get out of the sun"], "input": {"head": "PersonX gets sunburned", "relation": "xWant"}}
{"generation": "PersonX pays PersonY well. Before that, he's a very good player", "references": ["PersonX hires a new employee", "PersonX hires PersonY to paint their fence"], "input": {"head": "PersonX pays PersonY well", "relation": "isAfter"}}
{"generation": "PersonX refers PersonY. As a result, others feel that PersonX is a better fit for PersonY", "references": ["none", "included"], "input": {"head": "PersonX refers PersonY", "relation": "oReact"}}
{"generation": "PersonX evens gave ___. As a result, others feel that the game is too complex and too complex to", "references": ["happy", "great"], "input": {"head": "PersonX evens gave ___", "relation": "oReact"}}
{"generation": "PersonX starts a family. The effect on others will be different", "references": ["grows up", "none", "spends time with Person X"], "input": {"head": "PersonX starts a family", "relation": "oEffect"}}
{"generation": "PersonX gets published. PersonX did this to make sure that the game was not being used as", "references": ["to be an author", "none"], "input": {"head": "PersonX gets published", "relation": "xIntent"}}
{"generation": "PersonX is having trouble sleeping at night. Before that, he's been sleeping on the floor", "references": ["PersonX drinks a lot of coffee"], "input": {"head": "PersonX is having trouble sleeping at night", "relation": "isAfter"}}
{"generation": "PersonX buys a parrot. After, others will want to know what the parrot is doing", "references": ["none"], "input": {"head": "PersonX buys a parrot", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Their mother will not buy them a new one.", "PersonX has big pockets.", "PersonX is not clumsy.", "Someone glued the handle of the phone before PersonX used it.", "The phone is attached to PersonX.", "PersonX has sticky fingers.", "Someone else is holding the phone for PersonX since they broke their hand.", "Their brother caught the phone."], "input": {"head": "PersonX drops the phone", "relation": "HinderedBy"}}
{"generation": "PersonX starts to swell. Before, PersonX needs to be able to talk to people", "references": ["to feel ill", "none", "to eat the food"], "input": {"head": "PersonX starts to swell", "relation": "xNeed"}}
{"generation": "PersonX owns a dog. Before, PersonX needs to be able to walk on his own", "references": ["look for place to get a dog", "want a pet", "Buy food", "to buy a dog", "to go to the pet seller", "Buy a dog house"], "input": {"head": "PersonX owns a dog", "relation": "xNeed"}}
{"generation": "PersonX pays ___ at a rate. PersonX is not a party to the lawsuit", "references": ["rich", "unfailing", "wealthy", "steadfast", "dependable", "well-off"], "input": {"head": "PersonX pays ___ at a rate", "relation": "xAttr"}}
{"generation": "PersonX wins the championship. After, PersonX will want to know who the winner is", "references": ["to feel proud", "Get on TV.", "to win a medal", "Get his trophy."], "input": {"head": "PersonX wins the championship", "relation": "xWant"}}
{"generation": "PersonX impresses with PersonX's work. After, PersonX will want to know what you think of PersonX's work", "references": ["to do their best", "to expand business", "to show the work to his parents", "to sell his paintings", "to learn more", "to be proud of himself"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xWant"}}
{"generation": "PersonX plans a trip. Before, PersonX needs to get a job", "references": ["map out sites to see", "call ahead to book trip", "to ask for time off", "to research airline prices", "to call their travel agent.", "to pick up travel brochures."], "input": {"head": "PersonX plans a trip", "relation": "xNeed"}}
{"generation": "PersonX can play with PersonY. As a result, others feel that PersonX is too much of a burden", "references": ["happy"], "input": {"head": "PersonX can play with PersonY", "relation": "oReact"}}
{"generation": "PersonX draws PersonX's conclusions. Before that, he draws PersonX's conclusions", "references": ["PersonX read the cover of the book"], "input": {"head": "PersonX draws PersonX's conclusions", "relation": "isAfter"}}
{"generation": "You are likely to find a stallion in a stallion's stallion's stallion's stall", "references": ["field"], "input": {"head": "stallion", "relation": "AtLocation"}}
{"generation": "PersonX feels funny. PersonX is a funny person", "references": ["out of touch", "impaired", "scared", "awkward", "unwell", "weak"], "input": {"head": "PersonX feels funny", "relation": "xAttr"}}
{"generation": "PersonX flees the scene. PersonX will be seen in the background", "references": ["proud", "scared"], "input": {"head": "PersonX flees the scene", "relation": "xReact"}}
{"generation": "PersonX throws ___ at the tv. PersonX will be kicked out of the game", "references": ["guilty", "angry", "awful", "guilty about it", "satisfied"], "input": {"head": "PersonX throws ___ at the tv", "relation": "xReact"}}
{"generation": "PersonX revises every ___. PersonX will be replaced by the new PersonX", "references": ["compulsive", "obsessive", "happy", "very good and satisfied"], "input": {"head": "PersonX revises every ___", "relation": "xReact"}}
{"generation": "PersonX uses PersonY's middle finger. PersonX will be able to use the middle finger to move the cursor", "references": ["angry"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "xReact"}}
{"generation": "PersonX drives on the highway. PersonX is a driverless car that can drive itself", "references": ["careful", "skilled", "restless", "fun", "talented", "excited", "fast"], "input": {"head": "PersonX drives on the highway", "relation": "xAttr"}}
{"generation": "PersonX handles ___ well. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX handles ___ well", "relation": "oWant"}}
{"generation": "PersonX goes ___ with PersonX's mom. After, PersonX will want to go to the bathroom and get a drink", "references": ["their mom to buy lunch.", "their mom to feel good.", "to come back home", "to help his mother"], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "xWant"}}
{"generation": "PersonX eats ___ for days. PersonX is a very good friend of mine", "references": ["dedicated", "routine", "independant", "brave", "hungry", "adventerous", "biased", "weak"], "input": {"head": "PersonX eats ___ for days", "relation": "xAttr"}}
{"generation": "PersonX finds the net. After that, he's able to get the job done", "references": ["PersonX scoops up 3 fish in his net", "PersonX throws the net into the water to catch fish", "PersonX frees the bird"], "input": {"head": "PersonX finds the net", "relation": "isBefore"}}
{"generation": "PersonX makes my day. PersonX did this to me", "references": ["to help and support.", "none"], "input": {"head": "PersonX makes my day", "relation": "xIntent"}}
{"generation": "PersonX understands fully the ___. As a result, others feel that the ___", "references": ["none"], "input": {"head": "PersonX understands fully the ___", "relation": "oReact"}}
{"generation": "You are likely to find a volley ball in a corner, or a ball in the air, or", "references": ["beach"], "input": {"head": "volley ball", "relation": "AtLocation"}}
{"generation": "PersonX goes to the doctor's office. PersonX will be in the hospital for a few days", "references": ["happy", "reassured", "relieved", "composed"], "input": {"head": "PersonX goes to the doctor 's office", "relation": "xReact"}}
{"generation": "supermodel can be used to create a new model", "references": ["turn heads"], "input": {"head": "supermodel", "relation": "CapableOf"}}
{"generation": "PersonX appoints a ___ to investigate is filled by a ___", "references": ["monkey", "serial killer"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "isFilledBy"}}
{"generation": "PersonX throws the food. The effect on others will be different", "references": ["People wonder why X threw the food.", "none", "People duck away from the food."], "input": {"head": "PersonX throws the food", "relation": "oEffect"}}
{"generation": "PersonX sees PersonY's girlfriend. As a result, others feel that PersonY is a bad person", "references": ["none", "surprised"], "input": {"head": "PersonX sees PersonY's girlfriend", "relation": "oReact"}}
{"generation": "PersonX misses ___ at work. PersonX will be fired", "references": ["ill", "guilty", "sick", "nervous", "apologetic", "disappointed"], "input": {"head": "PersonX misses ___ at work", "relation": "xReact"}}
{"generation": "PersonX would like it. PersonX did this to me", "references": ["none", "to be easygoing"], "input": {"head": "PersonX would like it", "relation": "xIntent"}}
{"generation": "PersonX fails PersonX's classes. After that, PersonX will be able to use the class", "references": ["PersonX fears PersonX's parents will cut off PersonX's funds"], "input": {"head": "PersonX fails PersonX's classes", "relation": "isBefore"}}
{"generation": "PersonX reproduces this ___ regardless. As a result, others feel that the game is too much of a distraction", "references": ["none"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "oReact"}}
{"generation": "PersonX looks like PersonY. PersonX will be the one who gets the most votes", "references": ["good", "like a doppelganger", "fine", "indifferent"], "input": {"head": "PersonX looks like PersonY", "relation": "xReact"}}
{"generation": "PersonX turns PersonX's nose up. The effect on PersonX will be reversed", "references": ["a bug flies into his nose", "loses friend", "misses chance to try something different", "people avoid", "gets bloody nose", "becomes alone"], "input": {"head": "PersonX turns PersonX's nose up", "relation": "xEffect"}}
{"generation": "PersonX names the films PersonY is most proud of. As a result, others feel that PersonX is the best", "references": ["amazed", "surprised about his knowledge about the person'"], "input": {"head": "PersonX names the films PersonY is most proud of", "relation": "oReact"}}
{"generation": "PersonX casts PersonY's eyes. PersonX will be able to see PersonY's face, but Person", "references": ["noticed", "focused"], "input": {"head": "PersonX casts PersonY's eyes", "relation": "xReact"}}
{"generation": "PersonX grabs PersonY's keys. PersonX will be able to use the keys to open the door", "references": ["thankful to be able to use the car.", "dominant"], "input": {"head": "PersonX grabs PersonY's keys", "relation": "xReact"}}
{"generation": "PersonX finally joined ___. As a result, others feel that the game is too complex and too complex to", "references": ["none", "happy for him", "fortunate"], "input": {"head": "PersonX finally joined ___", "relation": "oReact"}}
{"generation": "assassin can be found in the following locations:\n\nThe", "references": ["prepare hit list"], "input": {"head": "assassin", "relation": "CapableOf"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no money for a trip.", "PersonX is stuck at work with no vacation time", "PersonX can't afford a trip", "PersonX's girlfriend told him not to go.", "PersonX is busy babysitting.", "PersonX's boss fired him, so he has no money to do so.", "The weather will not allow for a trip", "PersonX's friend will not let him go.", "PersonX has too many responsibilities.", "PersonX knows there's no vacation time left this year."], "input": {"head": "PersonX is planning a trip", "relation": "HinderedBy"}}
{"generation": "PersonX gives PersonY the name. The effect on PersonX will be the same as PersonY's effect on PersonY", "references": ["gets thanked", "smiles", "is thanked", "gets a reward for the referall", "none"], "input": {"head": "PersonX gives PersonY the name", "relation": "xEffect"}}
{"generation": "PersonX watches PersonY. The effect on others will be different", "references": ["none", "has a person watching on himself.", "is being watched."], "input": {"head": "PersonX watches PersonY", "relation": "oEffect"}}
{"generation": "PersonX follows PersonX's instructions. After that, you can use the same method to get the same", "references": ["PersonX gets everything done"], "input": {"head": "PersonX follows PersonX's instructions", "relation": "isBefore"}}
{"generation": "PersonX puts ___ in PersonY's backpack. PersonX will be able to use the backpack to get to the next", "references": ["prepared for the day", "good.", "satisfied"], "input": {"head": "PersonX puts ___ in PersonY's backpack", "relation": "xReact"}}
{"generation": "PersonX is still nervous. After that, he's just trying to get his head around the", "references": ["PersonX talks to the date easing her mind"], "input": {"head": "PersonX is still nervous", "relation": "isBefore"}}
{"generation": "PersonX leaves PersonX's car. The effect on PersonX will be reversed", "references": ["gets parking ticket", "car gets stolen", "forgets to lock the doors", "is lost", "car gets damaged", "gets car stollen"], "input": {"head": "PersonX leaves PersonX's car", "relation": "xEffect"}}
{"generation": "PersonX becomes great. After, others will want to see her", "references": ["none", "to find someone else to idoliza", "to idolize PersonX"], "input": {"head": "PersonX becomes great", "relation": "oWant"}}
{"generation": "PersonX asks PersonY for money. PersonX will be able to pay for the rest of the game", "references": ["thankful", "relief", "grateful"], "input": {"head": "PersonX asks PersonY for money", "relation": "xReact"}}
{"generation": "PersonX would take care of it. After, PersonX will want to know what the hell is going on", "references": ["make a plan", "to handle it", "to carry out a plan", "to make sure it's finished", "call friends", "to rest"], "input": {"head": "PersonX would take care of it", "relation": "xWant"}}
{"generation": "a mexican restaurant can be used for a variety of purposes", "references": ["have a business meeting", "eat out", "food", "drinking marguerita drinks", "meeting latin women", "eat with family", "eating tacos", "make yourself get gas", "trying different", "eating mexican cuisine", "go to and get food and the margaritas", "eating polenta", "drinking tequila", "have all you can eat tacos", "eat at", "ordering spicy food", "eating chilli con carne", "celebrate a birthday", "try to get heartburn", "providing mexicans with rest room", "drink tequila", "enjoy a night out", "host a party", "eating fajitas", "eating nachos", "atmosphere", "have fajitas", "go on a date night", "lspaeking spanish", "figure out how to make your own", "eat tacos"], "input": {"head": "mexican restaurant", "relation": "ObjectUse"}}
{"generation": "PersonX looks ___ in the face. PersonX did this to me", "references": ["he wants to say something", "he like to see", "he want to play"], "input": {"head": "PersonX looks ___ in the face", "relation": "xIntent"}}
{"generation": "PersonX falls on PersonY's neck. As a result, others feel the same way", "references": ["unhappy, sad, angry, frightened", "surprised", "shocked", "pain", "in pain"], "input": {"head": "PersonX falls on PersonY's neck", "relation": "oReact"}}
{"generation": "PersonX lets PersonY explain. PersonX is a bit more complicated than PersonY, but it", "references": ["patient", "polite", "generous", "competent"], "input": {"head": "PersonX lets PersonY explain", "relation": "xAttr"}}
{"generation": "PersonX sends PersonY off. PersonX will be sent to the same location as PersonY", "references": ["sad"], "input": {"head": "PersonX sends PersonY off", "relation": "xReact"}}
{"generation": "PersonX writes music. Before that, he was a musician, and he was a musician", "references": ["PersonX grabs a paper and pencil"], "input": {"head": "PersonX writes music", "relation": "isAfter"}}
{"generation": "PersonX breaks the news. The effect on others will be limited to those who are not affected by the effect", "references": ["none"], "input": {"head": "PersonX breaks the news", "relation": "oEffect"}}
{"generation": "PersonX pulls the ___ open. PersonX is a little confused, but he's not sure what", "references": ["drawer", "efficient", "curious", "excited", "clamshell", "Useful", "gate"], "input": {"head": "PersonX pulls the ___ open", "relation": "xAttr"}}
{"generation": "PersonX understands PersonY's nature. After, PersonX will want to know what PersonX is doing", "references": ["speak for PersonY's mind", "to break up", "to continue the friendship", "become PersonY's best friend", "to know more about himself/herself", "to speculate about others' nature"], "input": {"head": "PersonX understands PersonY's nature", "relation": "xWant"}}
{"generation": "PersonX makes PersonY connection. Before that, you can use PersonX to connect to PersonY", "references": ["PersonX goes on a date"], "input": {"head": "PersonX makes PersonY connection", "relation": "isAfter"}}
{"generation": "PersonX accidentally ran. PersonX is now a member of the team", "references": ["hurried", "careless", "surprised", "confused"], "input": {"head": "PersonX accidentally ran", "relation": "xAttr"}}
{"generation": "PersonX pulls ___ back is filled by the same thing that made him so popular", "references": ["cow", "curtain", "cover", "car", "hair", "cars", "mower", "the drapes", "blanket", "curtains", "sheets", "the rope", "plow", "his hand"], "input": {"head": "PersonX pulls ___ back", "relation": "isFilledBy"}}
{"generation": "PersonX smells something burning. PersonX is a character in the game who is a member of", "references": ["attentive", "worried", "curious", "alert", "worriesome", "guarded"], "input": {"head": "PersonX smells something burning", "relation": "xAttr"}}
{"generation": "PersonX hears a loud bang. Before that, he hears a loud bang", "references": ["PersonX just got home"], "input": {"head": "PersonX hears a loud bang", "relation": "isAfter"}}
{"generation": "anarchist can be found in the following places:\n\nhttp", "references": ["agitate", "carry banner"], "input": {"head": "anarchist", "relation": "CapableOf"}}
{"generation": "PersonX dates for years. The effect on others will be different", "references": ["somebody continues dating PersonX", "none", "someone will feel very warm and happy."], "input": {"head": "PersonX dates for years", "relation": "oEffect"}}
{"generation": "PersonX misses PersonX's dog. After that, PersonX is able to get a dog from Person", "references": ["PersonX retrieves PersonX's dog from the kennel", "PersonX visits an animal shelter"], "input": {"head": "PersonX misses PersonX's dog", "relation": "isBefore"}}
{"generation": "PersonX finishes PersonY's meal. After that, PersonX and PersonY are back together", "references": ["PersonX was very full", "PersonX pays the check for the dinner", "PersonX puts the plate away"], "input": {"head": "PersonX finishes PersonY's meal", "relation": "isBefore"}}
{"generation": "PersonX loves reading books. After, PersonX will want to read a book", "references": ["to read", "write books", "puts finished books on shelf", "sit down", "read books", "buy more books"], "input": {"head": "PersonX loves reading books", "relation": "xWant"}}
{"generation": "PersonX becomes a pilot. PersonX will be able to fly the ship and pilot it", "references": ["accomplished", "talented", "thrilled", "scared", "competent", "learned", "satisfied"], "input": {"head": "PersonX becomes a pilot", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["feels very tired and worn out", "PersonX's mom was yelling at them to come home.", "PersonX sprained their ankle.", "has developed a cramp and can't cpontinue", "The instrument needs to be retuned.", "The gym is closing"], "input": {"head": "PersonX keeps practicing", "relation": "HinderedBy"}}
{"generation": "PersonX dies peacefully. After, PersonX will want to kill PersonX", "references": ["to have a funeral", "to be buried", "to be remembered", "to rest in peace"], "input": {"head": "PersonX dies peacefully", "relation": "xWant"}}
{"generation": "PersonX eats ___ very quickly. After, PersonX will want to eat ___ very quickly", "references": ["to rest and relax", "To order another pie", "to lay down", "to wash their hands", "to slow down and enjoy it", "To wash dishes"], "input": {"head": "PersonX eats ___ very quickly", "relation": "xWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has no knowledge of how to make lasagna.", "PersonX doesn't know how to cook", "PersonX has no lasagna noodles.", "PersonX is a terrible cook.", "PersonX isn't allowed to operate the oven", "PersonX's oven is broken."], "input": {"head": "PersonX makes lasagna", "relation": "HinderedBy"}}
{"generation": "a balcony can be used for a short time", "references": ["enjoy evening outdoors", "yell at neighbor", "viewing resting or eating at", "keeping from falling"], "input": {"head": "balcony", "relation": "ObjectUse"}}
{"generation": "PersonX pulls PersonX's socks up. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX pulls PersonX's socks up", "relation": "oEffect"}}
{"generation": "PersonX goes to an amusement park. After that, he goes to the park to meet with the other", "references": ["PersonX rides a roller coaster"], "input": {"head": "PersonX goes to an amusement park", "relation": "isBefore"}}
{"generation": "PersonX burns badly. Before, PersonX needs to be able to do something about the fact that he", "references": ["to have an accident", "to touch something hot", "to touch the stove", "to reach for the stove", "none"], "input": {"head": "PersonX burns badly", "relation": "xNeed"}}
{"generation": "PersonX swings the bat. PersonX will be able to use the bat to attack PersonX", "references": ["hopeful", "athletic", "great"], "input": {"head": "PersonX swings the bat", "relation": "xReact"}}
{"generation": "PersonX buys PersonY's one. After, others will want to buy PersonX's one", "references": ["Receive money", "to thank him", "thank them", "Transfer item", "to try it out", "to use it"], "input": {"head": "PersonX buys PersonY's one", "relation": "oWant"}}
{"generation": "PersonX is a big success. After that, I was able to get a lot of people to", "references": ["PersonX signs a record deal"], "input": {"head": "PersonX is a big success", "relation": "isBefore"}}
{"generation": "PersonX smells nice. The effect on PersonX will be similar to that of a perfume", "references": ["has good hygeine", "none", "is acceptable to go out in public"], "input": {"head": "PersonX smells nice", "relation": "xEffect"}}
{"generation": "PersonX goes to bed early. After that, he goes to sleep", "references": ["PersonX fells refreshed when they wake up in the morning", "PersonX heals overnight"], "input": {"head": "PersonX goes to bed early", "relation": "isBefore"}}
{"generation": "PersonX runs PersonY's fingers through PersonY's hair. Before that, she's just a little girl", "references": ["PersonX invites their partner over", "PersonX hugs PersonY close"], "input": {"head": "PersonX runs PersonY's fingers through PersonY's hair", "relation": "isAfter"}}
{"generation": "PersonX finds a good one. PersonX will be able to use the same abilities as the other characters", "references": ["excited and happy", "excited."], "input": {"head": "PersonX finds a good one", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have a hat.", "The hat shrank in the wash", "PersonX's hat doesn't fit them anymore.", "Their head go too fat", "The hat is far too small.", "PersonX can't wear a hat at work."], "input": {"head": "PersonX puts on PersonX's hat", "relation": "HinderedBy"}}
{"generation": "PersonX makes ___ the other day. After, PersonX will want to know what you're doing", "references": ["to eat", "to sell the table they made", "Tell her how to make it.", "Give her the ingredients.", "to wash dishes", "to shout and yell", "to wear what they made"], "input": {"head": "PersonX makes ___ the other day", "relation": "xWant"}}
{"generation": "PersonX catches some rays. PersonX did this to me", "references": ["a tan"], "input": {"head": "PersonX catches some rays", "relation": "xIntent"}}
{"generation": "PersonX passionately rucked PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["to be affectionate"], "input": {"head": "PersonX passionately rucked PersonY", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's friend has PersonX's watch.", "PersonX does not know how to tell time.", "PersonX has lost their watch.", "PersonX's teacher took their watch away.", "PersonX phone died.", "PersonX left calendar at home.", "PersonX has to keep working.", "PersonX has no time to spare."], "input": {"head": "PersonX gives the time of day", "relation": "HinderedBy"}}
{"generation": "PersonX sees every ___. PersonX did this to me", "references": ["collect a things"], "input": {"head": "PersonX sees every ___", "relation": "xIntent"}}
{"generation": "PersonX pumps PersonX's gas. Before that, you can pump PersonX's gas", "references": ["PersonX pulls into the station", "PersonX is a gas station attendant"], "input": {"head": "PersonX pumps PersonX's gas", "relation": "isAfter"}}
{"generation": "Sometimes bad weather causes a lot of damage to the car, and the", "references": ["power outages"], "input": {"head": "bad weather", "relation": "Causes"}}
{"generation": "PersonX tells PersonY had a surprise. PersonX is a very nice guy, but he's not a", "references": ["absentminded", "careless", "spontaneous", "exciting"], "input": {"head": "PersonX tells PersonY had a surprise", "relation": "xAttr"}}
{"generation": "PersonX is a long drive. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX is a long drive", "relation": "xIntent"}}
{"generation": "PersonX asks PersonY to pray. As a result, others feel that they are being punished for their actions", "references": ["hopeful", "happy", "content", "overwhelmed", "empathetic"], "input": {"head": "PersonX asks PersonY to pray", "relation": "oReact"}}
{"generation": "PersonX uses ___ regularly. As a result, others feel that he is a bad person", "references": ["none"], "input": {"head": "PersonX uses ___ regularly", "relation": "oReact"}}
{"generation": "PersonX wants to learn how to sew. PersonX is a very good person, but he's not a", "references": ["curious", "detailed", "Learner", "Curious", "Dedicated", "studious", "creative"], "input": {"head": "PersonX wants to learn how to sew", "relation": "xAttr"}}
{"generation": "PersonX wipes the ___ from PersonY's forehead. Before, PersonX needs to be able to use the same abilities as PersonY", "references": ["take out his hanky", "to to find a towel", "to pull out a hankie.", "to go near him", "to get a tissue", "to reach over to Person Y's forehead."], "input": {"head": "PersonX wipes the ___ from PersonY's forehead", "relation": "xNeed"}}
{"generation": "PersonX finds PersonX's father. After, others will want to know who the father is", "references": ["Explain why he was gone.", "to get to know PersonX", "Assure Person x that he is ok.", "to explain to PersonX"], "input": {"head": "PersonX finds PersonX's father", "relation": "oWant"}}
{"generation": "PersonX gets the stain out. PersonX is a bit of a jerk, but he's a", "references": ["skillful", "efficient", "Clean", "Active", "competent", "determinded"], "input": {"head": "PersonX gets the stain out", "relation": "xAttr"}}
{"generation": "PersonX makes much sense. PersonX is a character who is a bit of a jerk,", "references": ["smart", "simple", "reasonable", "conversational", "intelligent"], "input": {"head": "PersonX makes much sense", "relation": "xAttr"}}
{"generation": "PersonX grows close. Before that, he's a little bit more of a jerk", "references": ["PersonX finds a stray cat"], "input": {"head": "PersonX grows close", "relation": "isAfter"}}
{"generation": "PersonX finishes the test. After, others will want to know what the test is about", "references": ["none"], "input": {"head": "PersonX finishes the test", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["A looming deadline will interrupt this period", "PersonX is too old to plan for the long term"], "input": {"head": "PersonX takes place over a period", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is far away from PersonY", "PersonX cannot find PersonY\u2019s phone.", "PersonY has hidden their phone.", "PersonY's phone fell in the waters.", "PersonY will not let PersonX near them.", "PersonX  doesn't  know how to use PersonY's smart phone.", "PersonY has their phone locked away"], "input": {"head": "PersonX takes PersonY's phone", "relation": "HinderedBy"}}
{"generation": "PersonX has to cancel PersonX's plans. After, PersonX will want to cancel PersonX's plans", "references": ["to delete their appointments", "to reschedule the original activity", "to do the thing she had to cancel her plans to do", "to do something else", "to open their calendar", "to just be alone", "to alert the people"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xWant"}}
{"generation": "PersonX renews ___ by day. PersonX did this to me", "references": ["to renew something.", "to have energy for the day."], "input": {"head": "PersonX renews ___ by day", "relation": "xIntent"}}
{"generation": "PersonX gets the milk. PersonX did this to me", "references": ["to quince thirst", "to make something", "milk", "to be relaxed", "to eat it with cookies", "to drink something"], "input": {"head": "PersonX gets the milk", "relation": "xIntent"}}
{"generation": "PersonX takes PersonY to the game. Before that, you can use PersonX to get the game to", "references": ["PersonX wanted to go to the game"], "input": {"head": "PersonX takes PersonY to the game", "relation": "isAfter"}}
{"generation": "PersonX wants to dance. After that, he's going to have to get his ass kicked", "references": ["PersonX goes out to show off PersonX's moves"], "input": {"head": "PersonX wants to dance", "relation": "isBefore"}}
{"generation": "PersonX uses the ___ to describe. After, PersonX will want to know what the ___ is", "references": ["to describe the words", "to describe the feelings", "to ask for questions from anyone", "to ask if someone comprehends", "to pack up his materials, pen, pointer, briefcase, etc.", "to continue describing something"], "input": {"head": "PersonX uses the ___ to describe", "relation": "xWant"}}
{"generation": "PersonX finds PersonY another table. Before that, she finds PersonZ", "references": ["PersonX leads PersonY to an already reserved table"], "input": {"head": "PersonX finds PersonY another table", "relation": "isAfter"}}
{"generation": "PersonX finds a pay phone. Before, PersonX needs to pay for a new phone", "references": ["to look for a pay phone", "to have there eyes open", "to decide to call someone", "To scan their surrondings", "none"], "input": {"head": "PersonX finds a pay phone", "relation": "xNeed"}}
{"generation": "PersonX meets PersonY at the gym. PersonX is a very nice guy, but PersonY is a", "references": ["Outgoing", "athletic", "althetic", "Friendly", "reliable", "healthy"], "input": {"head": "PersonX meets PersonY at the gym", "relation": "xAttr"}}
{"generation": "While touch, you would be able to see the difference between the two", "references": ["get excited"], "input": {"head": "touch", "relation": "HasSubEvent"}}
{"generation": "PersonX shares the ___ equally. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX shares the ___ equally", "relation": "oEffect"}}
{"generation": "PersonX borrows PersonY's car. As a result, others feel that they are being robbed", "references": ["none", "relieved", "helpful"], "input": {"head": "PersonX borrows PersonY's car", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's nose is clogged.", "PersonX lost their sense of smell after drinking bleach.", "PersonX's nose is blocked", "PersonX has uncommonly congested cold.", "PersonX's allergies caused congestion.", "PersonX is sick and has trouble smelling", "There are too many smells in the room currently", "PersonX has allergies"], "input": {"head": "PersonX notices a strange smell", "relation": "HinderedBy"}}
{"generation": "PersonX sneaks around. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX sneaks around", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't want to come off too strongly.", "PersonX is not familiar enough with the issue to take a position", "PersonX doesn't want to seem pushy", "PersonX is new to the company and has to earn their place", "PersonX doesn't have much influence", "PersonX doesn't want to hurt their feelings."], "input": {"head": "PersonX exerts PersonX's influence", "relation": "HinderedBy"}}
{"generation": "hole is a very good idea to use a small amount of", "references": ["one", "dark", "filled with air"], "input": {"head": "hole", "relation": "HasProperty"}}
{"generation": "PersonX hangs PersonX's clothes. As a result, others feel that PersonX is a bad person", "references": ["none"], "input": {"head": "PersonX hangs PersonX's clothes", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX gained weight since purchasing the dress.", "PersonX's jeans would look terrible with a dress.", "The prom dress has been cut to pieces.", "PersonX's earrings don't match the dress."], "input": {"head": "PersonX wears with PersonX's prom dress", "relation": "HinderedBy"}}
{"generation": "a lidocaine can be used for treating a variety of conditions including:\n\nAn", "references": ["stop heart arrhythmia"], "input": {"head": "lidocaine", "relation": "ObjectUse"}}
{"generation": "PersonX hangs PersonX's ___ in shame. PersonX will be punished for the offense", "references": ["remorseful", "sad", "shameful", "annoyed", "bad", "unhappy", "upset"], "input": {"head": "PersonX hangs PersonX's ___ in shame", "relation": "xReact"}}
{"generation": "PersonX leaves ___ in PersonX's car. PersonX did this to her", "references": ["to keep something safe"], "input": {"head": "PersonX leaves ___ in PersonX's car", "relation": "xIntent"}}
{"generation": "PersonX throws ___ in the garbage is filled by the same person who threw the ___ in the garbage", "references": ["plates", "food", "bottles", "bananas", "tickets", "fruit", "jars", "waste", "trash", "receipts", "boxes"], "input": {"head": "PersonX throws ___ in the garbage", "relation": "isFilledBy"}}
{"generation": "PersonX gets PersonY's driver's license. PersonX is the driver of PersonY's car", "references": ["Helpful", "prepared", "caring", "responsible", "Kind", "considerate"], "input": {"head": "PersonX gets PersonY's driver 's license", "relation": "xAttr"}}
{"generation": "PersonX makes ___ the other day. PersonX did this to me", "references": ["to have something for themselves", "to enjoy it."], "input": {"head": "PersonX makes ___ the other day", "relation": "xIntent"}}
{"generation": "PersonX starts singing. After that, he starts singing again", "references": ["PersonX stops singing"], "input": {"head": "PersonX starts singing", "relation": "isBefore"}}
{"generation": "PersonX calls an ambulance. The effect on others will be similar to that of a car accident", "references": ["none"], "input": {"head": "PersonX calls an ambulance", "relation": "oEffect"}}
{"generation": "PersonX sees where PersonY was going. Before, PersonX needs to know who the other person is", "references": ["to observe PersonY", "look at map", "see PersonY", "to be aware of where PersonY is"], "input": {"head": "PersonX sees where PersonY was going", "relation": "xNeed"}}
{"generation": "PersonX plays many sports. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX plays many sports", "relation": "oEffect"}}
{"generation": "PersonX is happy for PersonY. After, PersonX will want to know who is the best person to be with", "references": ["Try to accomplish their own goals", "to congratulate PersonY", "to wish PersonY best of luck", "to hug PersonY", "Hug PersonY", "Congratulate PersonY", "to celebrate with PersonY"], "input": {"head": "PersonX is happy for PersonY", "relation": "xWant"}}
{"generation": "PersonX asks ___ for money. PersonX is a very nice guy, but he's not a", "references": ["entitled", "greedy", "down and out", "needy", "in need"], "input": {"head": "PersonX asks ___ for money", "relation": "xAttr"}}
{"generation": "PersonX sees all of the animals. Before that, he's just a normal human", "references": ["PersonX visits the zoo", "PersonX goes to the zoo with their friend", "PersonX went to the zoo"], "input": {"head": "PersonX sees all of the animals", "relation": "isAfter"}}
{"generation": "PersonX waits tables. PersonX is a member of the class PersonX", "references": ["dutiful", "hard working", "dependable", "responsible", "determined"], "input": {"head": "PersonX waits tables", "relation": "xAttr"}}
{"generation": "PersonX feels lucky. The effect on PersonX will be similar to that of a normal person", "references": ["gambles", "none", "buys a lottery ticket"], "input": {"head": "PersonX feels lucky", "relation": "xEffect"}}
{"generation": "PersonX busts a nut. PersonX did this to me", "references": ["feel good", "to achieve"], "input": {"head": "PersonX busts a nut", "relation": "xIntent"}}
{"generation": "PersonX gets a call. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX gets a call", "relation": "xIntent"}}
{"generation": "PersonX takes the offer. After, others will want to know what the deal is", "references": ["shake hands", "none", "congratulate"], "input": {"head": "PersonX takes the offer", "relation": "oWant"}}
{"generation": "PersonX spends a lot of money. Before that, he was a very good player", "references": ["PersonX goes to the mall"], "input": {"head": "PersonX spends a lot of money", "relation": "isAfter"}}
{"generation": "PersonX breaks the news. Before that, he says, \"I'm not going to be", "references": ["PersonX reads from the teleprompter"], "input": {"head": "PersonX breaks the news", "relation": "isAfter"}}
{"generation": "PersonX is watching a scary movie. After, others will want to see it", "references": ["none"], "input": {"head": "PersonX is watching a scary movie", "relation": "oWant"}}
{"generation": "PersonX gets something to eat. PersonX will be able to eat anything", "references": ["satisfied, full", "satiated"], "input": {"head": "PersonX gets something to eat", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["There are no diners around PersonX to work in.", "PersonX needs to go to work.", "the diner owner doesn't like person x", "No diners will hire PersonX.", "PersonX goes to boarding school.", "the mayor ordered all restaurants closed", "PersonX is a toddler.", "PersonX has school."], "input": {"head": "PersonX is working at a diner", "relation": "HinderedBy"}}
{"generation": "PersonX supplies PersonY with information. After that, PersonY will be able to use PersonX's", "references": ["PersonX counts the money happily"], "input": {"head": "PersonX supplies PersonY with information", "relation": "isBefore"}}
{"generation": "PersonX falls from grace. After, PersonX will want to be a part of the team", "references": ["to do better", "to regain position", "to get back up", "to land safely", "help", "to be forgiven", "to regain his credibility", "to mend his ways"], "input": {"head": "PersonX falls from grace", "relation": "xWant"}}
{"generation": "PersonX takes it to the vet. After that, he takes it to the hospital", "references": ["PersonX saves the dog's life", "PersonX takes the puppy home", "PersonX gives the dog the prescribed medication"], "input": {"head": "PersonX takes it to the vet", "relation": "isBefore"}}
{"generation": "PersonX visits every ___. PersonX will be the first person to visit the ___", "references": ["happy"], "input": {"head": "PersonX visits every ___", "relation": "xReact"}}
{"generation": "PersonX opens PersonX's ___ to speak. PersonX is a very smart person, and he's very good", "references": ["expressive", "loud", "talkative", "vocal", "prepared", "joyful", "certain"], "input": {"head": "PersonX opens PersonX's ___ to speak", "relation": "xAttr"}}
{"generation": "PersonX leaned back in PersonY's chair. After that, she leaned back in the chair", "references": ["PersonX almost falls off the chair"], "input": {"head": "PersonX leaned back in PersonY's chair", "relation": "isBefore"}}
{"generation": "cry for help can be found here", "references": ["go unanswered"], "input": {"head": "cry for help", "relation": "CapableOf"}}
{"generation": "PersonX consolidates PersonX's position. After, others will want to know who is the best person to be with", "references": ["to make more money", "to help things out", "to do their job good as well", "to find a new job", "none"], "input": {"head": "PersonX consolidates PersonX's position", "relation": "oWant"}}
{"generation": "PersonX feels ashamed. The effect on others will be felt by the player", "references": ["forgive", "become disappointed in PersonY"], "input": {"head": "PersonX feels ashamed", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX has a deadline that must be met.", "PersonX's husband's plane was delayed", "PersonX's meeting is longer than expected and they can't leave.", "PersonX's husband is stuck in another town during a storm"], "input": {"head": "PersonX meets PersonX's husband", "relation": "HinderedBy"}}
{"generation": "PersonX describes every ___. After, others will want to know what the ___", "references": ["none"], "input": {"head": "PersonX describes every ___", "relation": "oWant"}}
{"generation": "PersonX takes a ride. The effect on PersonX will be similar to that of a normal person", "references": ["becomes nauseous", "has arrived somewhere", "experiences motion sickness", "gets in an accident"], "input": {"head": "PersonX takes a ride", "relation": "xEffect"}}
{"generation": "PersonX is really sad. The effect on PersonX will be very small", "references": ["becomes anxious", "eyes water"], "input": {"head": "PersonX is really sad", "relation": "xEffect"}}
{"generation": "PersonX attention whores. After, PersonX will want to know who you are and what you're doing", "references": ["to be the center of the attraction", "to say they are popular", "people to look at her", "to make sure everyone knows they are there", "to talk to everyone by force"], "input": {"head": "PersonX attention whores", "relation": "xWant"}}
{"generation": "PersonX sends ___ home. Before, PersonX needs to get a new phone number", "references": ["to see the doctors note", "pack something", "go to post office", "to monitor the weather", "to love their parents", "none"], "input": {"head": "PersonX sends ___ home", "relation": "xNeed"}}
{"generation": "PersonX quits the next day. Before that, he's been working on a new game, and", "references": ["PersonX argues with a co-worker in the office", "PersonX gets yelled at by boss for making a mistake", "PersonX makes a big mistake at work"], "input": {"head": "PersonX quits the next day", "relation": "isAfter"}}
{"generation": "PersonX is really disappointed. The effect on PersonX will be very noticeable", "references": ["shakes their head in disbelief", "cries", "sighs deeply", "frowns", "want's to do better", "sulks"], "input": {"head": "PersonX is really disappointed", "relation": "xEffect"}}
{"generation": "PersonX wouldnt hurts a fly. As a result, others feel that the game is too easy", "references": ["happy", "none", "safe"], "input": {"head": "PersonX wouldnt hurts a fly", "relation": "oReact"}}
{"generation": "PersonX sees what was going on. After, others will want to know what happened", "references": ["to interact with PersonX", "to ignore PersonX", "to know why person x cares about whats going on", "to know how much person x knows", "none"], "input": {"head": "PersonX sees what was going on", "relation": "oWant"}}
{"generation": "PersonX gets dressed for school. After, others will want to see her", "references": ["to help PersonX get ready", "to hurry PersonX along"], "input": {"head": "PersonX gets dressed for school", "relation": "oWant"}}
{"generation": "PersonX gets a manicure. Before that, she's got a manicure", "references": ["PersonX breaks a nail"], "input": {"head": "PersonX gets a manicure", "relation": "isAfter"}}
{"generation": "PersonX steals anything. The effect on PersonX will be the same as the effect on Person X", "references": ["gets arrested", "is fined", "arrested", "Serves time", "jailed", "Goes to jail"], "input": {"head": "PersonX steals anything", "relation": "xEffect"}}
{"generation": "a clawhammer can be used for a number of reasons", "references": ["hurt someone", "tap the nail with", "split lumber", "remove nail", "use as a caulking gun", "pull out a nail", "hit the bad guy", "build the fence", "murder someone", "measure on the fly", "hold something down with", "break ice"], "input": {"head": "clawhammer", "relation": "ObjectUse"}}
{"generation": "a kettle can be used for a variety of purposes, including:\n\n\u2022", "references": ["hold placed over fire", "make stew", "steam open an envelope", "put water in", "make water hot", "boiling water", "boil water in", "fill cup with hot water", "boil the water", "making tea", "boil water for tea", "cook soup", "boil water", "heating water", "boil up for tea", "use as a prop", "prepare tea", "store items in", "take off of the burner", "heat water", "hold", "wash hands", "water", "carry water", "boil potpurri to scent the house", "add more water to the cup", "hold liquid", "create a meal", "heat water over fire", "boil it", "heat the liquid", "make kettle corn", "boil"], "input": {"head": "kettle", "relation": "ObjectUse"}}
{"generation": "PersonX represents PersonY increase. PersonX will be the number of characters in the string", "references": ["happy"], "input": {"head": "PersonX represents PersonY increase", "relation": "xReact"}}
{"generation": "PersonX puts ___ on PersonY's shoulders. After, PersonX will want to know what's going on", "references": ["to tell PersonY they did a good job", "to say sorry", "to hug PersonY", "to help PersonY", "to tell PersonY that everything is going to be ok", "to leave"], "input": {"head": "PersonX puts ___ on PersonY's shoulders", "relation": "xWant"}}
{"generation": "PersonX arrives at PersonX's destination. After, PersonX will want to talk to PersonX about the situation", "references": ["to get out of the car", "to take rest", "to check all luggages", "to go on to her next destination.", "to go inside", "to do what she went there to do."], "input": {"head": "PersonX arrives at PersonX's destination", "relation": "xWant"}}
{"generation": "PersonX hears a loud bang. After that, he hears a loud bang", "references": ["PersonX someone got in a wreck outside"], "input": {"head": "PersonX hears a loud bang", "relation": "isBefore"}}
{"generation": "PersonX spends the rest of my life with PersonY. After that, I'm a little bit more of a \"friend", "references": ["PersonX dies of old age"], "input": {"head": "PersonX spends the rest of my life with PersonY", "relation": "isBefore"}}
{"generation": "PersonX wins every ___. After, PersonX will want to know who is the winner of the game", "references": ["to win everything", "to celebrate", "to take a vacation", "to retire", "to win the medal", "to be known by everybody"], "input": {"head": "PersonX wins every ___", "relation": "xWant"}}
{"generation": "PersonX meets the user's ___. PersonX did this to me", "references": ["none", "qualification"], "input": {"head": "PersonX meets the user 's ___", "relation": "xIntent"}}
{"generation": "PersonX makes a salad. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX makes a salad", "relation": "oEffect"}}
{"generation": "You are likely to find a populace in a state of shock", "references": ["country"], "input": {"head": "populace", "relation": "AtLocation"}}
{"generation": "PersonX offer ___ to god is filled by a god", "references": ["money", "goat", "blood", "fruit"], "input": {"head": "PersonX offer ___ to god", "relation": "isFilledBy"}}
{"generation": "PersonX loses 100 pounds. PersonX is now a full-time employee of the company", "references": ["motivated", "engaged", "inspired", "determined"], "input": {"head": "PersonX loses 100 pounds", "relation": "xAttr"}}
{"generation": "PersonX spills PersonX's guts. After that, he's a little bit more of a jerk", "references": ["PersonX waits for a response from PersonY"], "input": {"head": "PersonX spills PersonX's guts", "relation": "isBefore"}}
{"generation": "PersonX appoints a ___ to investigate. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is a person on TV that PersonX will never know.", "PersonY is a celebrity and PersonX is a prisoner", "PersonX does not have the proper education.", "PersonY isn't aware PersonX even exists", "PersonX lives too far away from PersonY.", "PersonX lives too far away."], "input": {"head": "PersonX affects PersonY's lives", "relation": "HinderedBy"}}
{"generation": "PersonX shares PersonX's experience. PersonX will be able to share the same information about the person you", "references": ["that he had made an impact on the younger employees", "happy", "good about themselves", "happy.", "satisfied"], "input": {"head": "PersonX shares PersonX's experience", "relation": "xReact"}}
{"generation": "PersonX puts PersonY's head down. Before that, he's just a normal person", "references": ["PersonX notices PersonY looking around"], "input": {"head": "PersonX puts PersonY's head down", "relation": "isAfter"}}
{"generation": "PersonX buys a car. Before, PersonX needs to buy a car", "references": ["to go to the dealership", "to shop for cars", "to obtain financing", "money", "shoes", "to save money", "to go for a test drive", "to save the money"], "input": {"head": "PersonX buys a car", "relation": "xNeed"}}
{"generation": "PersonX gives a small smile. After, others will want to know what he's doing", "references": ["none"], "input": {"head": "PersonX gives a small smile", "relation": "oWant"}}
{"generation": "PersonX loves the ___ with all PersonX's heart. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX loves the ___ with all PersonX's heart", "relation": "oReact"}}
{"generation": "PersonX chews the cud. The effect on others will be similar", "references": ["none"], "input": {"head": "PersonX chews the cud", "relation": "oEffect"}}
{"generation": "PersonX says would leave. After that, he says he'll leave", "references": ["PersonX leaves on time"], "input": {"head": "PersonX says would leave", "relation": "isBefore"}}
{"generation": "PersonX shows every ___ is filled by a ___", "references": ["hat", "monitor", "scarf", "skirt", "lens", "dress", "dog"], "input": {"head": "PersonX shows every ___", "relation": "isFilledBy"}}
{"generation": "PersonX takes place over a period. PersonX will be a character in the game", "references": ["responsible"], "input": {"head": "PersonX takes place over a period", "relation": "xReact"}}
{"generation": "PersonX looks like figure. After, PersonX will want to know who you are", "references": ["to study their similarities", "to look sexy", "to look closely at the figure", "to be conscious of apperance", "to look at themselves in the mirror", "to change how they look"], "input": {"head": "PersonX looks like figure", "relation": "xWant"}}
{"generation": "PersonX doesn't want to waste it. PersonX did this to me", "references": ["to be frugal", "to conserve", "to do the right thing"], "input": {"head": "PersonX does n't want to waste it", "relation": "xIntent"}}
{"generation": "PersonX sees all the animals. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sees all the animals", "relation": "oEffect"}}
{"generation": "PersonX pulls the ___ open. Before, PersonX needs to be able to open the ___, but now he", "references": ["pull down", "to go to the door", "to touch the door", "to hear a knock on the door", "stretch out hand"], "input": {"head": "PersonX pulls the ___ open", "relation": "xNeed"}}
{"generation": "PersonX attention whores. PersonX is a very good person, but they are not the", "references": ["extraverted", "bold", "calm", "needy", "beauty", "outspoken"], "input": {"head": "PersonX attention whores", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX needs to stay at home to entertain friends.", "there is a restraining order against PersonX", "PersonY is busy", "PersonX has to work", "PersonY is out of town", "PersonY isn't in town."], "input": {"head": "PersonX sees PersonY tonight", "relation": "HinderedBy"}}
{"generation": "PersonX serves in the army. After that, he is a member of the military", "references": ["PersonX serves for 10 years"], "input": {"head": "PersonX serves in the army", "relation": "isBefore"}}
{"generation": "PersonX makes bread. The effect on others will be similar to that of a normal bread", "references": ["none"], "input": {"head": "PersonX makes bread", "relation": "oEffect"}}
{"generation": "a filter can be used for the following:\n\nThe filter can be used", "references": ["put into the car", "place under furniture for easier moving", "pour the coffee grounds into", "clean mirrors", "scrub a mirror", "trap grounded beans", "keep the water clean", "insert into window frame", "clean liquid", "hold the coffee grounds", "sew into skirt", "change and make a fresh pot", "remove the grounds", "make the photo look good", "strain the beans", "fill with grounds", "clean windows", "for crafting paper flowers", "clean the water", "put in the machine"], "input": {"head": "filter", "relation": "ObjectUse"}}
{"generation": "PersonX continues driving. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX continues driving", "relation": "oWant"}}
{"generation": "goalie can't be a good player", "references": ["clear crease", "head ball"], "input": {"head": "goalie", "relation": "CapableOf"}}
{"generation": "a wheelbarrow can be used for a variety of purposes", "references": ["plant flowers", "moving heavy loads", "carry manure away from barn", "put dirt in", "put rocks and unwanted sod in", "move wood", "move dirt", "carry heavy items", "move rocks around", "Gather limb", "have a race in", "Carry bricks to a new area", "carry firewood", "transport the stumps with", "run over someone with", "put the dirt in", "clean a horse stall", "give someone a ride in"], "input": {"head": "wheelbarrow", "relation": "ObjectUse"}}
{"generation": "PersonX puts PersonY to use. After, PersonX will want to use PersonY to get the next person", "references": ["for PersonY to show generosity", "correct PersonY", "watch PersonY", "to relieve responsibilities"], "input": {"head": "PersonX puts PersonY to use", "relation": "xWant"}}
{"generation": "PersonX slams dunk. After, PersonX will want to get a dunk", "references": ["score", "to win the game", "get back on defense", "to continue practicing", "run back to the game", "celebrate"], "input": {"head": "PersonX slams dunk", "relation": "xWant"}}
{"generation": "PersonX flies to PersonY. The effect on PersonX will be the same as the effect on PersonY", "references": ["spends money", "is hugged", "is kissed", "none", "tired"], "input": {"head": "PersonX flies to PersonY", "relation": "xEffect"}}
{"generation": "PersonX plays lots of games. After that, he's a bit of a jerk", "references": ["PersonX taps his friend on the shoulder to ask to play one"], "input": {"head": "PersonX plays lots of games", "relation": "isBefore"}}
{"generation": "PersonX makes PersonY's day. As a result, others feel that they are being treated unfairly", "references": ["loved and wanted", "cared for", "very pleased.", "loved"], "input": {"head": "PersonX makes PersonY's day", "relation": "oReact"}}
{"generation": "PersonX calls PersonY this morning. As a result, others feel the same way", "references": ["happy", "informed", "connected"], "input": {"head": "PersonX calls PersonY this morning", "relation": "oReact"}}
{"generation": "PersonX tries sushi. PersonX will be able to eat sushi", "references": ["excited they branched out", "interested", "pleased", "delighted", "adventurous", "disgusted"], "input": {"head": "PersonX tries sushi", "relation": "xReact"}}
{"generation": "PersonX wouldn't work. The effect on PersonX will be the same as the effect on PersonX", "references": ["gets unemployment insurance", "gets evicted", "Lost all savings", "Gained weight"], "input": {"head": "PersonX would n't work", "relation": "xEffect"}}
{"generation": "PersonX achieves PersonX's purpose. PersonX did this to make PersonX a better person", "references": ["to show off skills", "to achieve his goal", "to control his fate"], "input": {"head": "PersonX achieves PersonX's purpose", "relation": "xIntent"}}
{"generation": "PersonX reminds PersonX of PersonY. PersonX did this to PersonY, and PersonY did this to Person", "references": ["him not to forget important moments", "him to join without fear"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "xIntent"}}
{"generation": "PersonX takes ___ of things. Before, PersonX needs to be able to use ___ to get things", "references": ["have something that needs tending", "to have urge to tend to something", "to assess the situation", "none", "to determine the right solution"], "input": {"head": "PersonX takes ___ of things", "relation": "xNeed"}}
{"generation": "a reception desk can be used for a variety of purposes, including:\n\n-", "references": ["greeting people", "scheduling appointments", "secretary", "registration", "journal arrivals", "information", "meeting visitors to company", "controlling access to person", "politely stopping salespeople", "routing telephone calls", "answering incoming calls", "answer incoming calls", "providing information to visitors"], "input": {"head": "reception desk", "relation": "ObjectUse"}}
{"generation": "PersonX helps PersonY in PersonZ way. After that, PersonY can use PersonX to help PersonZ", "references": ["PersonX received thanks from PersonZ"], "input": {"head": "PersonX helps PersonY in PersonZ way", "relation": "isBefore"}}
{"generation": "PersonX hears a phone ring. PersonX is in the middle of a long hallway, and he", "references": ["attentive", "questioning", "keen", "curious", "good of hearing", "sensory smart"], "input": {"head": "PersonX hears a phone ring", "relation": "xAttr"}}
{"generation": "PersonX saves PersonY's ___ from PersonX's sins. Before, PersonX needs to save PersonY's ___ from PersonX's sins", "references": ["to go to personY's families house", "to tell them what personY is doing", "to lead them in prayer", "to bring them to church", "none"], "input": {"head": "PersonX saves PersonY's ___ from PersonX's sins", "relation": "xNeed"}}
{"generation": "PersonX gets PersonX's belly button pierced. After that, PersonX gets a new one", "references": ["PersonX experiences a belly button infection"], "input": {"head": "PersonX gets PersonX's belly button pierced", "relation": "isBefore"}}
{"generation": "PersonX takes PersonY place. As a result, others feel that PersonX is a better fit for PersonY", "references": ["relieved that they could stay home", "none", "grateful"], "input": {"head": "PersonX takes PersonY place", "relation": "oReact"}}
{"generation": "PersonX gets knocked out. PersonX is then knocked out by the other two", "references": ["a victim", "hurting", "unconscious", "hurt", "Untalented", "Untrained"], "input": {"head": "PersonX gets knocked out", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's son ran the car out of gas the night before.", "the car broke down", "There is a hurricane coming.", "PersonX is stuck in a traffic.", "there is a multi car accident blocking the road", "PersonX hits a person on the way.", "the flight was delayed", "the roads are flooded due to a storm", "Somebody crashed into PersonX's car.", "PersonX was stopped by a policeman.", "PersonX cannot take a day off from work."], "input": {"head": "PersonX arrives at PersonX's destination", "relation": "HinderedBy"}}
{"generation": "PersonX reproduces this ___ regardless. PersonX is a very good programmer, and I'm sure he", "references": ["clever", "Determined", "efficient", "committed", "insistent", "competent"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "xAttr"}}
{"generation": "PersonX sees a pretty girl. As a result, others feel that she is a bit too cute", "references": ["happy.", "self conscious", "admired", "bashful"], "input": {"head": "PersonX sees a pretty girl", "relation": "oReact"}}
{"generation": "PersonX is as good as new. After that, I'm going to be using the same thing I", "references": ["PersonX completes a lot of tasks", "PersonX goes home to greet family and friends", "PersonX gets hit by car walking home"], "input": {"head": "PersonX is as good as new", "relation": "isBefore"}}
{"generation": "PersonX links together the ___. The effect on others will be the same", "references": ["none"], "input": {"head": "PersonX links together the ___", "relation": "oEffect"}}
{"generation": "PersonX takes a stand. Before, PersonX needs to be able to talk to people", "references": ["to gather the courage", "to feel like they need to"], "input": {"head": "PersonX takes a stand", "relation": "xNeed"}}
{"generation": "PersonX bosses ___ around. The effect on PersonX will be similar to the effect on the boss of the same", "references": ["doesn't make lots of friends", "is known to be mean"], "input": {"head": "PersonX bosses ___ around", "relation": "xEffect"}}
{"generation": "PersonX finishes the test. PersonX will be able to see the results of the test and will", "references": ["weary and tired", "eager."], "input": {"head": "PersonX finishes the test", "relation": "xReact"}}
{"generation": "PersonX really looking forward. After that, I'm going to be doing a lot of work", "references": ["PersonX sits in the front row of theater"], "input": {"head": "PersonX really looking forward", "relation": "isBefore"}}
{"generation": "PersonX renews ___ by day. After, PersonX will want to renew by night", "references": ["to heal themselves more", "own many returned customers", "attract a lot of customers", "to look good.", "to get strong", "to feel good."], "input": {"head": "PersonX renews ___ by day", "relation": "xWant"}}
{"generation": "PersonX unlocks the door. PersonX is the only character in the game who can speak to", "references": ["cautious", "dutiful", "safe", "Tired", "Exhausted", "responsible"], "input": {"head": "PersonX unlocks the door", "relation": "xAttr"}}
{"generation": "PersonX puts ___ all together. After, PersonX will want to know what the hell is going on", "references": ["to show encouragement", "to see how they did", "to move on to something else", "to show it to everyone", "to give them tissue to wipe their tears", "for PersonY to succeed"], "input": {"head": "PersonX puts ___ all together", "relation": "xWant"}}
{"generation": "PersonX gives PersonY an allowance. After, others will want to take advantage of this", "references": ["to go shopping.", "to use it wisely", "to take care of themself", "to put their money in the piggy bank.", "to spend money", "to go shopping"], "input": {"head": "PersonX gives PersonY an allowance", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY is too fat", "Person Y is glaring at Person X.", "Person X feels like it would be awkward.", "PersonX's arms aren't long enough.", "PersonX doesn't have long enough arms", "PersonY's back is against the wall."], "input": {"head": "PersonX reaches behind PersonY", "relation": "HinderedBy"}}
{"generation": "PersonX gets a call. As a result, others feel that they are being treated unfairly", "references": ["busy", "none"], "input": {"head": "PersonX gets a call", "relation": "oReact"}}
{"generation": "PersonX prevents PersonY from entering. The effect on PersonX will be applied to PersonY", "references": ["PersonX takes up all the space", "PersonX is in the way", "yelled at", "gets hit"], "input": {"head": "PersonX prevents PersonY from entering", "relation": "xEffect"}}
{"generation": "live. PersonX did this to me", "references": ["have fun"], "input": {"head": "live", "relation": "xIntent"}}
{"generation": "PersonX walks in front of PersonY. The effect on PersonX will be similar to the effect on PersonY", "references": ["Person X get the attention of Person Y", "Person X starts to talk to Person Y", "Helps person Y to get into the car.", "none", "stops to hold person Y's hand"], "input": {"head": "PersonX walks in front of PersonY", "relation": "xEffect"}}
{"generation": "PersonX rears PersonY's children. PersonX will be the one who gets the most attention", "references": ["happy and tired", "satisfied in life."], "input": {"head": "PersonX rears PersonY's children", "relation": "xReact"}}
{"generation": "a good grades can be used for a lot of things", "references": ["be on the honor roll", "go to law school", "get scholarships", "show off to friends", "bargain for discounts at restaurants", "to get into a good school", "be able to play sports", "pass the class", "get in a good college", "be a teacher", "make a's", "earn rewards from parents", "exchange for ice cream", "try to get to college", "appeal to higher institutions", "get on the honor roll"], "input": {"head": "good grades", "relation": "ObjectUse"}}
{"generation": "PersonX makes perfect. PersonX did this to me", "references": ["to be perfect in everything"], "input": {"head": "PersonX makes perfect", "relation": "xIntent"}}
{"generation": "PersonX looks like was going. The effect on PersonX will be similar to the effect of the \"D\" in", "references": ["gets ready", "none", "gets prepared"], "input": {"head": "PersonX looks like was going", "relation": "xEffect"}}
{"generation": "PersonX gets sunburned. PersonX will be in a coma for a few days", "references": ["sad", "to have treatment", "very sad  and feared"], "input": {"head": "PersonX gets sunburned", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["person h inflated the item and it won't fit through the door", "PersonX is locked inside.", "The person PersonX is having a dispute with refuses to go outside.", "person z made the item to heavy to carry outside", "the item is too heavy for PersonX to pick up", "PersonX is afraid to go outside"], "input": {"head": "PersonX takes it outside", "relation": "HinderedBy"}}
{"generation": "PersonX takes ___ in stride. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX takes ___ in stride", "relation": "oWant"}}
{"generation": "PersonX falls upon PersonY. After that, PersonY is able to use the same abilities as", "references": ["PersonX runs off the stage to applause"], "input": {"head": "PersonX falls upon PersonY", "relation": "isBefore"}}
{"generation": "PersonX wipes PersonY's hands. Before, PersonX needs to be able to use PersonY's hands to move", "references": ["to get near person y", "to run the water", "get close to PersonY", "to grab person y's hands", "to wet a rag", "get a tissue"], "input": {"head": "PersonX wipes PersonY's hands", "relation": "xNeed"}}
{"generation": "PersonX puts PersonX's ___ together. After, PersonX will want to know what the other person is doing", "references": ["love", "health", "to reflect even further", "to rest", "to test out the item", "to learn from it"], "input": {"head": "PersonX puts PersonX's ___ together", "relation": "xWant"}}
{"generation": "a walking shoes can be used for a variety of purposes", "references": ["look cute", "exercise", "wear during the walk", "walk in", "walk with", "jog in", "protect the feet", "walk to the park", "go on a hike", "keep feet comfortable", "throw at president", "wear proper footwear", "get to the park", "protect their feet", "be comfortable", "walk home", "keep their feet comfortable", "get to the shop to buy the skateboard", "go for a walk", "wear while strolling", "get some exercise", "travel to the house", "match exercise pants"], "input": {"head": "walking shoes", "relation": "ObjectUse"}}
{"generation": "PersonX lets PersonY explain. The effect on others will be different", "references": ["Begins reading again", "Listens to PersonX", "accepts the apology", "hugs PersonX", "none"], "input": {"head": "PersonX lets PersonY explain", "relation": "oEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They want to go for the gold.", "Nothing isn't a physical object.", "PersonX was forced to hold everything by their parents", "PersonX is holding a baby and it will cry if they put it down.", "PersonX was handed things by their boss", "Nothing doesn't exist so it can't be held.", "PersonX can't grab nothing.", "They want to have an experience."], "input": {"head": "PersonX holds onto nothing", "relation": "HinderedBy"}}
{"generation": "a drivers permit can be used for a driver's license", "references": ["hang on a Christmas tree.", "learn how to drive for real", "be able to prove your age", "be able to practice driving", "cut cucumber with", "fold up and put under a wobbly table leg to level it.", "learn to drive on real roads", "pretend it's a credit card", "get a good picture to show everyone"], "input": {"head": "drivers permit", "relation": "ObjectUse"}}
{"generation": "PersonX follows ___ carefully. Before, PersonX needs to know what the other person is doing, and what", "references": ["to find the book", "to think they should be followed", "read instructions", "observe suspect", "to know the directions", "to search for it"], "input": {"head": "PersonX follows ___ carefully", "relation": "xNeed"}}
{"generation": "PersonX finishes the movie. Before that, he's a little bit more of a character", "references": ["PersonX turns on the dvd player"], "input": {"head": "PersonX finishes the movie", "relation": "isAfter"}}
{"generation": "PersonX evaluates the patient's ___. Before, PersonX needs to know the name of the patient", "references": ["to take the patient's vital signs", "to look at patient history", "be in the presence of the patient", "have the skills necessary to make an evaluation"], "input": {"head": "PersonX evaluates the patient 's ___", "relation": "xNeed"}}
{"generation": "PersonX plays for PersonX. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX plays for PersonX", "relation": "oEffect"}}
{"generation": "PersonX sweats profusely. Before that, he's been a bit of a dick", "references": ["PersonX is running"], "input": {"head": "PersonX sweats profusely", "relation": "isAfter"}}
{"generation": "PersonX is getting ready. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX is getting ready", "relation": "oWant"}}
{"generation": "PersonX moves every ___. After, PersonX will want to move the cursor to the next character", "references": ["to relax for a while", "to settle down in one spot"], "input": {"head": "PersonX moves every ___", "relation": "xWant"}}
{"generation": "PersonX wants to learn how to play the guitar. Before, PersonX needs to learn how to play the guitar", "references": ["to enrol in guitar classes", "to have a guitar", "to find a guitar teacher", "to buy a guitar", "none", "to take guitar lessons"], "input": {"head": "PersonX wants to learn how to play the guitar", "relation": "xNeed"}}
{"generation": "PersonX drives ___ on the highway. PersonX will be driving the car", "references": ["contended", "determined"], "input": {"head": "PersonX drives ___ on the highway", "relation": "xReact"}}
{"generation": "PersonX nurses PersonY back to health. Before that, she was a nurse at the hospital", "references": ["PersonX brings a medical bag to PersonY's house"], "input": {"head": "PersonX nurses PersonY back to health", "relation": "isAfter"}}
{"generation": "PersonX holds PersonY's attention. The effect on others will be felt by the person who is holding PersonX", "references": ["TO AVODI IT", "work on communication skills", "learn something new", "none", "GET A NEW THING"], "input": {"head": "PersonX holds PersonY's attention", "relation": "oEffect"}}
{"generation": "PersonX tricks or treat. Before, PersonX needs to be able to use the same abilities as the player", "references": ["to don their chosen costume", "to buy a costume", "bring a basket", "Get a costume on.", "wear a costume", "Get a big bag."], "input": {"head": "PersonX tricks or treat", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonY doesn't believe in healing via the laying on of hands.", "PersonY is too resistant."], "input": {"head": "PersonX places PersonY's hand", "relation": "HinderedBy"}}
{"generation": "PersonX uses ___ regularly. The effect on PersonX will be the same as the effect on PersonX", "references": ["gets something done.", "gets sore fingers from typing.", "none"], "input": {"head": "PersonX uses ___ regularly", "relation": "xEffect"}}
{"generation": "PersonX falls upon PersonY. Before that, PersonY is the only person who can be considered", "references": ["PersonX rehearses their scene for the play"], "input": {"head": "PersonX falls upon PersonY", "relation": "isAfter"}}
{"generation": "PersonX protects PersonY. After, PersonX will want to use PersonY to get PersonY's name", "references": ["to fight the enemies", "to ask PersonY if they're okay", "to hold Person Y", "to cast a spell", "to talk to Person Y", "to bring PersonY to a safe place", "to comfort PersonY"], "input": {"head": "PersonX protects PersonY", "relation": "xWant"}}
{"generation": "PersonX pays ___ at the rate. The effect on PersonX will be the same as the effect on PersonX", "references": ["send the money", "thinks about pay", "pays others fairly", "thanks people for the effort", "pays at a consistent rate", "show that he is a fair employers"], "input": {"head": "PersonX pays ___ at the rate", "relation": "xEffect"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's spouse will not agree to it.", "PersonX does not meet the financial requirements.", "PersonX is not old enough to adopt.", "Because he/she doesn't have a lawyer", "PersonX didn't pass the requirements.", "Person X is a felon"], "input": {"head": "PersonX adopts a little girl", "relation": "HinderedBy"}}
{"generation": "PersonX takes the dog. Before that, he takes the dog", "references": ["PersonX gets the dog off the bed"], "input": {"head": "PersonX takes the dog", "relation": "isAfter"}}
{"generation": "PersonX attends PersonX's father's ___. Before, PersonX needs to be able to talk to his father", "references": ["to buy an airline ticket", "to get flowers", "to love father a lot", "to respect father", "to buy a wedding present", "to get directions", "to fly to his home town"], "input": {"head": "PersonX attends PersonX's father 's ___", "relation": "xNeed"}}
{"generation": "PersonX tries to relax. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX tries to relax", "relation": "oEffect"}}
{"generation": "PersonX joins a gym. The effect on PersonX will be the same as the effect on Person X", "references": ["sore muscles", "develop the body", "gets fit", "works out", "get a six pack", "loses weight"], "input": {"head": "PersonX joins a gym", "relation": "xEffect"}}
{"generation": "PersonX goes to the post office. After that, he goes to the office of the president", "references": ["PersonX buys a stamp"], "input": {"head": "PersonX goes to the post office", "relation": "isBefore"}}
{"generation": "committee is a member of the House Committee on Oversight and Government", "references": ["made up of people", "more than one person"], "input": {"head": "committee", "relation": "HasProperty"}}
{"generation": "PersonX reminds PersonX of PersonY. As a result, others feel that PersonX is a better person than PersonY", "references": ["more safe", "they can join them"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's lease does not allow animals.", "The puppy ran away.", "The puppy can't ride in a car that long.", "PersonX has no time for pets.", "PersonX is allergic to dogs.", "The place doesn't allow dogs."], "input": {"head": "PersonX takes the puppy", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's spouse left with it in the car.", "PersonX lent their laptop to a friend.", "A thief stole it.", "PersonX had their laptop stolen.", "The cashier still needs personX to pay for it."], "input": {"head": "PersonX takes PersonX's laptop", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's reputation precedes them", "Person is still in prison.", "PersonX has dirty sheets", "Person doesn\u2019t have a shower available.", "PersonX has a bad reptuation", "PersonX doesn't have clean sheets"], "input": {"head": "PersonX starts with a clean sheet", "relation": "HinderedBy"}}
{"generation": "PersonX takes PersonY in PersonY's arms. PersonX did this to PersonY's head, and then PersonY took", "references": ["to show love and affection.", "to escort person"], "input": {"head": "PersonX takes PersonY in PersonY's arms", "relation": "xIntent"}}
{"generation": "PersonX shakes PersonY's heads. After, PersonX will want to know what's going on", "references": ["stay and converse", "to let go of PersonY", "to show PersonY how to say no", "to ask PersonY if they are in pain", "to control PersonY", "to give PersonY a massage", "walk away"], "input": {"head": "PersonX shakes PersonY's heads", "relation": "xWant"}}
{"generation": "PersonX thinks would happen. As a result, others feel that the game is too much of a mess", "references": ["pleased", "assured"], "input": {"head": "PersonX thinks would happen", "relation": "oReact"}}
{"generation": "PersonX fits PersonX's needs. PersonX did this to me", "references": ["to be contented.", "none"], "input": {"head": "PersonX fits PersonX's needs", "relation": "xIntent"}}
{"generation": "PersonX sets PersonX's cap at ___. The effect on others will be limited to the effect of the effect of the effect", "references": ["none"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "oEffect"}}
{"generation": "PersonX scrambles eggs for breakfast. PersonX did this to her own eggs", "references": ["to eat", "to be healthy"], "input": {"head": "PersonX scrambles eggs for breakfast", "relation": "xIntent"}}
{"generation": "You are likely to find a fig and lemon conserve in a garden or garden shed", "references": ["jar"], "input": {"head": "fig and lemon conserve", "relation": "AtLocation"}}
{"generation": "a scripts can be used for this purpose", "references": ["create web pages", "help to sell items", "remember your lines for the commercial", "know what to say when playing a role in a play of film", "tell someone a pitch over the phone", "get medicine from the pharmacy", "make it easier to complet work on mturk.", "use in programming"], "input": {"head": "scripts", "relation": "ObjectUse"}}
{"generation": "PersonX loves watching television. Before that, he was a writer for the BBC, and he", "references": ["PersonX laying on couch", "PersonX goes to the local bar", "PersonX sits down in front of the television"], "input": {"head": "PersonX loves watching television", "relation": "isAfter"}}
{"generation": "PersonX soothes PersonY. After, others will want to know who is the real person", "references": ["to relax", "to express their feelings", "to scream", "be there and appriciate x company.", "thank personX", "watch a movie for a distraction"], "input": {"head": "PersonX soothes PersonY", "relation": "oWant"}}
{"generation": "PersonX takes ___ in the future is filled by a new, more powerful, and more powerful version", "references": ["pills", "a drink", "paper", "shoes", "medicine"], "input": {"head": "PersonX takes ___ in the future", "relation": "isFilledBy"}}
{"generation": "PersonX pushes it. PersonX will be able to see the current position of the cursor", "references": ["strong", "good", "challenged", "tired", "satisfied"], "input": {"head": "PersonX pushes it", "relation": "xReact"}}
{"generation": "PersonX wears makeup. Before that, she wore a black dress with a black skirt and", "references": ["PersonX is going to a wedding"], "input": {"head": "PersonX wears makeup", "relation": "isAfter"}}
{"generation": "PersonX gives PersonY the courage. After that, he's a bit more cautious", "references": ["PersonX congratulates PersonY on the new job"], "input": {"head": "PersonX gives PersonY the courage", "relation": "isBefore"}}
{"generation": "PersonX evens gave PersonY ___. Before, PersonX needs to be able to use the same method on PersonY", "references": ["to meet PersonY", "to of had it", "to like PersonY", "to of given it to them", "to see PersonY", "none"], "input": {"head": "PersonX evens gave PersonY ___", "relation": "xNeed"}}
{"generation": "PersonX turns PersonX's ___ to the wall. PersonX did this to PersonX's ___, and then PersonX turned", "references": ["take a photo of a picture on the wall with their friend's phone.", "to make it noticed"], "input": {"head": "PersonX turns PersonX's ___ to the wall", "relation": "xIntent"}}
{"generation": "PersonX notices a strange smell. After, others will want to know what it is", "references": ["none"], "input": {"head": "PersonX notices a strange smell", "relation": "oWant"}}
{"generation": "PersonX interviews for PersonX's dream job. After that, he's a regular at the company's office in", "references": ["PersonX receives a job offer", "PersonX sends a thank you e-mail to the interview committee"], "input": {"head": "PersonX interviews for PersonX's dream job", "relation": "isBefore"}}
{"generation": "a garage opener can be used for a variety of purposes", "references": ["close others outside", "open the door to get in the garage", "get to car", "break into someone's house", "get inside the house", "throw at someone to hurt them", "throw as a weapon", "weight down other objects", "use to move items"], "input": {"head": "garage opener", "relation": "ObjectUse"}}
{"generation": "PersonX thanks the ___ for PersonY's comments. PersonX is a very nice guy, and I'm glad he", "references": ["modest", "generous", "grateful", "bashful", "thankful", "well-mannered"], "input": {"head": "PersonX thanks the ___ for PersonY's comments", "relation": "xAttr"}}
{"generation": "You are likely to find a pen or pencil in a drawer or drawer drawer", "references": ["table"], "input": {"head": "pen or pencil", "relation": "AtLocation"}}
{"generation": "PersonX puts PersonY to use. PersonX is the only character in the game that can use Person", "references": ["powerful", "motivated", "needy", "decisive", "brisk", "wanting"], "input": {"head": "PersonX puts PersonY to use", "relation": "xAttr"}}
{"generation": "PersonX comes to light. PersonX is a member of the \"X\" group, which", "references": ["truthful", "discovered", "defined", "noticable", "honest", "distinctive", "exposed"], "input": {"head": "PersonX comes to light", "relation": "xAttr"}}
{"generation": "malcontent can be found in the following sections:\n\nThe", "references": ["air grievences"], "input": {"head": "malcontent", "relation": "CapableOf"}}
{"generation": "PersonX costs the earth. As a result, others feel that the Earth is not worth the effort", "references": ["none"], "input": {"head": "PersonX costs the earth", "relation": "oReact"}}
{"generation": "PersonX tells PersonY a story. After that, PersonX tells PersonY a story", "references": ["PersonX thanks the students for their applause"], "input": {"head": "PersonX tells PersonY a story", "relation": "isBefore"}}
{"generation": "PersonX buys all the ingredients. Before that, he buys the ingredients from the store", "references": ["PersonX looks at the recipe"], "input": {"head": "PersonX buys all the ingredients", "relation": "isAfter"}}
{"generation": "PersonX fans dance. The effect on PersonX will be similar to that of a dance", "references": ["heart rate increases", "becomes the center of attention", "gets taped", "none", "legs become tired"], "input": {"head": "PersonX fans dance", "relation": "xEffect"}}
{"generation": "PersonX buys the car. Before that, he's been working on the car for a while", "references": ["PersonX looks at the new car"], "input": {"head": "PersonX buys the car", "relation": "isAfter"}}
{"generation": "PersonX takes PersonY's laptop. Before that, she's in the middle of a conversation with a", "references": ["PersonX sees a laptop", "PersonX asks PersonY if he may borrow the laptop", "PersonX needs to finish project"], "input": {"head": "PersonX takes PersonY's laptop", "relation": "isAfter"}}
{"generation": "PersonX quits ___ for good is filled by a lot of people who are not even aware of", "references": ["cigarettes", "soda", "alcohol"], "input": {"head": "PersonX quits ___ for good", "relation": "isFilledBy"}}
{"generation": "PersonX goes ___ for the first time. The effect on PersonX will be similar to that of a normal person", "references": ["gets compliments", "screams in joy", "stares in wonder", "feels nervous", "feels scared", "hair becomes bleached", "feels excited"], "input": {"head": "PersonX goes ___ for the first time", "relation": "xEffect"}}
{"generation": "PersonX puts the ___ together. The effect on others will be different", "references": ["they teach others", "none", "they learn from him"], "input": {"head": "PersonX puts the ___ together", "relation": "oEffect"}}
{"generation": "PersonX never been on one. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX never been on one", "relation": "oEffect"}}
{"generation": "PersonX bows PersonX's heads. Before that, he's just a normal person", "references": ["PersonX goes to meet the pope"], "input": {"head": "PersonX bows PersonX's heads", "relation": "isAfter"}}
{"generation": "PersonX feels better. The effect on PersonX will be different", "references": ["returns to work", "gets asked how they are feeling", "relaxes", "gets nursed back to perfect health", "none"], "input": {"head": "PersonX feels better", "relation": "xEffect"}}
{"generation": "PersonX needs a lot of work. PersonX will be able to do a lot of things, but he", "references": ["poor", "sad", "stressed and disappointed", "downtrodden"], "input": {"head": "PersonX needs a lot of work", "relation": "xReact"}}
{"generation": "mechanical engineer can be a bit of a dick", "references": ["shore up bridge"], "input": {"head": "mechanical engineer", "relation": "CapableOf"}}
{"generation": "PersonX books a ticket. As a result, others feel that they are being unfairly targeted", "references": ["happy", "none", "excitement", "anticipation"], "input": {"head": "PersonX books a ticket", "relation": "oReact"}}
{"generation": "PersonX leaves PersonX's husband. The effect on PersonX will be reversed if PersonX is not in the same room", "references": ["\"files for divorce", "Moves in with \"\"friend\"\"", "file for divorce", "cries", "Finds an apartment", "finds new home\""], "input": {"head": "PersonX leaves PersonX's husband", "relation": "xEffect"}}
{"generation": "PersonX drives PersonY's friends home. After that, they're all gone", "references": ["PersonX gets out of PersonX's car"], "input": {"head": "PersonX drives PersonY's friends home", "relation": "isBefore"}}
{"generation": "You are likely to find a postal counter in an office building or a building that is not a postal", "references": ["office", "mail room of business", "mail room"], "input": {"head": "postal counter", "relation": "AtLocation"}}
{"generation": "PersonX seems better. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX seems better", "relation": "xIntent"}}
{"generation": "PersonX turns PersonX's ___ elsewhere. The effect on others will be reversed", "references": ["none"], "input": {"head": "PersonX turns PersonX's ___ elsewhere", "relation": "oEffect"}}
{"generation": "PersonX feels embarrassed. After, PersonX will want to know why he's being so rude", "references": ["to run away", "to make amends", "to hide", "to cry", "to improve their confidence"], "input": {"head": "PersonX feels embarrassed", "relation": "xWant"}}
{"generation": "PersonX has anger problems. Before, PersonX needs to be able to talk to people", "references": ["none", "hit menopause", "have bad childhood"], "input": {"head": "PersonX has anger problems", "relation": "xNeed"}}
{"generation": "PersonX sends a letter. After, PersonX will want to know if you are a member of the group", "references": ["to get a reply", "to wait for the reply", "for a letter in return", "to check if it has been received", "for it to be something good", "to communicate"], "input": {"head": "PersonX sends a letter", "relation": "xWant"}}
{"generation": "PersonX is offered the job. After that, he is offered the job of a \"specialist", "references": ["PersonX looks at their new office", "PersonX begins PersonX's first shift the following day", "PersonX accepts the job offer"], "input": {"head": "PersonX is offered the job", "relation": "isBefore"}}
{"generation": "PersonX goes on with PersonX's work. PersonX did this to make sure that the game was not too much of", "references": ["to work", "to achieve a goal", "is responsible", "needs money"], "input": {"head": "PersonX goes on with PersonX's work", "relation": "xIntent"}}
{"generation": "PersonX comes into PersonY's eyes. PersonX is a little more of a \"I'm not sure", "references": ["popular", "demanding", "curious", "interested", "rude", "conspicuous"], "input": {"head": "PersonX comes into PersonY's eyes", "relation": "xAttr"}}
{"generation": "PersonX puts PersonY's ___ to death. PersonX did this to PersonY, and PersonY did this to Person", "references": ["control", "to be evil", "to stop a rebellion"], "input": {"head": "PersonX puts PersonY's ___ to death", "relation": "xIntent"}}
{"generation": "PersonX saves PersonX's people. Before, PersonX needs to be able to save PersonX's people", "references": ["to of made a plan to correct it", "to fight a battle", "to free their people from a prison", "to know what is needed"], "input": {"head": "PersonX saves PersonX's people", "relation": "xNeed"}}
{"generation": "PersonX stops but PersonY didn't listen. Before that, I was just a kid", "references": ["PersonX is talking to loud"], "input": {"head": "PersonX stops but PersonY did n't listen", "relation": "isAfter"}}
{"generation": "PersonX holds PersonY still. After that, PersonX is able to use PersonX's abilities", "references": ["PersonX jabs PersonY with the shot", "PersonX uses the clippers on PersonY's head", "PersonX lets go of PersonY"], "input": {"head": "PersonX holds PersonY still", "relation": "isBefore"}}
{"generation": "PersonX is finally pregnant. After that, she's going to have to deal with the fact", "references": ["PersonX reads books on how to be a good mother"], "input": {"head": "PersonX is finally pregnant", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person x is stuck in their old ways", "Person x is afraid of change", "They are too old.", "They have seen too much."], "input": {"head": "PersonX is brand new", "relation": "HinderedBy"}}
{"generation": "PersonX meets someone new. PersonX is a young, talented, and talented person", "references": ["social", "sensual", "hedonic", "polite", "friendly", "talkative"], "input": {"head": "PersonX meets someone new", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["The cows got free from their pen.", "The cows belong to a farmer and PersonX was told not to go near them.", "PersonX's neighbor stole their cows.", "PersonX's wife brought the cows to the vet.", "The cows are bulls.", "The cows are too sick to be milked.", "PersonX doesn't have permission.", "The milk pump was damaged when they moved.", "PersonX's partner woke early to milk the cows first."], "input": {"head": "PersonX milks the cows", "relation": "HinderedBy"}}
{"generation": "PersonX protects the ___ from harm. Before, PersonX needs to be able to use the ___ to protect itself", "references": ["to assess the situation", "to determine what needs to be done", "move between the aggressor and the object to protect", "to identify the aggressor"], "input": {"head": "PersonX protects the ___ from harm", "relation": "xNeed"}}
{"generation": "PersonX follows the recipe. After that, you can use the recipe to make a new recipe", "references": ["PersonX serves dinner", "PersonX serves the dish to their friends"], "input": {"head": "PersonX follows the recipe", "relation": "isBefore"}}
{"generation": "PersonX reschedules PersonX's appointment. PersonX is now able to use the PersonX app to schedule", "references": ["busy", "varying", "flighty", "unreliable"], "input": {"head": "PersonX reschedules PersonX's appointment", "relation": "xAttr"}}
{"generation": "PersonX asks the doctor. After, PersonX will want to know if he can get a new one", "references": ["to assure themselves of their health", "to receive good news"], "input": {"head": "PersonX asks the doctor", "relation": "xWant"}}
{"generation": "PersonX looks like a man. After, PersonX will want to know who you are", "references": ["to prove they are feminine", "to just be normal", "to ask women out", "to con people", "to buy more dresses", "to act appropriate"], "input": {"head": "PersonX looks like a man", "relation": "xWant"}}
{"generation": "PersonX feels bad about it. Before that, he was a very good player", "references": ["PersonX yells at their daughter"], "input": {"head": "PersonX feels bad about it", "relation": "isAfter"}}
{"generation": "PersonX burns the ___ at both ends. As a result, others feel that the ___ is a bad thing", "references": ["none"], "input": {"head": "PersonX burns the ___ at both ends", "relation": "oReact"}}
{"generation": "PersonX turns PersonX's ___ away is filled by the fact that PersonX is a person who is", "references": ["camera", "back", "face", "neck", "dog", "legs", "cat"], "input": {"head": "PersonX turns PersonX's ___ away", "relation": "isFilledBy"}}
{"generation": "PersonX dyes PersonY's hair red. PersonX will be the one who wears the hair red", "references": ["hardworking", "helpful", "excited", "professional", "pretty", "pleased", "tired"], "input": {"head": "PersonX dyes PersonY's hair red", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't want to start an affair.", "The husband is against it.", "the boat has already left to her house", "PersonX's wife will not let him.", "the roads are closed", "PersonY's wife refuses to see him again."], "input": {"head": "PersonX sees PersonY's wife", "relation": "HinderedBy"}}
{"generation": "a stupidity can be used for a lot of things", "references": ["idiots"], "input": {"head": "stupidity", "relation": "ObjectUse"}}
{"generation": "PersonX bites the dust. The effect on PersonX will be similar to that of the original", "references": ["affect the body", "none", "some other person"], "input": {"head": "PersonX bites the dust", "relation": "xEffect"}}
{"generation": "PersonX spends a ___ working. The effect on others will be less than the effect on themselves", "references": ["none"], "input": {"head": "PersonX spends a ___ working", "relation": "oEffect"}}
{"generation": "PersonX gets ___, though. After, others will want to know what the fuck he's doing", "references": ["none"], "input": {"head": "PersonX gets ___ , though", "relation": "oWant"}}
{"generation": "PersonX buys a dog. The effect on PersonX will be the same as the effect on PersonX", "references": ["has less money", "to buy dog foods", "is energetic", "none", "spend money for dog medicine"], "input": {"head": "PersonX buys a dog", "relation": "xEffect"}}
{"generation": "PersonX misses ___ to school. As a result, others feel that they are being punished for their actions", "references": ["none"], "input": {"head": "PersonX misses ___ to school", "relation": "oReact"}}
{"generation": "PersonX takes the offer. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX takes the offer", "relation": "oEffect"}}
{"generation": "PersonX takes a leaf out of PersonY's book. Before that, she's just a little bit more of a character", "references": ["PersonX is reading PersonY's book"], "input": {"head": "PersonX takes a leaf out of PersonY's book", "relation": "isAfter"}}
{"generation": "PersonX justifies PersonX's actions. After, others will want to know who is the real person", "references": ["to justify their own", "to prove them wrong", "to punish them", "none", "to argue"], "input": {"head": "PersonX justifies PersonX's actions", "relation": "oWant"}}
{"generation": "PersonX turns PersonX's life around. Before, PersonX needs to be able to talk to PersonX", "references": ["to live a life that needs turning around", "plan on how to turn the life around", "to seek counseling", "to admit a problem", "to determine goals", "to make a plan"], "input": {"head": "PersonX turns PersonX's life around", "relation": "xNeed"}}
{"generation": "PersonX tans PersonY's hide. PersonX will be able to see PersonY's face and will be", "references": ["powerful", "releived", "angry"], "input": {"head": "PersonX tans PersonY's hide", "relation": "xReact"}}
{"generation": "PersonX gets my license. PersonX is a good guy", "references": ["accomplished", "stable", "trusty", "excited", "reliable", "dependable"], "input": {"head": "PersonX gets my license", "relation": "xAttr"}}
{"generation": "PersonX uses the restroom. Before that, he uses the restroom to get to the bathroom", "references": ["PersonX is feeling bloated from eating too much"], "input": {"head": "PersonX uses the restroom", "relation": "isAfter"}}
{"generation": "a fear can be used for a number of reasons", "references": ["confuse", "separate people", "motivate", "stop people", "change people greatly", "cause stress", "serve obedience", "force people to hide"], "input": {"head": "fear", "relation": "ObjectUse"}}
{"generation": "PersonX changes PersonX's lives. PersonX is a character who is a member of the \"Person", "references": ["dominating", "helpful", "Active", "Reformative", "competent", "succesful"], "input": {"head": "PersonX changes PersonX's lives", "relation": "xAttr"}}
{"generation": "a car fob can be used for this purpose", "references": ["lock your car", "get in a car quickly", "pry open a beer bottle", "push start your vehicle", "hold up the leg of an uneven table", "unlock a car trunk", "open the car door", "build a robot", "teach a lesson about technology", "unlock trunk"], "input": {"head": "car fob", "relation": "ObjectUse"}}
{"generation": "PersonX asks PersonY to sit down. Before, PersonX needs to ask PersonY to sit down", "references": ["to go to PersonY", "to get up from their own seat to give it to PersonY", "to invite them in their office", "to page personY", "to bring PersonY a chair"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "xNeed"}}
{"generation": "PersonX paints the town red. After, PersonX will want to know who the other characters are", "references": ["to rebuild after the fighting", "to have a set of moral codes"], "input": {"head": "PersonX paints the town red", "relation": "xWant"}}
{"generation": "PersonX cuts open ___. The effect on PersonX will be the same as the effect on PersonX", "references": ["bleeds", "Has to duck", "arrested", "hurts", "gets treated", "Smells a noxious fumer"], "input": {"head": "PersonX cuts open ___", "relation": "xEffect"}}
{"generation": "PersonX sends PersonY over the edge. After that, PersonY is able to get a little more control", "references": ["PersonX shields their head from PersonY's fists", "PersonX gets arrested"], "input": {"head": "PersonX sends PersonY over the edge", "relation": "isBefore"}}
{"generation": "PersonX earns some money. Before, PersonX needs to earn money to buy a new car", "references": ["to find work", "to be trained for the work", "to to go to a temp agency", "to drive to work", "to work hard", "to work", "to get a job"], "input": {"head": "PersonX earns some money", "relation": "xNeed"}}
{"generation": "PersonX throws the book. The effect on others will be similar to that of a normal book", "references": ["none"], "input": {"head": "PersonX throws the book", "relation": "oEffect"}}
{"generation": "PersonX speaks with PersonY. PersonX will be able to talk to PersonY and PersonY will", "references": ["sociable", "like they were heard", "friendly", "less lonely", "more knowledgeable"], "input": {"head": "PersonX speaks with PersonY", "relation": "xReact"}}
{"generation": "PersonX pumps iron. PersonX did this to the other two", "references": ["to show off", "to get stronger", "to gain muscle", "to get in shape"], "input": {"head": "PersonX pumps iron", "relation": "xIntent"}}
{"generation": "PersonX enjoys ___ that night. The effect on PersonX will be that he will be able to see the world through", "references": ["They feel content", "they decide to have the meal again next week", "they eat something else the next night", "reflect on the positive experience", "repeat the activity", "They feel happy"], "input": {"head": "PersonX enjoys ___ that night", "relation": "xEffect"}}
{"generation": "PersonX never caught ___ is filled by the same people who are the same people who are", "references": ["the stone", "a rabbit", "the frisbee", "the paper", "a bandit", "the ball"], "input": {"head": "PersonX never caught ___", "relation": "isFilledBy"}}
{"generation": "PersonX leaves PersonX's car. PersonX did this to her", "references": ["to be away from their car", "to get to the place"], "input": {"head": "PersonX leaves PersonX's car", "relation": "xIntent"}}
{"generation": "PersonX wants to hurt PersonY. PersonX is a bit of a jerk, but he's a", "references": ["immoral", "angered", "upset", "angry", "harmful", "dangerous", "hurtful"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xAttr"}}
{"generation": "PersonX hangs PersonY's clothes. After, others will want to see the same", "references": ["to get dressed", "to say thank you"], "input": {"head": "PersonX hangs PersonY's clothes", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX didn't wash feet.", "PersonX must use hands."], "input": {"head": "PersonX votes with PersonX's feet", "relation": "HinderedBy"}}
{"generation": "PersonX eats it quickly. After, others will want to eat it too", "references": ["none"], "input": {"head": "PersonX eats it quickly", "relation": "oWant"}}
{"generation": "PersonX eats ___ very quickly. As a result, others feel like they're being punished for not eating", "references": ["none"], "input": {"head": "PersonX eats ___ very quickly", "relation": "oReact"}}
{"generation": "PersonX sings PersonX's heart. Before, PersonX needs to be able to sing", "references": ["to have good mood", "to be listening to song", "to like singing", "to be at a karaoke bar", "none"], "input": {"head": "PersonX sings PersonX's heart", "relation": "xNeed"}}
{"generation": "PersonX pays ___ to the government. After, PersonX will want to know who the government is", "references": ["to make more money", "to be a good citizen", "to avoid problems", "cry", "to complain", "to pay more money"], "input": {"head": "PersonX pays ___ to the government", "relation": "xWant"}}
{"generation": "You are likely to find an american flag in a lot of places", "references": ["suface of moon", "moon"], "input": {"head": "american flag", "relation": "AtLocation"}}
{"generation": "PersonX earns money. Before, PersonX needs to earn money to buy a car", "references": ["to have a job", "to find something to do", "to have a business", "to get a job", "To work hard", "To do work"], "input": {"head": "PersonX earns money", "relation": "xNeed"}}
{"generation": "PersonX wants PersonY to come. After that, they'll have to figure out how to get Person", "references": ["PersonX invites PersonY to the picnic"], "input": {"head": "PersonX wants PersonY to come", "relation": "isBefore"}}
{"generation": "PersonX practices all day. The effect on PersonX will be minimal", "references": ["Gets tired of doing it and stops altogether", "learns something new", "becomes an expert", "Improves their skiil", "has tired hands", "sleeps like a baby"], "input": {"head": "PersonX practices all day", "relation": "xEffect"}}
{"generation": "PersonX finds it anywhere. After that, he's a bit of a jerk", "references": ["PersonX retrieves it", "PersonX tells the newspaper"], "input": {"head": "PersonX finds it anywhere", "relation": "isBefore"}}
{"generation": "PersonX loves fishing. Before that, he was a fisherman", "references": ["PersonX takes a day off"], "input": {"head": "PersonX loves fishing", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["the victim is calling PersonX by name and begging him to assist", "the kids are yelling at PersonX to come help", "PersonX's boss is looking to make sure it gets done", "person x is too involved not to care", "Personx is a member of the armed forces.", "person x wants to help too much", "Personx's friend got horribly injured."], "input": {"head": "PersonX turns a blind eye", "relation": "HinderedBy"}}
{"generation": "PersonX gives money for christmas. After that, he gives money for christmas", "references": ["PersonX feels good that they had the money to donate"], "input": {"head": "PersonX gives money for christmas", "relation": "isBefore"}}
{"generation": "PersonX goes to PersonY. The effect on others will be different", "references": ["makes a friend", "they are confused", "they are shocked", "none", "shakes hands"], "input": {"head": "PersonX goes to PersonY", "relation": "oEffect"}}
{"generation": "PersonX wants another ___ is filled by a new ___", "references": ["cookie", "car", "sandwhich", "drink", "video game"], "input": {"head": "PersonX wants another ___", "relation": "isFilledBy"}}
{"generation": "PersonX kneels beside PersonY. After that, PersonX and PersonY are separated by a few", "references": ["PersonX cries and begs for help", "PersonX asks what can be done", "PersonX helps PersonY stand up"], "input": {"head": "PersonX kneels beside PersonY", "relation": "isBefore"}}
{"generation": "PersonX throws PersonY overboard. PersonX will be thrown into the water", "references": ["malicious", "happy", "mean", "relieved"], "input": {"head": "PersonX throws PersonY overboard", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too out of shape.", "PersonX's doctor forbade them from running.", "PersonX cant run because of shin splints.", "PersonX didn't train in time for it.", "PersonX can't be on time when the marathom starts.", "PersonX can't run that fast.", "PersonX has not trained for the marathon.", "PersonX's mother forgot to send in the registration form.", "PersonX has a broken leg.", "PersonX does not have the fee to participate."], "input": {"head": "PersonX runs a marathon", "relation": "HinderedBy"}}
{"generation": "a plastic bag can be used for a variety of purposes, including:\n\n-", "references": ["put with undergarments for future dirty ones", "pick up after the poodle", "put the body in", "remove the drink from", "keep head dry", "dispose of remains", "dispose of the evidence", "keep feet dry", "carry items", "fill with cubes from the freezer", "prevent pregnancy", "keep shoes dry", "put the evidence into", "carry the purchase home in", "collect the items", "pick up excrement", "clean up the poop", "carry the frisbee out of the store in", "take items out of the store", "carry the items home in", "put purchase in", "wrap up fresh vegetables in", "hold the uneaten food", "hold fruit", "hold the trash", "catch vomit", "line the can", "crochet into mats", "store used tissues", "carry it out in", "Put toiletries into", "hyperventilate into", "collect cans", "put the wares in", "pick up the fecal matter with"], "input": {"head": "plastic bag", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is a selfish person.", "PersonX needs to work to support family.", "PersonX needs a lot more practice.", "PersonX was raised in an aggressive home.", "PersonX has severe depression and can't afford medication or therapy.", "PersonX doesn't have any social support to encourage them to keep trying."], "input": {"head": "PersonX is a lot better", "relation": "HinderedBy"}}
{"generation": "PersonX decides to read a book. PersonX will be able to read the book and then decide to read", "references": ["relaxed", "happy", "content", "good", "smarter"], "input": {"head": "PersonX decides to read a book", "relation": "xReact"}}
{"generation": "PersonX finds ___ PersonY wanted. PersonX is a member of the group", "references": ["clever", "accomplished", "capable", "resourceful", "smart", "sleuthlike", "thoughtful"], "input": {"head": "PersonX finds ___ PersonY wanted", "relation": "xAttr"}}
{"generation": "PersonX prevents the ___ from obtaining is filled by the user", "references": ["mob", "animal"], "input": {"head": "PersonX prevents the ___ from obtaining", "relation": "isFilledBy"}}
{"generation": "PersonX really wants. PersonX will be the one who gets the most votes", "references": ["desire", "longing", "hope"], "input": {"head": "PersonX really wants", "relation": "xReact"}}
{"generation": "PersonX is getting ready for work. PersonX will be working on the next chapter of the series", "references": ["hurried", "happy", "good about themselves", "satisfied"], "input": {"head": "PersonX is getting ready for work", "relation": "xReact"}}
{"generation": "PersonX gets ___ at work. After, PersonX will want to know what the hell is going on", "references": ["to make more money", "To enjoy the promotion", "Thank them for the extra income.", "Go out and enjoy with friends", "Keep giving all they got.", "get a promotion"], "input": {"head": "PersonX gets ___ at work", "relation": "xWant"}}
{"generation": "PersonX cleans PersonY. Before, PersonX needs to clean PersonY", "references": ["decide what to clean", "fill in water", "Get some water", "approach the person", "Get soap", "get soap"], "input": {"head": "PersonX cleans PersonY", "relation": "xNeed"}}
{"generation": "PersonX is walking along the beach. PersonX is standing on the beach", "references": ["Relaxed", "relaxed", "on vacation", "Chill"], "input": {"head": "PersonX is walking along the beach", "relation": "xAttr"}}
{"generation": "PersonX breaks the mold. After that, he's a little more of a \"good guy", "references": ["PersonX sets a new way to get work done", "PersonX goes to the store and guys premade jello"], "input": {"head": "PersonX breaks the mold", "relation": "isBefore"}}
{"generation": "PersonX gets ___ right. PersonX did this to me", "references": ["to prove his ability"], "input": {"head": "PersonX gets ___ right", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Cooking is work to Person X.", "It makes her feel like a slave.", "Person X hates all the time cooking takes.", "PersonX's husband is rude and critical of their cooking.", "PersonX's family complains that their cooking stinks.", "Person X is not talented at cooking.", "Person X is not good at cooking.", "Person X sees it as a job.", "Person X enjoys eating out too much.", "It brings back bad memories.", "PersonX's children get sick when they cook."], "input": {"head": "PersonX loves to cook", "relation": "HinderedBy"}}
{"generation": "PersonX feels bad. Before that, he was a very good player", "references": ["PersonX yells at their friend"], "input": {"head": "PersonX feels bad", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have transportation there.", "The post office is closed on Sunday", "PersonX got called into work early.", "The post office closed because of bad weather.", "The governor has quarentined PersonX.", "The post office is closed on government holidays", "PersonX had their car break down, and can't go anywhere.", "The Mail Clerk locked the door in PersonX's face.", "The post office burned down."], "input": {"head": "PersonX goes to the post office", "relation": "HinderedBy"}}
{"generation": "PersonX gets nervous. The effect on others will be different", "references": ["forgives them", "none", "understands"], "input": {"head": "PersonX gets nervous", "relation": "oEffect"}}
{"generation": "PersonX knows every detail. After that, he's a little bit more of a mystery", "references": ["PersonX aces his test"], "input": {"head": "PersonX knows every detail", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is wearing contact lenese.", "it is not safe to have them at his job", "PersonX has perfect vision.", "PersonX's optometrist prescribed her contacts instead", "PersonX can't afford glasses.", "he has lost his glasses", "PersonX can't find a place to buy glasses.", "PersonX's friend broke her glasses"], "input": {"head": "PersonX wears glasses", "relation": "HinderedBy"}}
{"generation": "PersonX can not believe PersonX's eyes. The effect on others will be limited to the person who is not a member of", "references": ["none"], "input": {"head": "PersonX can not believe PersonX's eyes", "relation": "oEffect"}}
{"generation": "PersonX takes ___ out for a ride. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX takes ___ out for a ride", "relation": "oWant"}}
{"generation": "PersonX starts to play. Before that, he starts to play", "references": ["PersonX sits down at the piano"], "input": {"head": "PersonX starts to play", "relation": "isAfter"}}
{"generation": "PersonX is walking across the street. The effect on PersonX will be similar to the effect of a normal person walking across", "references": ["gets a ticket for jwalking", "keeps walking", "sweats", "PersonX stays in the crosswalk", "gets hit by a car", "PersonX obeys the traffic signals"], "input": {"head": "PersonX is walking across the street", "relation": "xEffect"}}
{"generation": "PersonX puts out feelers. As a result, others feel the same way", "references": ["none", "knowledgeable", "good because they found someone that needs what they have to give"], "input": {"head": "PersonX puts out feelers", "relation": "oReact"}}
{"generation": "PersonX wants to run a marathon. After that, he'll run a marathon", "references": ["PersonX trains for the race", "PersonX signs up to run a marathon"], "input": {"head": "PersonX wants to run a marathon", "relation": "isBefore"}}
{"generation": "PersonX brings ___ to PersonY eyes. As a result, others feel like they're being watched", "references": ["overwhelmed"], "input": {"head": "PersonX brings ___ to PersonY eyes", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They do not have access to PersonY", "PersonX doesn't know what situation.", "PersonX doesn't know what situation PersonY wants.", "PersonY is surrounded by bodyguards all the time", "PersonY does not have a situation to create."], "input": {"head": "PersonX creates PersonY situation", "relation": "HinderedBy"}}
{"generation": "PersonX watches one with PersonY. After, PersonX will want to see PersonY", "references": ["to look at the star map", "to watch another", "to make some popcorn", "to look up the birds they saw", "to take PersonY home", "to get a snack"], "input": {"head": "PersonX watches one with PersonY", "relation": "xWant"}}
{"generation": "a dance floor can be used for a variety of purposes", "references": ["flirt with new people", "teach a class", "throw confetti", "sell drinks on", "show your moves", "start a brawl", "step onto", "teach dance", "put tables on", "perform gymnastics", "dance with the bride", "dance on"], "input": {"head": "dance floor", "relation": "ObjectUse"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is sleeping due to Jane keeping her up too late", "Funds are tight.", "There is a recession.", "PersonX got sick from Dale and cannot get out of bed", "PersonX was hit in the head by Scott and is unable to work", "PersonX has to keep doing their monotonous work.", "PersonX doesn't have time to take classes to further their career."], "input": {"head": "PersonX keeps pace with the growth", "relation": "HinderedBy"}}
{"generation": "PersonX sets things right. Before, PersonX needs to be able to do things like:\n\nFind", "references": ["to tell what they did wrong", "confront their problems", "to offer recompense", "make a wrong", "none"], "input": {"head": "PersonX sets things right", "relation": "xNeed"}}
{"generation": "PersonX splits hairs. The effect on PersonX will be similar to that of a normal person", "references": ["realizes mistake", "wastes time", "none", "frowns"], "input": {"head": "PersonX splits hairs", "relation": "xEffect"}}
{"generation": "PersonX makes a phone call. Before that, he's just a regular guy who's just trying", "references": ["PersonX finds their cellphone"], "input": {"head": "PersonX makes a phone call", "relation": "isAfter"}}
{"generation": "PersonX looks on PersonY's face. PersonX is a bit more serious", "references": ["reads people", "observant", "curious"], "input": {"head": "PersonX looks on PersonY's face", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX got expelled.", "PersonX is a teacher, not a student.", "PersonX doesn't go to that school anymore.", "PersonX got kicked out of highschool.", "The have been told that they don't have enough skill.", "There are other people in the way.", "PersonX has terrible grades.", "Person X has laryngitis.", "There are too many people running for the job.", "PersonX had to get a job."], "input": {"head": "PersonX runs for class president", "relation": "HinderedBy"}}
{"generation": "PersonX starts working out. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX starts working out", "relation": "oEffect"}}
{"generation": "PersonX knows the ___ from the dance. PersonX will be able to tell you the ___ from the dance", "references": ["excited", "he like a dance"], "input": {"head": "PersonX knows the ___ from the dance", "relation": "xReact"}}
{"generation": "PersonX leans back in PersonY's seat. PersonX will be the one to answer the question", "references": ["rested", "tired"], "input": {"head": "PersonX leans back in PersonY's seat", "relation": "xReact"}}
{"generation": "PersonX dances the night away. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX dances the night away", "relation": "oReact"}}
{"generation": "PersonX likes cheese. The effect on PersonX will be similar to that of a cheese", "references": ["none", "delighted", "satisfied"], "input": {"head": "PersonX likes cheese", "relation": "xEffect"}}
{"generation": "PersonX finds a good one. The effect on others will be different", "references": ["they look for one for themselves", "they like it"], "input": {"head": "PersonX finds a good one", "relation": "oEffect"}}
{"generation": "PersonX notices someone. After, PersonX will want to know who you are", "references": ["to ignore them", "to talk to them", "Scare the crap out of them.", "Sneak up on them.", "to keep walking", "ignore them"], "input": {"head": "PersonX notices someone", "relation": "xWant"}}
{"generation": "PersonX returns to PersonY's room. Before that, she asks if she can talk to him", "references": ["PersonX leaves PersonY's room"], "input": {"head": "PersonX returns to PersonY's room", "relation": "isAfter"}}
{"generation": "PersonX is on vacation in mexico. After, others will want to see mexico", "references": ["none"], "input": {"head": "PersonX is on vacation in mexico", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't have any money.", "Has no money", "PersonX doesn't have the material.", "PersonY will not accept the present.", "PersonX lives too far away from PersonY.", "PersonX is not crafty"], "input": {"head": "PersonX makes PersonY a present", "relation": "HinderedBy"}}
{"generation": "PersonX saves PersonX's ___ from PersonY's sins. After, others will want to kill PersonX", "references": ["to enjoy having a fresh start.", "to thank PersonX."], "input": {"head": "PersonX saves PersonX's ___ from PersonY's sins", "relation": "oWant"}}
{"generation": "a serviette can be used for the following purposes:\n\n1", "references": ["Keep hands clean", "put in your lap", "wrap a gift", "keep crumbs off their lap", "carry plates", "light a fire with.", "decorate their head", "make beautiful origami shapes with.", "wipe their mouths with", "fashion a shirt", "bring drinks on"], "input": {"head": "serviette", "relation": "ObjectUse"}}
{"generation": "lutefisk is a very good example of a good idea", "references": ["horrible"], "input": {"head": "lutefisk", "relation": "HasProperty"}}
{"generation": "PersonX spends a lot of money. The effect on PersonX will be to make him feel like he's being treated unfairly", "references": ["none", "they run out of money", "they work more"], "input": {"head": "PersonX spends a lot of money", "relation": "xEffect"}}
{"generation": "PersonX camps in the woods. After that, they go to the woods and find a group of", "references": ["PersonX rented an log cabin built for vacation hikers"], "input": {"head": "PersonX camps in the woods", "relation": "isBefore"}}
{"generation": "PersonX falls from grace. Before that, he was a very good player, but now he", "references": ["PersonX cheats the system"], "input": {"head": "PersonX falls from grace", "relation": "isAfter"}}
{"generation": "PersonX takes a step forward. PersonX will be able to use the same abilities as the player,", "references": ["like they are getting somewhere", "brave", "like they are moving", "satisfied"], "input": {"head": "PersonX takes a step forward", "relation": "xReact"}}
{"generation": "PersonX takes place over a period. As a result, others feel that the game is too complex and too complex to", "references": ["none"], "input": {"head": "PersonX takes place over a period", "relation": "oReact"}}
{"generation": "PersonX leaves PersonY's ___ alone. After, others will want to know who is the person who is the person who", "references": ["none"], "input": {"head": "PersonX leaves PersonY's ___ alone", "relation": "oWant"}}
{"generation": "PersonX finds it anywhere. After, others will want to know what's going on", "references": ["none"], "input": {"head": "PersonX finds it anywhere", "relation": "oWant"}}
{"generation": "PersonX has to cancel PersonX's plans. After, others will want to know what's going on", "references": ["to get the message", "to reschedule the activity", "to make other plans", "to find somebody else to do something with", "none"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "oWant"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's landlord does now allow pets.", "PersonX travels a lot and would not be home", "The puppy is too expensive.", "PersonX is allergic to puppies.", "Someone else decided to take the puppy.", "PersonX is allergic to dogs", "PersonX doesn't want to separate the puppy from their mother.", "PersonX lives in an apartment that doesn't allow animals", "PersonX's residency doesn't allow pets.", "PersonX does not know how to take care of dogs"], "input": {"head": "PersonX brings the puppy home", "relation": "HinderedBy"}}
{"generation": "PersonX fails to even go platinum. The effect on others will be much more pronounced", "references": ["none"], "input": {"head": "PersonX fails to even go platinum", "relation": "oEffect"}}
{"generation": "PersonX sees a snake. Before, PersonX needs to get a snake to eat him", "references": ["to walk around.", "none", "to go outside."], "input": {"head": "PersonX sees a snake", "relation": "xNeed"}}
{"generation": "PersonX manages one's ___. Before, PersonX needs to know the name of the person who is the target", "references": ["To have financial management skills", "to get prepared", "to be a good a leader", "To have money", "none"], "input": {"head": "PersonX manages one 's ___", "relation": "xNeed"}}
{"generation": "PersonX brings the ___ to a head. PersonX did this to me, and I'm not going to lie", "references": ["thought", "resolve the problem."], "input": {"head": "PersonX brings the ___ to a head", "relation": "xIntent"}}
{"generation": "PersonX has enough money. Before that, he's been a very good player", "references": ["PersonX is researching buying a new car"], "input": {"head": "PersonX has enough money", "relation": "isAfter"}}
{"generation": "PersonX looks in the pantry. The effect on PersonX will be similar to that of a normal person", "references": ["wants to pick our a snack", "see's what they have", "keeps looking elsewhere", "finds item"], "input": {"head": "PersonX looks in the pantry", "relation": "xEffect"}}
{"generation": "PersonX takes ___ to the er. As a result, others feel that they are being treated unfairly", "references": ["grateful", "beholden", "scared"], "input": {"head": "PersonX takes ___ to the er", "relation": "oReact"}}
{"generation": "PersonX gets a second opinion. PersonX will be the one to decide whether or not to vote for", "references": ["confused, worried about something", "accomplished", "satisfied with his decidion"], "input": {"head": "PersonX gets a second opinion", "relation": "xReact"}}
{"generation": "PersonX seeks PersonY answer. The effect on others will be the same", "references": ["gets answer", "none", "gives thanks"], "input": {"head": "PersonX seeks PersonY answer", "relation": "oEffect"}}
{"generation": "PersonX goes to the doctor for a checkup. PersonX is told that he is not going to be able to", "references": ["smart", "Smart", "Conscientious", "Preventative", "nervous", "intelligent"], "input": {"head": "PersonX goes to the doctor for a checkup", "relation": "xAttr"}}
{"generation": "PersonX finds PersonX's car keys. Before, PersonX needs to find the keys to the car", "references": ["to have left them somewhere", "to have lost them", "to locate last place they were in", "to narrow down possible locations"], "input": {"head": "PersonX finds PersonX's car keys", "relation": "xNeed"}}
{"generation": "a pen or pencil can be used for this purpose", "references": ["write their name", "use to write", "to use to record what is needed to buy", "write the order down", "write down the number", "to write down the answers", "write down the words", "write information down", "fill the report card in", "sign the letter"], "input": {"head": "pen or pencil", "relation": "ObjectUse"}}
{"generation": "PersonX scratches the surface. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX scratches the surface", "relation": "oEffect"}}
{"generation": "PersonX accidentally kicked. Before, PersonX needs to be able to use his powers to get to the", "references": ["sits too close", "none", "pulls his seat back"], "input": {"head": "PersonX accidentally kicked", "relation": "xNeed"}}
{"generation": "PersonX forms PersonY opinion. PersonX is a member of the group of people who are the", "references": ["understanding", "judgemental", "opinionated", "thoughtful", "critical", "judgmental"], "input": {"head": "PersonX forms PersonY opinion", "relation": "xAttr"}}
{"generation": "PersonX increases PersonX's ___ at the expense. The effect on others will be reduced by the amount of PersonX's ___", "references": ["none"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "oEffect"}}
{"generation": "PersonX feels better than ever. Before, PersonX needs to be able to play with the same level of detail", "references": ["to exercise", "to eat well", "none"], "input": {"head": "PersonX feels better than ever", "relation": "xNeed"}}
{"generation": "PersonX sees wood. Before that, he sees a tree", "references": ["PersonX walks into a store"], "input": {"head": "PersonX sees wood", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["All the beer is gone.", "PersonX is underage.", "PersonX is in the shower", "The market is closed", "Person X's mother would get really upset if they had a beer", "Person X's Doctor has forbidden them from drinking", "They're underage and can't buy alcohol", "A Judge has forbidden drinking as a condition of Person X's parole", "PersonX lives in a dry town"], "input": {"head": "PersonX gets a beer", "relation": "HinderedBy"}}
{"generation": "PersonX sees wood. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sees wood", "relation": "oEffect"}}
{"generation": "PersonX finds PersonY's father. After, others will want to know who the father is", "references": ["PersonY wants to meet their father", "father tells PersonX they don't have a child called PersonY", "to help him", "to thank him for his service", "to go with person X", "to thank person X"], "input": {"head": "PersonX finds PersonY's father", "relation": "oWant"}}
{"generation": "PersonX comes to light. After, PersonX will want to know if you're a member of the \"F", "references": ["to spend time alone", "to scream because of panic", "to go home before the light goes", "to control the riot", "to do well", "to never trust anyone", "to improve more", "to manage the situation", "to see the world"], "input": {"head": "PersonX comes to light", "relation": "xWant"}}
{"generation": "PersonX reads PersonX's diary. Before that, she writes about her life and her family", "references": ["PersonX wants to analyze their feeling"], "input": {"head": "PersonX reads PersonX's diary", "relation": "isAfter"}}
{"generation": "PersonX drives ___ to the beach. The effect on PersonX will be similar to that of a car accident", "references": ["blinks in the sun", "sees the water", "hands get tired", "encounters much traffic"], "input": {"head": "PersonX drives ___ to the beach", "relation": "xEffect"}}
{"generation": "an illness can be used for a variety of reasons, including:\n\nThe", "references": ["get out of doing", "avoid social obligation", "avoid work", "subject one to much pain", "go to doctor", "rest", "sinning", "cause runny noses"], "input": {"head": "illness", "relation": "ObjectUse"}}
{"generation": "PersonX leaves ___ in PersonY's car. PersonX will be in PersonY's car", "references": ["responsible", "upset"], "input": {"head": "PersonX leaves ___ in PersonY's car", "relation": "xReact"}}
{"generation": "PersonX falls ill. After, others will want to know what happened to him", "references": ["none"], "input": {"head": "PersonX falls ill", "relation": "oWant"}}
{"generation": "PersonX lands on PersonX's leg. PersonX did this to her, and then she was able to get away", "references": ["none"], "input": {"head": "PersonX lands on PersonX's leg", "relation": "xIntent"}}
{"generation": "PersonX puts PersonY in the oven. The effect on PersonX will be the same as the effect on PersonY", "references": ["trialed for murder", "gets jailed"], "input": {"head": "PersonX puts PersonY in the oven", "relation": "xEffect"}}
{"generation": "You are likely to find a ginseng in a lot of places, and you will probably find it", "references": ["medicine chest"], "input": {"head": "ginseng", "relation": "AtLocation"}}
{"generation": "PersonX has a party at PersonY's house. Before that, she's at the party with her boyfriend", "references": ["PersonX decides to throw a surprise party for PersonY"], "input": {"head": "PersonX has a party at PersonY's house", "relation": "isAfter"}}
{"generation": "PersonX waits for PersonY answer. PersonX is the one who answered the question", "references": ["curious", "interested (in Person Y's answer)", "expectant", "anxious", "patient"], "input": {"head": "PersonX waits for PersonY answer", "relation": "xAttr"}}
{"generation": "PersonX gives birth. Before that, she was a child of the family of the late", "references": ["PersonX is in labor one month early"], "input": {"head": "PersonX gives birth", "relation": "isAfter"}}
{"generation": "PersonX rears PersonY's children. After, PersonX will want to know who the children are", "references": ["take a vacation", "protects and provides", "loves children", "enjoy family life", "shows affection"], "input": {"head": "PersonX rears PersonY's children", "relation": "xWant"}}
{"generation": "PersonX studies as much as PersonY could. Before, PersonX needs to be able to read PersonY's mind, and", "references": ["to know how much PersonY studies", "to observe the other person", "schedule time to devote to study.", "to gather study materials", "to apply himself to the study", "acquire study materials.", "to have everything to study"], "input": {"head": "PersonX studies as much as PersonY could", "relation": "xNeed"}}
{"generation": "PersonX makes PersonY change. After, others will want to change PersonX", "references": ["be independent", "tell X thank you", "to yell at X", "exhibit autonomy"], "input": {"head": "PersonX makes PersonY change", "relation": "oWant"}}
{"generation": "PersonX buys the computer. As a result, others feel that the computer is a waste of money", "references": ["none", "overjoyed"], "input": {"head": "PersonX buys the computer", "relation": "oReact"}}
{"generation": "PersonX takes PersonX's stand. After, others will want to know what the hell is going on", "references": ["none"], "input": {"head": "PersonX takes PersonX's stand", "relation": "oWant"}}
{"generation": "PersonX likes fish. After that, he's a bit of a fish", "references": ["PersonX orders the rest to go"], "input": {"head": "PersonX likes fish", "relation": "isBefore"}}
{"generation": "PersonX walks to the bathroom. The effect on PersonX will be similar to that of a normal person", "references": ["gets wet", "turns on the shower", "bowels become empty", "slips on the floor", "bladder becomes empty", "finds the door locked", "gets dry"], "input": {"head": "PersonX walks to the bathroom", "relation": "xEffect"}}
{"generation": "PersonX pulls PersonY's legs. PersonX did this to PersonY's legs", "references": ["to drag them down the hill"], "input": {"head": "PersonX pulls PersonY's legs", "relation": "xIntent"}}
{"generation": "PersonX bullies in school. PersonX did this to her, and she was punished for it", "references": ["to be mean", "to get their way", "to make fun of others"], "input": {"head": "PersonX bullies in school", "relation": "xIntent"}}
{"generation": "PersonX teaches ___ the way. After, PersonX will want to know what you're doing", "references": ["to do something else", "move on to next task", "to go home and rest", "verify other person understood the way"], "input": {"head": "PersonX teaches ___ the way", "relation": "xWant"}}
{"generation": "PersonX gives the ___ PersonY's name. PersonX will be the one who is the one who is the one", "references": ["thoughtful", "relieved", "helpful", "good about themselves"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "xReact"}}
{"generation": "PersonX applies to jobs. PersonX is a job search engine", "references": ["dedicated", "hardworking", "jobless", "smart", "confident", "stressed"], "input": {"head": "PersonX applies to jobs", "relation": "xAttr"}}
{"generation": "PersonX comes to light. PersonX did this to his own name, and he's now a member", "references": ["none"], "input": {"head": "PersonX comes to light", "relation": "xIntent"}}
{"generation": "PersonX is a good swimmer. Before that, he was a good swimmer", "references": ["PersonX goes to the pool"], "input": {"head": "PersonX is a good swimmer", "relation": "isAfter"}}
{"generation": "PersonX orders ___ at a restaurant. After, PersonX will want to know if you're a good person", "references": ["to satisfy a craving", "to eat it", "to eat food", "to wait for the food to come", "to take the leftovers", "to enjoy a meal"], "input": {"head": "PersonX orders ___ at a restaurant", "relation": "xWant"}}
{"generation": "You are likely to find an alcoholic in a bar or restaurant", "references": ["bar", "neighbor's house", "homeless shelter", "prison", "bridge", "park"], "input": {"head": "alcoholic", "relation": "AtLocation"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX's dad told him that dragons are not real.", "PersonX wants to live.", "The dragon does not exist.", "Dragons are not real.", "PersonX is afraid of fire.", "Dragons don't exist.", "The dragon set PersonX on fire.", "The dragons owner told personX to stay away.", "The dragon is not friendly.", "The zookeeper banned personX from the zoo.", "The dragon would wake up."], "input": {"head": "PersonX tickles the dragons tail", "relation": "HinderedBy"}}
{"generation": "PersonX makes a point. Before that, he's been a bit of a dick", "references": ["PersonX stands on their soapbox", "PersonX prepares information for a debate"], "input": {"head": "PersonX makes a point", "relation": "isAfter"}}
{"generation": "a nail contains a small amount of the chemical that causes the nail", "references": ["root", "cuticle", "head", "half moon", "shank", "nailhead", "clinch", "keratin", "matrix"], "input": {"head": "nail", "relation": "MadeUpOf"}}
{"generation": "PersonX sees PersonX's crush. After, others will want to know who is the real person", "references": ["to reject Person X's advances", "to enjoy the day", "to avoid Person X.", "to have fun", "none"], "input": {"head": "PersonX sees PersonX's crush", "relation": "oWant"}}
{"generation": "PersonX reduces PersonY's dependence. PersonX is the same as PersonY, but PersonY is", "references": ["leading", "helpful", "friendly", "nuturing", "irresponsible", "unreliable"], "input": {"head": "PersonX reduces PersonY's dependence", "relation": "xAttr"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is terrified of water due to his mom", "PersonX can't afford a cruise.", "PersonX doesn't have the money.", "PersonX has no vacation time at work.", "PersonX was robbed by a robber and has no money", "PersonX has to work.", "PersonX had their bathingsuit stolen by Larry", "PersonX gets bad sea sickness.", "The cruise is sold out."], "input": {"head": "PersonX takes a cruise", "relation": "HinderedBy"}}
{"generation": "PersonX talks on the phone. Before, PersonX needs to talk to a friend", "references": ["to answer the phone", "to have Y's number", "answers the phone", "to call Y", "get get a call", "calls someone", "dials a number"], "input": {"head": "PersonX talks on the phone", "relation": "xNeed"}}
{"generation": "PersonX sprays PersonX. After, PersonX will want to use the same method as PersonX", "references": ["wash off", "protection", "to smell good", "to dry off", "get a towel", "to change clothes"], "input": {"head": "PersonX sprays PersonX", "relation": "xWant"}}
{"generation": "PersonX puts on PersonY's hat. The effect on others will be different", "references": ["is nice", "none", "lends the hat"], "input": {"head": "PersonX puts on PersonY's hat", "relation": "oEffect"}}
{"generation": "PersonX brings juice to the zoo. Before that, he's been a bit of a jerk", "references": ["PersonX packs juice in a bag"], "input": {"head": "PersonX brings juice to the zoo", "relation": "isAfter"}}
{"generation": "PersonX makes it through the day. PersonX did this to me, and I'm glad I did", "references": ["go home from work", "to move on from a bad event", "to be strong"], "input": {"head": "PersonX makes it through the day", "relation": "xIntent"}}
{"generation": "PersonX walks PersonY to PersonX's car. After, others will want to talk to PersonX", "references": ["drive home", "take a ride with person X", "get in car", "to go out with person X"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "oWant"}}
{"generation": "PersonX becomes intolerable. Before that, he was a very good player", "references": ["PersonX wins all the contests"], "input": {"head": "PersonX becomes intolerable", "relation": "isAfter"}}
{"generation": "PersonX loves ___ with PersonX's heart. Before, PersonX needs to be able to talk to PersonX", "references": ["none", "to have a lot of faith", "to have been adopted by them", "to have grown up there"], "input": {"head": "PersonX loves ___ with PersonX's heart", "relation": "xNeed"}}
{"generation": "PersonX buys the house. As a result, others feel that the house is too small and too expensive", "references": ["happy", "none"], "input": {"head": "PersonX buys the house", "relation": "oReact"}}
{"generation": "PersonX is an old man. PersonX will be the one who will be the one who gets the", "references": ["wore out", "old-timer", "worn out and weary", "ancient"], "input": {"head": "PersonX is an old man", "relation": "xReact"}}
{"generation": "PersonX makes pasta for dinner. Before, PersonX needs to make pasta for dinner", "references": ["purchase a pot", "purchase ingredients"], "input": {"head": "PersonX makes pasta for dinner", "relation": "xNeed"}}
{"generation": "PersonX knows much about PersonY. The effect on PersonX will be similar to that of PersonY", "references": ["tells everybody else", "none", "writes a book"], "input": {"head": "PersonX knows much about PersonY", "relation": "xEffect"}}
{"generation": "PersonX has never been happier. PersonX did this to me, and I'm so glad I did", "references": ["none"], "input": {"head": "PersonX has never been happier", "relation": "xIntent"}}
{"generation": "PersonX fails PersonX's classes. The effect on others will be limited to PersonX's class", "references": ["none"], "input": {"head": "PersonX fails PersonX's classes", "relation": "oEffect"}}
{"generation": "PersonX goes for a walk in the park. Before that, he's seen in the park with his friends", "references": ["PersonX is tired of being inside"], "input": {"head": "PersonX goes for a walk in the park", "relation": "isAfter"}}
{"generation": "PersonX applies for jobs. Before, PersonX needs to be a part of a team", "references": ["to decide where to apply.", "write a CV", "to prepare resume or CV", "to fill forms", "go to a job search website", "to get a resume ready.", "turn on the computer"], "input": {"head": "PersonX applies for jobs", "relation": "xNeed"}}
{"generation": "PersonX gives ___ an f. As a result, others feel that they are being treated unfairly", "references": ["neutral", "angry", "upset"], "input": {"head": "PersonX gives ___ an f", "relation": "oReact"}}
{"generation": "PersonX teaches PersonY the way. After, PersonX will want to know what PersonY is doing", "references": ["to ask PersonY to do it on their own", "to be there for PersonY when they have questions", "for them to learn it", "to guide PersonY all the way", "to test PersonY's knowledge on the way", "to make sure PersonY understands the way", "for them to teach others"], "input": {"head": "PersonX teaches PersonY the way", "relation": "xWant"}}
{"generation": "PersonX is found dead morning at PersonY's home in. Before, PersonX needs to be rescued by the police", "references": ["to get shot", "to die", "be at PersonY's house", "be at their house", "none"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "xNeed"}}
{"generation": "PersonX wins several awards. PersonX will be the first person to win a prize", "references": ["great for winning"], "input": {"head": "PersonX wins several awards", "relation": "xReact"}}
{"generation": "PersonX walks to the park. Before that, he says, \"I'm going to go get", "references": ["PersonX goes out for a walk"], "input": {"head": "PersonX walks to the park", "relation": "isAfter"}}
{"generation": "PersonX reaches behind PersonY. Before, PersonX needs to be able to see PersonY's face", "references": ["establish that the object is behind person y", "talk to PersonY", "to find person Y", "approach PersonY"], "input": {"head": "PersonX reaches behind PersonY", "relation": "xNeed"}}
{"generation": "PersonX increases PersonX's ___ at the expense. PersonX is now able to use the same ability as PersonX", "references": ["powerful", "greedy", "mean", "intelligent", "discontent", "jealous"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "xAttr"}}
{"generation": "PersonX builds something. After, PersonX will want to build something", "references": ["to look at it", "Complete the work", "Finished building work", "to use it", "test it out", "give a gift"], "input": {"head": "PersonX builds something", "relation": "xWant"}}
{"generation": "PersonX sees PersonY naked. After, PersonX will want to see PersonY naked", "references": ["to have sex", "to be intimate", "to touch PersonY", "to apologize", "to turn away", "to fulfill desires"], "input": {"head": "PersonX sees PersonY naked", "relation": "xWant"}}
{"generation": "PersonX gets cancer. Before that, he's been a very good friend of mine", "references": ["PersonX smokes a lot of cigaretts", "PersonX smokes cigarettes", "PersonX smokes heavily"], "input": {"head": "PersonX gets cancer", "relation": "isAfter"}}
{"generation": "PersonX finds ___ later. As a result, others feel that they are being treated unfairly", "references": ["none"], "input": {"head": "PersonX finds ___ later", "relation": "oReact"}}
{"generation": "PersonX plays PersonX's favorite songs. The effect on PersonX will be similar to the effect of a song on a computer", "references": ["smiles", "dances"], "input": {"head": "PersonX plays PersonX's favorite songs", "relation": "xEffect"}}
{"generation": "PersonX sees the animals. PersonX did this to her", "references": ["to see nature", "to learn about other species", "none", "to look and understand"], "input": {"head": "PersonX sees the animals", "relation": "xIntent"}}
{"generation": "PersonX goes to the doctor for a checkup. After that, he goes to the hospital", "references": ["PersonX leaves doctors"], "input": {"head": "PersonX goes to the doctor for a checkup", "relation": "isBefore"}}
{"generation": "PersonX plays nice. After that, he's a bit of a jerk", "references": ["PersonX heads back home"], "input": {"head": "PersonX plays nice", "relation": "isBefore"}}
{"generation": "PersonX moves ___ out of the way is filled by the fact that he's a little too big for", "references": ["trucks", "car", "box", "cars", "rubbish", "the table", "boxes", "the car", "crates"], "input": {"head": "PersonX moves ___ out of the way", "relation": "isFilledBy"}}
{"generation": "PersonX eats it quickly. Before that, he's got a lot of time to eat it", "references": ["PersonX pulls out a massive sub sandwich", "PersonX gets an apple"], "input": {"head": "PersonX eats it quickly", "relation": "isAfter"}}
{"generation": "PersonX gets a burger. After that, he gets a burger", "references": ["PersonX throws up afterwards"], "input": {"head": "PersonX gets a burger", "relation": "isBefore"}}
{"generation": "PersonX speaks the ___ fluently. PersonX is a very good conversationalist, and I think", "references": ["Able", "worldly", "grammatical", "intelligent", "fluent", "Skilled", "native"], "input": {"head": "PersonX speaks the ___ fluently", "relation": "xAttr"}}
{"generation": "PersonX minces words. After, PersonX will want to know what you're doing", "references": ["to take speaking course", "to hide the secret", "to escape trouble", "to speak louder"], "input": {"head": "PersonX minces words", "relation": "xWant"}}
{"generation": "PersonX gets a shot. PersonX did this to me", "references": ["to be protected from illness", "none", "to be healthy"], "input": {"head": "PersonX gets a shot", "relation": "xIntent"}}
{"generation": "PersonX is rather excited. After, PersonX will want to know what the hell is going on", "references": ["to celebrate", "to go camping with friends", "to call some friends", "to play a game"], "input": {"head": "PersonX is rather excited", "relation": "xWant"}}
{"generation": "PersonX has a party at PersonY's house. After that, they go to the party and meet up with the", "references": ["PersonX receives a thank you from PersonY"], "input": {"head": "PersonX has a party at PersonY's house", "relation": "isBefore"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX needs to pass the class.", "PersonX will get kicked out of school.", "PersonX's parent won't allow it.", "Person X gets punished for incomplete homework assignments.", "Person X needs to pass their classes.", "PersonX's parents will be angry."], "input": {"head": "PersonX never did PersonX's homework", "relation": "HinderedBy"}}
{"generation": "PersonX sets PersonY off. Before, PersonX needs to be able to see PersonY's face, but", "references": ["know what makes y tick", "to tease Person Y", "get angry", "none", "to find Person Y"], "input": {"head": "PersonX sets PersonY off", "relation": "xNeed"}}
{"generation": "PersonX gives PersonY a small smile. Before, PersonX needs to be a little more careful with his actions, but", "references": ["none"], "input": {"head": "PersonX gives PersonY a small smile", "relation": "xNeed"}}
{"generation": "PersonX thanks PersonY profusely. As a result, others feel that they are being treated unfairly", "references": ["none", "glad to see manners still exist"], "input": {"head": "PersonX thanks PersonY profusely", "relation": "oReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["Person X doesn't know how to simplify things.", "Person X is too scared to help.", "Person X speeds through everything.", "Person X doesn't follow directions.", "PersonY forbade the chagnes.", "PersonY will not allow the changes."], "input": {"head": "PersonX makes things easier", "relation": "HinderedBy"}}
{"generation": "PersonX stops calling PersonY. After, others will want to know who is the person who is calling PersonX", "references": ["to talk to PersonX", "to find new friends"], "input": {"head": "PersonX stops calling PersonY", "relation": "oWant"}}
{"generation": "PersonX gets a tan. As a result, others feel the same way", "references": ["none"], "input": {"head": "PersonX gets a tan", "relation": "oReact"}}
{"generation": "PersonX gets PersonY's share. The effect on others will be similar", "references": ["stamps their foot", "yells", "is thanked by personX", "fumes", "hopes they like it"], "input": {"head": "PersonX gets PersonY's share", "relation": "oEffect"}}
{"generation": "PersonX tries PersonX's ___ at making. After, PersonX will want to use PersonX's ___ at making", "references": ["to try something else", "put supplies down", "to ask questions", "to see if they succeed", "to tell everyone about it"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "xWant"}}
{"generation": "PersonX likes fish. After, others will want to eat them", "references": ["none"], "input": {"head": "PersonX likes fish", "relation": "oWant"}}
{"generation": "PersonX starts to sink. PersonX will be able to see the player's current position and the", "references": ["scared.", "filthy", "scared"], "input": {"head": "PersonX starts to sink", "relation": "xReact"}}
{"generation": "PersonX takes it to the vet. Before that, he's got to get a new one", "references": ["PersonX notices the dog is sick", "PersonX had a sick dog", "PersonX adopts a puppy"], "input": {"head": "PersonX takes it to the vet", "relation": "isAfter"}}
{"generation": "PersonX puts ___ in a box is filled by the user's own personal data", "references": ["watches", "dishes", "socks", "cups", "toys", "money", "tools", "cookies", "shirts"], "input": {"head": "PersonX puts ___ in a box", "relation": "isFilledBy"}}
{"generation": "PersonX hits by lightning. Before, PersonX needs to be able to use his powers to get to the", "references": ["none", "to go in an open field", "to be outside"], "input": {"head": "PersonX hits by lightning", "relation": "xNeed"}}
{"generation": "a face cleaner can be used for a variety of purposes", "references": ["clean the dishes with.", "wash the dog", "remove eye make up", "clean out the ears", "wash away makeup", "remove dirt from your face", "wash your face clean", "clean shoes with.", "remove dirt and oil", "be healthy", "prevent acne"], "input": {"head": "face cleaner", "relation": "ObjectUse"}}
{"generation": "PersonX improves PersonX's appearance. After, others will want to see PersonX's face", "references": ["none"], "input": {"head": "PersonX improves PersonX's appearance", "relation": "oWant"}}
{"generation": "PersonX makes cakes. After, others will want to make cakes", "references": ["none"], "input": {"head": "PersonX makes cakes", "relation": "oWant"}}
{"generation": "PersonX babysits PersonX's cousin. PersonX is a very nice person, but she's not a", "references": ["Bored", "Happy", "generous", "Familial", "helpful", "kind"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "xAttr"}}
{"generation": "PersonX takes ___ everywhere is filled by the same people", "references": ["pens", "glasses", "a wallet", "umbrellas", "a phone", "deodorant", "mace", "keys"], "input": {"head": "PersonX takes ___ everywhere", "relation": "isFilledBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["person x does not have a pen", "PersonY won't open the door.", "person x lost their voice", "PersonY is legally blind.", "PersonY won't answer the phone.", "PersonY has no arms."], "input": {"head": "PersonX asks PersonY to sign", "relation": "HinderedBy"}}
{"generation": "PersonX makes much money. After that, he's a very good guy", "references": ["PersonX buys a bigger house"], "input": {"head": "PersonX makes much money", "relation": "isBefore"}}
{"generation": "PersonX becomes intolerable. PersonX will be unable to perform any actions that are not in accordance", "references": ["frustrated", "angry", "hated", "unloved"], "input": {"head": "PersonX becomes intolerable", "relation": "xReact"}}
{"generation": "PersonX goes to the post office. PersonX did this to me", "references": ["to mail something.", "to mail a package."], "input": {"head": "PersonX goes to the post office", "relation": "xIntent"}}
{"generation": "PersonX sends PersonY a gift. Before that, PersonY sends PersonX a gift", "references": ["PersonX sees PersonY's birthday circled on the calendar"], "input": {"head": "PersonX sends PersonY a gift", "relation": "isAfter"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["They are too depressed.", "They have to work.", "PersonX's father is too abusive.", "PersonX's girlfriend made him go to a boring activity.", "PersonX is stuck at work.", "PersonX is depressed.", "PersonX is being yelled at by a violent friend.", "They are sad.", "PersonX has class all day.", "PersonX is broke.", "They are sick."], "input": {"head": "PersonX has a pretty good time", "relation": "HinderedBy"}}
{"generation": "a guitar pick can be used for a variety of purposes", "references": ["pluck the strings", "peel a label", "clean under my nails with", "scratch your head", "As a bookmark", "trace for a craft", "pluck at strings", "strum strings", "play guitar", "decorate a scrapbook", "scrape a vegetable", "play the guitar", "As a weapon to slice someone with", "make it sound good", "use in a game of POGS", "to use as a mini frizbee"], "input": {"head": "guitar pick", "relation": "ObjectUse"}}
{"generation": "PersonX makes contact with PersonY. After that, PersonX is able to communicate with PersonY", "references": ["PersonX invites PersonY to their house"], "input": {"head": "PersonX makes contact with PersonY", "relation": "isBefore"}}
{"generation": "PersonX casts ___ before swine. PersonX did this to me", "references": ["none", "casts pearls in office"], "input": {"head": "PersonX casts ___ before swine", "relation": "xIntent"}}
{"generation": "PersonX conducts PersonY investigation. After, PersonX will want to know if PersonX is a good person", "references": ["write a report", "to catch PersonY redhanded", "to make an apprehension", "to find a witness", "to report PersonY to the police", "convict PersonY"], "input": {"head": "PersonX conducts PersonY investigation", "relation": "xWant"}}
{"generation": "PersonX brings PersonY into conflict. Before that, he's a bit of a jerk", "references": ["PersonX saw PersonY steal the pan"], "input": {"head": "PersonX brings PersonY into conflict", "relation": "isAfter"}}
{"generation": "While debate, you would think that the most important thing to do is to", "references": ["state case"], "input": {"head": "debate", "relation": "HasSubEvent"}}
{"generation": "PersonX sees ___ on the street. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX sees ___ on the street", "relation": "oEffect"}}
{"generation": "PersonX starts working. Before, PersonX needs to be able to talk to the other person", "references": ["to have an idea how to do it", "to get a job.", "to have a task", "transportation to their job.", "to hunt for job", "to get hired for job"], "input": {"head": "PersonX starts working", "relation": "xNeed"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is too good of a driver.", "PersonX can't see the black ice.", "PersonX's spouse has parked their car over the patch of black ice.", "PersonX lives where it doesn't know.", "PersonX lives in the tropics.", "PersonX's husband sprinkles salt over the black ice to melt it."], "input": {"head": "PersonX hits a patch of black ice", "relation": "HinderedBy"}}
{"generation": "PersonX decides to read a book. After, others will want to read it", "references": ["none"], "input": {"head": "PersonX decides to read a book", "relation": "oWant"}}
{"generation": "PersonX organizes and ___ collectively. Before, PersonX needs to be able to communicate with other people", "references": ["to prepare for something", "have the skill of organizing", "to have something to organize", "to to collect information about something", "none"], "input": {"head": "PersonX organizes and ___ collectively", "relation": "xNeed"}}
{"generation": "PersonX gives PersonY PersonX's name. PersonX will be the name of the person who is the first person", "references": ["happy", "useful", "happy to have made a friend"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xReact"}}
{"generation": "PersonX argues with PersonX's boyfriend. Before that, he asks her to leave", "references": ["PersonX goes to PersonX's boyfriend's house"], "input": {"head": "PersonX argues with PersonX's boyfriend", "relation": "isAfter"}}
{"generation": "PersonX derives PersonX's name. After, others will want to know who you are", "references": ["none"], "input": {"head": "PersonX derives PersonX's name", "relation": "oWant"}}
{"generation": "PersonX wipes PersonY's forehead. After, PersonX will want to know who you are", "references": ["to pour water on PersonY's head", "to give PersonY some water", "to tell PersonY to go and fight"], "input": {"head": "PersonX wipes PersonY's forehead", "relation": "xWant"}}
{"generation": "PersonX matters to PersonY. The effect on others will be the same", "references": ["has a new friend", "none", "receive help"], "input": {"head": "PersonX matters to PersonY", "relation": "oEffect"}}
{"generation": "PersonX gets a book. Before that, he's a writer", "references": ["PersonX goes to the library"], "input": {"head": "PersonX gets a book", "relation": "isAfter"}}
{"generation": "PersonX meets PersonY for the time. Before that, they meet for the first time", "references": ["PersonX makes appointment with PersonY", "PersonX made an appointment with PersonY", "PersonX walking to the coffee shop"], "input": {"head": "PersonX meets PersonY for the time", "relation": "isAfter"}}
{"generation": "PersonX takes ___ in stride. The effect on others will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX takes ___ in stride", "relation": "oEffect"}}
{"generation": "PersonX conveys PersonY impression. PersonX is a very popular character in the series", "references": ["intellegent", "aware", "talented", "observant", "impersonating", "skilled"], "input": {"head": "PersonX conveys PersonY impression", "relation": "xAttr"}}
{"generation": "PersonX leaves ___ in PersonY's car is filled by a man who is a man", "references": ["books", "cans", "letters", "notes", "papers", "a cat", "book bag", "garbage", "bags", "phone", "keys"], "input": {"head": "PersonX leaves ___ in PersonY's car", "relation": "isFilledBy"}}
{"generation": "PersonX misses PersonX's stop. Before that, he's just a normal person", "references": ["PersonX rides a bus"], "input": {"head": "PersonX misses PersonX's stop", "relation": "isAfter"}}
{"generation": "a chalice can be used for a variety of purposes, including:\n\n\u2022", "references": ["give as a trophy", "present to a king", "drink the blood of a sacrifice", "make friends", "show status", "reflect light as a signal", "make a new game", "get locked up", "put the drink in"], "input": {"head": "chalice", "relation": "ObjectUse"}}
{"generation": "PersonX falls into the wrong hands. PersonX will be able to use the same abilities as the other characters", "references": ["off track", "helpless", "in trouble", "powerless"], "input": {"head": "PersonX falls into the wrong hands", "relation": "xReact"}}
{"generation": "PersonX looks better. After that, I'm not sure if I'll be able to", "references": ["PersonX receives a bunch of compliments", "PersonX takes a picture to put online"], "input": {"head": "PersonX looks better", "relation": "isBefore"}}
{"generation": "PersonX looks at PersonY like that. After, others will want to know what's going on", "references": ["to be left alone", "to talk to PersonX", "talk", "to wonder why PersonX is looking at them like that", "to stare back", "to find out what is going on"], "input": {"head": "PersonX looks at PersonY like that", "relation": "oWant"}}
{"generation": "PersonX really wants. After that, he's going to have to figure out how to", "references": ["PersonX also loves to give"], "input": {"head": "PersonX really wants", "relation": "isBefore"}}
{"generation": "PersonX is feeling sick. PersonX did this to me", "references": ["none"], "input": {"head": "PersonX is feeling sick", "relation": "xIntent"}}
{"generation": "PersonX is much more careful. After that, he's a bit more cautious", "references": ["PersonX avoids further injury"], "input": {"head": "PersonX is much more careful", "relation": "isBefore"}}
{"generation": "PersonX finishes PersonY's homework. PersonX will be able to see the results of PersonY's homework", "references": ["satisfied", "happy with themselves for being there for a friend", "helpful", "happy to do that, but after may be feels why i do that for this person... next time the person should manage their time.."], "input": {"head": "PersonX finishes PersonY's homework", "relation": "xReact"}}
{"generation": "recipient can be found in the following places:\n\nhttp", "references": ["keep gift", "receive gift", "thank gift giver", "except gift", "reply to e mail", "thank giver"], "input": {"head": "recipient", "relation": "CapableOf"}}
{"generation": "PersonX feels better ___. The effect on PersonX will be similar to that of the original game", "references": ["Woke up early", "get's work done", "gets invited to go out", "Drink some coffee", "drinks less medication", "has a good day"], "input": {"head": "PersonX feels better ___", "relation": "xEffect"}}
{"generation": "PersonX blows bubbles. After that, he's a little more aggressive", "references": ["PersonX asks PersonY to blow bubbles too"], "input": {"head": "PersonX blows bubbles", "relation": "isBefore"}}
{"generation": "PersonX leaves ___ in PersonY's car. PersonX did this to PersonY", "references": ["to keep something safe", "none"], "input": {"head": "PersonX leaves ___ in PersonY's car", "relation": "xIntent"}}
{"generation": "PersonX increases PersonY's knowledge. Before, PersonX needs to know PersonY's name, but now it needs", "references": ["to talk to PersonY", "to find out what PersonY already knows", "to read more books", "to understand the knowledge"], "input": {"head": "PersonX increases PersonY's knowledge", "relation": "xNeed"}}
{"generation": "PersonX cuts PersonY's leg. PersonX is then seen running away from the scene", "references": ["mean", "clumsy", "angry", "pain", "injured", "need knife"], "input": {"head": "PersonX cuts PersonY's leg", "relation": "xAttr"}}
{"generation": "PersonX wins every game. As a result, others feel that they are being unfairly treated", "references": ["none"], "input": {"head": "PersonX wins every game", "relation": "oReact"}}
{"generation": "PersonX gives it PersonX's name. After, others will want to know who you are", "references": ["none"], "input": {"head": "PersonX gives it PersonX's name", "relation": "oWant"}}
{"generation": "PersonX walks behind PersonY. The effect on others will be different", "references": ["chases PersonX", "yells in fright", "yells", "walks faster", "none"], "input": {"head": "PersonX walks behind PersonY", "relation": "oEffect"}}
{"generation": "PersonX forms PersonY opinion. PersonX will be the one who decides who gets to be the next", "references": ["learned", "happy"], "input": {"head": "PersonX forms PersonY opinion", "relation": "xReact"}}
{"generation": "PersonX pulls PersonY closer. After that, PersonX pulls PersonY closer", "references": ["PersonX places a kiss on PersonY's lips"], "input": {"head": "PersonX pulls PersonY closer", "relation": "isBefore"}}
{"generation": "PersonX wants to wear. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX wants to wear", "relation": "oEffect"}}
{"generation": "PersonX feels better today. Before, PersonX needs to be able to play with a friend, and it", "references": ["to have rested well", "to have taken their medication", "sleep in bed", "take medication", "to have had a good night", "have a sickness", "take pills"], "input": {"head": "PersonX feels better today", "relation": "xNeed"}}
{"generation": "PersonX practices day and night. PersonX will be available to answer questions and provide feedback", "references": ["accomplished", "tired and wants to rest", "motivated and good about himself."], "input": {"head": "PersonX practices day and night", "relation": "xReact"}}
{"generation": "PersonX is PersonY's maid of honor. The effect on others will be similar to that of a normal maid", "references": ["smiles in satisfaction", "is thanked", "none"], "input": {"head": "PersonX is PersonY's maid of honor", "relation": "oEffect"}}
{"generation": "PersonX gives PersonY PersonX's name. Before, PersonX needs to know PersonY's name", "references": ["to find person y", "none", "to talk to person y"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xNeed"}}
{"generation": "PersonX keeps ___ at bay. The effect on others will be lessened if you are a good person", "references": ["none"], "input": {"head": "PersonX keeps ___ at bay", "relation": "oEffect"}}
{"generation": "PersonX leaves it alone. The effect on PersonX will be similar to that of a normal person", "references": ["none"], "input": {"head": "PersonX leaves it alone", "relation": "xEffect"}}
{"generation": "PersonX sits down next to PersonY. After, others will want to know what's going on", "references": ["to be welcoming", "to tell PersonX the seat is taken", "to converse", "leave", "to move", "to stand up and walk away"], "input": {"head": "PersonX sits down next to PersonY", "relation": "oWant"}}
{"generation": "PersonX wipes PersonY's hands. Before that, he wipes PersonY's hands", "references": ["PersonX spills oil on PersonY's hands"], "input": {"head": "PersonX wipes PersonY's hands", "relation": "isAfter"}}
{"generation": "PersonX wears sandals. The effect on others will be different", "references": ["none"], "input": {"head": "PersonX wears sandals", "relation": "oEffect"}}
{"generation": "PersonX conducts PersonY analysis. The effect on others will be determined by the results of PersonY analysis", "references": ["PersonY is better understood", "none", "PersonY is evaluated"], "input": {"head": "PersonX conducts PersonY analysis", "relation": "oEffect"}}
{"generation": "murder is a crime that is punishable by death", "references": ["illegal", "wrong"], "input": {"head": "murder", "relation": "HasProperty"}}
{"generation": "PersonX buys gas. PersonX did this to me", "references": ["to be able to drive their car", "to use a boat.", "to drive somewhere.", "to drive"], "input": {"head": "PersonX buys gas", "relation": "xIntent"}}
{"generation": "PersonX reluctantly accepted. As a result, others feel that the game is too much of a distraction", "references": ["none", "thankful"], "input": {"head": "PersonX reluctantly accepted", "relation": "oReact"}}
{"generation": "PersonX washes PersonY's car. After that, PersonX goes to the bathroom and removes the clothes", "references": ["PersonX wipes the car dry"], "input": {"head": "PersonX washes PersonY's car", "relation": "isBefore"}}
{"generation": "PersonX blows through town. After, PersonX will want to kill the other two", "references": ["to get way", "to stop", "to get out of the car", "car", "to experience some place new", "city"], "input": {"head": "PersonX blows through town", "relation": "xWant"}}
{"generation": "PersonX mixes ___ with pleasure is filled by the pleasure of the pleasure of the pleasure of the", "references": ["Cake", "bread", "Candy", "biscuits", "bingo balls", "cake"], "input": {"head": "PersonX mixes ___ with pleasure", "relation": "isFilledBy"}}
{"generation": "PersonX kisses ___ on the cheek. PersonX will be the one to kiss the other person", "references": ["happy", "giddy", "happy and loved"], "input": {"head": "PersonX kisses ___ on the cheek", "relation": "xReact"}}
{"generation": "PersonX spends a ___ working. PersonX will be able to use the same abilities as Person X,", "references": ["productive", "accomplished", "brisk", "tired"], "input": {"head": "PersonX spends a ___ working", "relation": "xReact"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX doesn't know the way around.", "PersonX doesn't have a car.", "PersonX doesn't have the money for gas for their car.", "PersonX's roommate has the car today", "PersonX's mechanic is currently fixing the car", "Person X does not have a car.", "PersonX doesn't have enough gas.", "Person X can't drive."], "input": {"head": "PersonX drives around", "relation": "HinderedBy"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PersonX is tired.", "PersonX is lazy.", "PersonX is being operated on by a surgeon", "PersonX's leg is in a cast"], "input": {"head": "PersonX accidentally ran", "relation": "HinderedBy"}}
{"generation": "PersonX brings PersonX's ___ back is filled by the same person who brought the original PersonX", "references": ["handbag", "wallet", "backpack", "car", "money", "station wagon", "posessions", "dog", "phone", "keys", "bike", "cat", "book"], "input": {"head": "PersonX brings PersonX's ___ back", "relation": "isFilledBy"}}
{"generation": "PersonX denies PersonY's existence. After, others will want to know who PersonX is", "references": ["to think of PersonX", "to be acknowledged", "none", "to wonder why PersonX is avoiding them", "to understand"], "input": {"head": "PersonX denies PersonY's existence", "relation": "oWant"}}
{"generation": "PersonX cracks the eggs. PersonX is a very good player, but he's not a", "references": ["capable", "skillful", "content", "Careless", "skilled", "Absent minded"], "input": {"head": "PersonX cracks the eggs", "relation": "xAttr"}}
{"generation": "PersonX develops along lines. As a result, others feel that the game is too complex and too complex to", "references": ["none"], "input": {"head": "PersonX develops along lines", "relation": "oReact"}}
{"generation": "PersonX is twenty minutes late. The effect on others will be minimal", "references": ["will be late for their own agenda", "they are inconvenienced", "have to hold up a meeting", "none", "they lose time waiting"], "input": {"head": "PersonX is twenty minutes late", "relation": "oEffect"}}
{"generation": "PersonX leans back in PersonY's seat. The effect on PersonX will be similar to that of the effect on PersonY", "references": ["gets a dirty or skeptical look from the other person", "gets some rest and relaxation"], "input": {"head": "PersonX leans back in PersonY's seat", "relation": "xEffect"}}
{"generation": "PersonX recovers quickly. PersonX did this to her, but she was able to recover quickly", "references": ["none", "to be ready for what's next"], "input": {"head": "PersonX recovers quickly", "relation": "xIntent"}}
{"generation": "{}. This would not happen if the user was not logged in", "references": ["PERSON y is out of town", "PERSON Y DOES NOT HAVE A PHONE to face time", "PersonY is not available.", "PersonX has to work.", "PersonX is in another country.", "PersonX is too busy.", "PersonX doesn't know where they are."], "input": {"head": "PersonX sees PersonY for the time", "relation": "HinderedBy"}}
{"generation": "PersonX takes place soon. Before, PersonX needs to be able to talk to the other characters", "references": ["to make a commitment", "to make a plan", "to walk in the room", "to sit in their spot"], "input": {"head": "PersonX takes place soon", "relation": "xNeed"}}
{"generation": "PersonX buys dog food. As a result, others feel that the dog food is not good for them", "references": ["none"], "input": {"head": "PersonX buys dog food", "relation": "oReact"}}
{"generation": "a riding boots can be used for this", "references": ["wear while riding the horse", "stop mud from getting on your boots", "keep feet safe on a horse", "donate to charity", "protect feet", "protect feet and legs", "use as a door stop", "ride motorcycle safely", "put on feet", "control riding", "hit someone", "wear while on the horse", "keep mud off your feet", "be comfortable in"], "input": {"head": "riding boots", "relation": "ObjectUse"}}
{"generation": "PersonX bleaches ___ first is filled by the same person, and then by the same person", "references": ["hair", "floor", "handkerchiefs", "socks", "sheets", "shirt", "bathroom", "kitchen", "floors", "tile", "slacks", "shirts"], "input": {"head": "PersonX bleaches ___ first", "relation": "isFilledBy"}}
{"generation": "PersonX reaches behind PersonY. The effect on others will be reversed", "references": ["expresses annoyance", "looks back", "exclaims in surprise", "jumps back", "cuddles", "is comfortable"], "input": {"head": "PersonX reaches behind PersonY", "relation": "oEffect"}}
{"generation": "PersonX scrambles eggs. The effect on PersonX will be similar to that of a normal egg", "references": ["burns food", "becomes full", "gets burned", "leaves stove on", "eats the eggs", "gets dirty from scrambling eggs"], "input": {"head": "PersonX scrambles eggs", "relation": "xEffect"}}
{"generation": "PersonX holds on for dear life. PersonX will be the one to take the lead in the fight against", "references": ["dangered", "tired", "relieved"], "input": {"head": "PersonX holds on for dear life", "relation": "xReact"}}
